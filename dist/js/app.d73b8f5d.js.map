{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/base/eth/utils/revert_errors/zero-ex/spender_revert_errors.js","webpack:///./src/base/eth/utils/configured_bignumber.js","webpack:///./src/base/eth/utils/abi_encoder/abstract_data_types/types/pointer.js","webpack:///./src/base/eth/utils/hex_utils.js","webpack:///./src/base/eth/utils/sign_typed_data_utils.js","webpack:///./src/base/eth/utils/abi_encoder/utils/signature_parser.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/address.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/array.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/bool.js","webpack:///./src/base/eth/utils/abi_encoder/utils/math.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/int.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/pointer.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/static_bytes.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/uint.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_type_factory.js","webpack:///./src/base/eth/utils/log_utils.js","webpack:///./src/base/eth/utils/abi_encoder/utils/constants.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/dynamic_bytes.js","webpack:///./src/abi/BlockWrap.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/ownable_revert_errors.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/proxy_revert_errors.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/iterator.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/signature_validator_revert_errors.js","webpack:///./src/DemoDetectionSwitchImtoken.vue?c6a9","webpack:///./src/utils/ethereumnetworks.js","webpack:///./src/mixins/vue-metamask.js","webpack:///src/DemoDetectionSwitchImtoken.vue","webpack:///./src/DemoDetectionSwitchImtoken.vue?1497","webpack:///./src/DemoDetectionSwitchImtoken.vue","webpack:///./src/main.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/method.js","webpack:///./src/base/eth/utils/abi_encoder/abstract_data_types/types/blob.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/meta_transaction_revert_errors.js","webpack:///./src/base/eth/validations.js","webpack:///./src/base/eth/schemas.js","webpack:///./src/base/eth/utils/address_utils.js","webpack:///./src/base/eth/utils/index.js","webpack:///./src/base/eth/0xassert/index.js","webpack:///./src/abi/ori20.js","webpack:///./src/base/eth/base.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/blocks/blob.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/liquidity_provider_revert_errors.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/blocks/pointer.js","webpack:///./src/base/eth/utils/abi_encoder/utils/queue.js","webpack:///./src/base/eth/types.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/raw_calldata.js","webpack:///./src/base/eth/utils/abi_encoder/abstract_data_types/data_type.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/blocks/set.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/calldata_block.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/transform_erc20_revert_errors.js","webpack:///./src/base/eth/utils/abi_encoder/abstract_data_types/types/set.js","webpack:///./src/base/eth/utils/abi_encoder/calldata/calldata.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/tuple.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/simple_function_registry_revert_errors.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/common_revert_errors.js","webpack:///./src/base/eth/utils/revert_errors/zero-ex/wallet_revert_errors.js","webpack:///./src/abi/CoinDetail.js","webpack:///./src/base/eth/utils/abi_encoder/evm_data_types/string.js","webpack:///./src/DemoDetectionSwitchImtoken.vue?aa06","webpack:///./src/base/eth/utils/revert_error.js","webpack:///./src/base/wallet.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SpenderERC20TransferFromFailedError","token","owner","to","amount","errorData","super","types","type","registerType","config","EXPONENTIAL_AT","DECIMAL_PLACES","orig","_args","set","AbstractPointerDataType","dataItem","factory","destination","parent","this","_destination","_parent","parentBlock","undefined","Error","destinationBlock","generateCalldataBlock","getDataItem","signature","getSignature","parentName","getName","block","calldata","rules","destinationOffsetBuf","popWord","destinationOffsetHex","destinationOffsetRelative","parseInt","HEX_BASE","destinationOffsetAbsolute","toAbsoluteOffset","currentOffset","getOffset","setOffset","generateValue","WORD_LENGTH","WORD_CEIL","BigNumber","pow","hexUtils","concat","random","leftPad","rightPad","invert","hash","size","toHex","isHex","args","Buffer","map","h","_size","buf","from","b","start","end","hex","substr","sliceStart","Math","max","sliceEnd","substring","ceil","isBuffer","toString","test","_n","isNegative","abs","plus","mod","isHexPrefixed","str","stripHexPrefix","parseNode","node","components","children","child","component","generateDataItemFromSignature","char","sibling","dataTypeFactory","_SIZE_KNOWN_AT_COMPILE_TIME","matchType","Address","valueBuf","encodedValueBuf","constants","EVM_WORD_WIDTH_IN_BYTES","valueBufPadded","_DECODED_ADDRESS_OFFSET_IN_BYTES","valueLowercase","_DEFAULT_VALUE","_ADDRESS_SIZE_IN_BYTES","isArray","arrayElementType","arrayLength","_decodeElementTypeAndLengthFromType","_elementType","_MATCHER","matches","exec","DEC_BASE","_computeSignature","isDetailed","getSignatureType","lastIndexOfScopeDelimiter","lastIndexOf","isScopedName","shortName","detailedSignature","elementDataItem","elementComponents","elementDataType","getFactory","elementSignature","_arrayLength","RegExp","Bool","encodedValue","valueHex","valueNumber","isEqualTo","sanityCheckBigNumberRange","value_","minValue","maxValue","isGreaterThan","isLessThan","isNaN","bigNumberToPaddedBuffer","toFixed","encodeNumericValue","isGreaterThanOrEqualTo","encodedPositiveValue","valueBin","times","BIN_BASE","invertedValueBin","repeat","EVM_WORD_WIDTH_IN_BITS","bit","invertedValue","negativeValue","safeEncodeNumericValue","decodeNumericValue","isValueNegative","positiveValue","safeDecodeNumericValue","_width","_decodeWidthFromType","_minValue","_WIDTH_TO_MIN_VALUE","_maxValue","_WIDTH_TO_MAX_VALUE","width","_DEFAULT_WIDTH","NUMBER_OF_BYTES_IN_INT8","toNumber","defaultValue","Int","_MAX_WIDTH","assign","Array","_x","exponentiatedBy","minus","destDataType","parentDataType","destDataItem","getDefaultValue","Bytes","_sanityCheckValue","valuePadded","EMPTY_EVM_WORD_BUFFER","byteLength","_MIN_VALUE","NUMBER_OF_BYTES_IN_UINT8","Uint","EvmDataTypeFactory","getInstance","abi","_instance","dataType","isStatic","pointerToDataType","input","consolidateDataItemsIntoSingle","dataItems","createMethod","methodName","output","methodInput","consolidateDataItemsIntoArray","methodOutput","methodAbi","inputs","outputs","constant","payable","stateMutability","DEFAULT_TERMINAL_WIDTH","TERMINAL_WIDTH","process","logUtils","console","log","text","padStr","padLength","padLengthEnd","leftPadded","padStart","padded","padEnd","warn","columnarData","formattedColumnarData","columnOrColumns","_rowName","toLocaleString","table","arg","gray","Date","toLocaleTimeString","HEX_SELECTOR_LENGTH_IN_CHARS","HEX_SELECTOR_LENGTH_IN_BYTES","HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA","DEFAULT_DECODING_RULES","shouldConvertStructsToObjects","isStrictMode","DEFAULT_ENCODING_RULES","shouldOptimize","shouldAnnotate","EMPTY_EVM_WORD_STRING","DynamicBytesDataType","wordsToStoreValuePadded","bytesToStoreValuePadded","lengthBuf","lengthBufPadded","lengthHex","popWords","BlockWrap","webThree","ethereumCore","debug","accounts","gas","gasPrice","w3","tokens","contracts","x","wallet_connect","wallet","isConnected","utils","isAddress","_metamask","isUnlocked","e","toChecksumAddress","gas_price","_setOtherRrc","setResource","address","contract","eth","Contract","setProvider","String","toaddress","conf","sendTransaction","on","confirmHandler","catch","errorHandler","erc20_address","NewToken","send_amount","transfer","spender_address","amount_sun","am","toBN","approve","amc","val","trc20_coin","getTokenBalanceWei","getAccountAddress","keccak256","soliditySha3","getBalance","getCoinDetail","getMyCoinDetail","erc20","me","a","balanceOf","decimals","symbol","detail","setHolder","isLoggedIn","initCoinDetail","conver","amountCode","contr","init","setBlockLink","payload","holder","message","vueInstance","confirm","broadcast","err","boardcastHandler","encryptedMessage","account_address","callback","request","method","params","then","decryptedMessage","resultcb","personal","sign","w3Utils","fromUtf8","msg","rs","encryptionPublicKey","bufferToHex","JSON","stringify","encrypt","token_conf","success","ishex","isHexStrict","chainId","conf2","chainID","iconUrls","chain_conf","ensureChainParameterPatch","IMTOKEN","addError","switchError","code","MigrateCallFailedError","target","resultData","OnlyOwnerError","sender","NotImplementedError","selector","InvalidBootstrapCallerError","caller","expectedCaller","InvalidDieCallerError","BootstrapCallFailedError","BaseIterator","root","_root","_queue","_createQueue","queue","pushBack","getMembers","member","mergeFront","getAlias","dependency","getDependency","mergeBack","pushFront","iterator","next","nextBlock","done","CalldataIterator","popFront","ReverseCalldataIterator","popBack","SignatureValidationErrorCodes","SignatureValidationError","signerAddress","render","_vm","_h","$createElement","_c","_self","attrs","signedInConnection","connect_metamask","_v","add_network","_s","status_connection","metamaskInstalled","detected_x","error_message","$event","add_token","ysl","ysl2","usdf","event_x","netID","my_address","coin_bal_ysl","coin_decimal","send_token_trig","coin_approv_bal1","approve_coin","coin_bal_usd","coin_approv_bal2","approve_coin_2","eth_bal","send_coin_trig","signing","sign_data","initData","staticRenderFns","networks","ExplainNetworkById","id","k","findIndex","networkId","GetMetaNetConfig","f","chainName","nativeCurrency","blockExplorerUrls","infoURL","rpcUrls","rpc","ethereum","wsProvider","blockLink","Web3Interval","AccountInterval","NetworkInterval","stateLog","isMetamaskInterfaced","onboarding","MetamaskMsg","LOAD_METAMASK_WALLET_ERROR","EMPTY_METAMASK_ACCOUNT","NETWORK_ERROR","METAMASK_NOT_INSTALL_OR_DISCONNECTED","METAMASK_TEST_NET","METAMASK_MAIN_NET","METAMASK_SWITCH_NET","USER_DENIED_ACCOUNT_AUTHORIZATION","REJECTED_BY_USER","PARAMETERS_WERE_INVALID","INTERNAL_ERROR","USER_DENIED","DISCONNECTED","metamask_debug","walletSupports","imtoken","metamask","methods","$emit","accList","requiredId","monitor","init_blockwrap","sign_in","connect_ws","addEventListener","checkWeb3MetaMask","once","setTimeout","checkError","clearInterval","installed","provider","w3tokenc","web3","enable","w3imtoken","checkFinalStep","setDebug","setHandlers","handleConfirm","handleBroadcast","handleErrors","setWallet","UNKNOWN","METAMASK","notify_account_changed","location","reload","connectInfo","error","eventListener","handleAccountsChanged","acc","notify_block_installed","setAccounts","receipt","confirmation_num","acct","getAccounts","network_id","net","getId","network","forEach","url","wsHandler","ws_provider","blocknumber","network_Id","isMetaMaskInstalled","stopOnboarding","startOnboarding","$nextTick","async","comments","mixins","image","agent_contract","networkConf","$on","connect_wallet","metamask_detect_chain_process_flow","getCoinPlatform","usd","c_ysl","cd_ysl","getContractToken","c_usd","cd_usd","balance","runAllowanceAmount","kf2","approvalStatus","kf1","approvedAmount","isUnlimited","decimal","tuaddress","approveTokenUnlimited","take","approveToken","sendCoin","t_ysl_address","sendToken","metamask_message_personal_sign","res","matchChainId","registerOnBoard","token_data","metamask_add_token","options","$mount","MethodDataType","methodDataItem","_methodSignature","_methodSelector","_computeSelector","returnDataItem","_returnDataType","encode","decode","valueAsArray","returnData","returndata","returnValues","returnValuesAsArray","returnValueDataItem","memberSignature","_computeSignatureOfMembers","methodSignature","AbstractBlobDataType","sizeKnownAtCompileTime","_sizeKnownAtCompileTime","encodeValue","decodeValue","InvalidMetaTransactionsArrayLengthsError","mtxCount","signatureCount","MetaTransactionAlreadyExecutedError","mtxHash","executedBlockNumber","MetaTransactionUnsupportedFunctionError","MetaTransactionWrongSenderError","expectedSender","MetaTransactionExpiredError","time","expirationTime","MetaTransactionGasPriceError","minGasPrice","maxGasPrice","MetaTransactionInsufficientEthError","ethBalance","ethRequired","MetaTransactionInvalidSignatureError","errData","MetaTransactionCallFailedError","callData","schemas","numberSchema","addressSchema","callDataSchema","hexSchema","ecSignatureParameterSchema","ecSignatureSchema","eip712DomainSchema","eip712TypedDataSchema","indexFilterValuesSchema","orderCancellationRequestsSchema","orderFillOrKillRequestsSchema","orderFillRequestsSchema","orderHashSchema","orderSchema","signedOrderSchema","signedOrdersSchema","ordersSchema","blockParamSchema","blockRangeSchema","tokenSchema","jsNumber","pagedRequestOptsSchema","ordersRequestOptsSchema","orderBookRequestSchema","orderConfigRequestSchema","assetPairsRequestOptsSchema","txDataSchema","paginatedCollectionSchema","relayerApiErrorResponseSchema","relayerApiFeeRecipientsResponseSchema","relayerApiOrderSchema","relayerApiOrdersSchema","relayerApiOrderConfigPayloadSchema","relayerApiOrderConfigResponseSchema","relayerApiOrderbookResponseSchema","relayerApiAssetDataPairsResponseSchema","relayerApiAssetDataTradeInfoSchema","relayerApiOrdersChannelSubscribeSchema","relayerApiOrdersChannelSubscribePayloadSchema","relayerApiOrdersChannelUpdateSchema","relayerApiOrdersResponseSchema","relayerApiAssetDataPairsSchema","zeroExTransactionSchema","exchangeProxyMetaTransactionSchema","wholeNumberSchema","v4SignatureSchema","v4RfqOrderSchema","v4RfqSignedOrderSchema","values","newSchemas","_validator","schemaId","addSchema","filter","schemaObjectOrArray","_schemas","endsWith","instance","schema","isValid","validate","parse","BASIC_ADDRESS_REGEX","SAME_CASE_ADDRESS_REGEX","ADDRESS_LENGTH","addressUtils","isValidChecksummedAddress","isChecksumAddress","HEX_REGEX","schemaValidator","assert","variableName","isBigNumber","typeAssertionMessage","isNumber","hasDecimals","decimalPlaces","stringEnum","enumValues","doesBelongToStringEnum","enumValuesAsStrings","enumValue","enumValuesAsString","join","errMsg","finalbignum","_isBigNumber","isWeb3Provider","send","sendAsync","subSchemas","validationResult","hasValidationErrors","errors","regex","isValidUrl","isValidUri","Number","isInteger","condition","Ori20Events","contractName","supportedProvider","webww3","__debug","constructorArgs","_address","_errorHandler","_broadcastHandler","_confirmHandler","_receiptListSuccess","_receiptListFailure","_provider","_contract","_ww3","bool","bw","_blockwrap","ww3","ABI","_methodABIIndex","obj","__eth_contract_Ori20","contract_address","contractInstance","anonymous","indexed","account","self","isString","promizz","addMinter","onBroadcast","confirmationNumber","onConfirmation","pushReceiptSuccess","onError","catchErro","gasAmount","estimateGas","spender","allowance","isNumberOrBigNumber","burn","burnFrom","cap","subtractedValue","decreaseAllowance","getDecimals","gov","addedValue","increaseAllowance","isMinter","mint","removeMinter","renounceMinter","tokenName","tokenSymbol","totalSupply","recipient","transferFrom","BlobCalldataBlock","blob","headerSizeInBytes","bodySizeInBytes","_blob","LiquidityProviderIncompleteSellError","providerAddress","makerToken","takerToken","sellAmount","boughtAmount","minBuyAmount","NoLiquidityProviderForMarketError","xAsset","yAsset","PointerCalldataBlock","_EMPTY_HEADER_SIZE","_DEPENDENT_PAYLOAD_SIZE_IN_BYTES","_dependency","_aliasFor","destinationOffset","getOffsetInBytes","parentOffset","parentHeaderSize","getHeaderSizeInBytes","pointer","pointerHex","pointerBuf","pointerBufPadded","_setName","dependencyRawData","getRawData","rawDataComponents","RAW_DATA_START","RAW_DATA_END","rawData","Queue","_store","unshift","backElement","q","SubscriptionErrors","OpCode","AbiType","BlockParamLiteral","SolidityTypes","hasSelector","_value","_selector","_scopes","_INITIAL_OFFSET","_offset","selectorBuf","lengthInBytes","popBegin","popEnd","wordInBytes","popBytes","offsetInBytes","relativeOffset","scopeOffset","peekFront","absoluteOffset","sizeInBytes","_dataItem","_factory","rules_","setSelector","setRoot","encodedCalldata","rawCalldata","getSizeInBytes","valuesAsArray","SetCalldataBlock","_members","_header","memberBuffer","members","header","_setHeaderSize","CalldataBlock","_name","_signature","_parentName","_offsetInBytes","_headerSizeInBytes","_bodySizeInBytes","getBodySizeInBytes","InvalidTransformDataErrorCode","InsufficientEthAttachedError","ethAttached","ethNeeded","IncompleteTransformERC20Error","outputToken","outputTokenAmount","minOutputTokenAmount","NegativeTransformERC20OutputError","outputTokenLostAmount","TransformerFailedError","transformer","transformerData","OnlyCallableByDeployerError","deployer","InvalidExecutionContextError","actualContext","expectedContext","InvalidTransformDataError","errorCode","transformData","IncompleteFillSellQuoteError","sellToken","soldAmount","IncompleteFillBuyQuoteError","buyToken","buyAmount","InsufficientTakerTokenError","tokenBalance","tokensNeeded","InsufficientProtocolFeeError","InvalidERC20AssetDataError","assetData","WrongNumberOfTokensReceivedError","actual","expected","InvalidTokenReceivedError","InvalidTakerFeeTokenError","AbstractSetDataType","_memberIndexByName","_isArray","_arrayElementType","_createMembersWithLength","_createMembersWithKeys","_generateCalldataBlockFromArray","_generateCalldataBlockFromObject","arrayLengthBuf","arrayLengthHex","startScope","idx","memberValue","endScope","dependentMember","lenBuf","setHeader","memberCalldataBlocks","memberBlock","setMembers","memberIndex","memberName","memberIndexByName","memberNames","memberItem","nameIdx","childDataItem","range","memberDataItem","memberType","Calldata","_rules","_optimize","offset","hexString","_toHumanReadableCallData","_toEvmCompatibeCallDataHex","blocksByHash","dependencyBlockHashBuf","computeHash","dependencyBlockHash","blockWithSameHash","setAlias","blockHashBuf","blockHash","selectorBuffer","valueBufs","toBuffer","combinedBuffers","hexValue","offsetPadding","valuePadding","namePadding","evmWordStartIndex","emptySize","functionName","getParentName","prettyName","replace","offsetStr","valueStr","nameStr","lineStr","TupleDataType","Tuple","NotInRollbackHistoryError","targetImpl","OnlyCallableBySelfError","IllegalReentrancyError","reentrancyFlags","WalletExecuteCallFailedError","callTarget","callValue","WalletExecuteDelegateCallFailedError","CoinDetail","dec","sym","unlimited","bal","abal","owner_address","g","setSpenderExtreme","setSpenderNormal","coin_owner","isAll","_setDeep","showAllowance","showAllowed","path","setrecursively","properties","split","StringDataType","valueLengthInBytes","lengthHexPadded","RevertError","declaration","raw","createErrorMessage","declarationToAbi","_raw","setPrototypeOf","bytes","coerce","_bytes","_typeRegistry","RawRevertError","decoder","revertClass","force","createDecoder","typeName","constructor","_isRawType","toSelector","toSignature","arguments","other","_other","_isAnyType","keys","_getArgumentByName","checkArgEquality","_hasAllArgumentValues","encoder","createEncoder","v","argType","inner","StringRevertError","encoded","_values","argList","argData","lhs","rhs","equals","normalizeAddress","normalizeBytes","baseType","isFixedLength","slhs","srhs","eq","addr","ADDRESS_SIZE","toLowerCase","valuesArray","argTypes","WalletSupport"],"mappings":"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","file":"js/app.d73b8f5d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"56d7\",\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { RevertError } from '../../revert_error';\nexport class SpenderERC20TransferFromFailedError extends RevertError {\n    constructor(token, owner, to, amount, errorData) {\n        super('SpenderERC20TransferFromFailedError', 'SpenderERC20TransferFromFailedError(address token, address owner, address to, uint256 amount, bytes errorData)', {\n            token,\n            owner,\n            to,\n            amount,\n            errorData,\n        });\n    }\n}\nconst types = [SpenderERC20TransferFromFailedError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import * as B from 'bignumber.js';\nB.BigNumber.config({\n    EXPONENTIAL_AT: 1000,\n    DECIMAL_PLACES: 78,\n});\n(orig => (B.BigNumber.config = (..._args) => orig({})))(B.BigNumber.config);\nB.BigNumber.set = B.BigNumber.config;\nexport { B };\n","import * as ethUtil from 'ethereumjs-util';\nimport { PointerCalldataBlock } from '../../calldata/blocks/pointer';\nimport { constants } from '../../utils/constants';\nimport { DataType } from '../data_type';\nexport class AbstractPointerDataType extends DataType {\n    constructor(dataItem, factory, destination, parent) {\n        super(dataItem, factory);\n        this._destination = destination;\n        this._parent = parent;\n    }\n    generateCalldataBlock(value, parentBlock) {\n        if (parentBlock === undefined) {\n            throw new Error(`DependentDataType requires a parent block to generate its block`);\n        }\n        const destinationBlock = this._destination.generateCalldataBlock(value, parentBlock);\n        const name = this.getDataItem().name;\n        const signature = this.getSignature();\n        const parentName = parentBlock.getName();\n        const block = new PointerCalldataBlock(name, signature, parentName, destinationBlock, parentBlock);\n        return block;\n    }\n    generateValue(calldata, rules) {\n        const destinationOffsetBuf = calldata.popWord();\n        const destinationOffsetHex = ethUtil.bufferToHex(destinationOffsetBuf);\n        const destinationOffsetRelative = parseInt(destinationOffsetHex, constants.HEX_BASE);\n        const destinationOffsetAbsolute = calldata.toAbsoluteOffset(destinationOffsetRelative);\n        const currentOffset = calldata.getOffset();\n        calldata.setOffset(destinationOffsetAbsolute);\n        const value = this._destination.generateValue(calldata, rules);\n        calldata.setOffset(currentOffset);\n        return value;\n    }\n    isStatic() {\n        return true;\n    }\n}\n","import * as crypto from 'crypto';\nimport * as ethUtil from 'ethereumjs-util';\nimport { B } from './configured_bignumber';\nconst WORD_LENGTH = 32;\nconst WORD_CEIL = new B.BigNumber(2).pow(WORD_LENGTH * 8);\nexport const hexUtils = {\n    concat,\n    random,\n    leftPad,\n    rightPad,\n    invert,\n    slice,\n    hash,\n    size,\n    toHex,\n    isHex,\n};\nfunction concat(...args) {\n    return ethUtil.bufferToHex(Buffer.concat(args.map(h => ethUtil.toBuffer(h))));\n}\nfunction random(_size = WORD_LENGTH) {\n    return ethUtil.bufferToHex(crypto.randomBytes(_size));\n}\nfunction leftPad(n, _size = WORD_LENGTH) {\n    return ethUtil.bufferToHex(ethUtil.setLengthLeft(ethUtil.toBuffer(hexUtils.toHex(n)), _size));\n}\nfunction rightPad(n, _size = WORD_LENGTH) {\n    return ethUtil.bufferToHex(ethUtil.setLengthRight(ethUtil.toBuffer(hexUtils.toHex(n)), _size));\n}\nfunction invert(n, _size = WORD_LENGTH) {\n    const buf = ethUtil.setLengthLeft(ethUtil.toBuffer(hexUtils.toHex(n)), _size);\n    return ethUtil.bufferToHex(Buffer.from(buf.map(b => ~b)));\n}\nfunction slice(n, start, end) {\n    const hex = hexUtils.toHex(n).substr(2);\n    const sliceStart = start >= 0 ? start * 2 : Math.max(0, hex.length + start * 2);\n    let sliceEnd = hex.length;\n    if (end !== undefined) {\n        sliceEnd = end >= 0 ? end * 2 : Math.max(0, hex.length + end * 2);\n    }\n    return '0x'.concat(hex.substring(sliceStart, sliceEnd));\n}\nfunction hash(n) {\n    return ethUtil.bufferToHex(ethUtil.keccak256(ethUtil.toBuffer(hexUtils.toHex(n))));\n}\nfunction size(hex) {\n    return Math.ceil((hex.length - 2) / 2);\n}\nfunction toHex(n, _size = WORD_LENGTH) {\n    if (Buffer.isBuffer(n)) {\n        return `0x${n.toString('hex')}`;\n    }\n    if (typeof n === 'string' && /^0x[0-9a-f]+$/i.test(n)) {\n        return n;\n    }\n    let _n = new B.BigNumber(n);\n    if (_n.isNegative()) {\n        _n = new B.BigNumber(invert(toHex(_n.abs()), _size).substr(2), 16).plus(1).mod(WORD_CEIL);\n    }\n    return `0x${_n.toString(16)}`;\n}\nfunction isHex(s) {\n    return /^0x[0-9a-f]+$/i.test(s);\n}\nexport function isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n    }\n    return str.slice(0, 2) === '0x';\n}\nexport function stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","import * as ethUtil from 'ethereumjs-util';\nimport * as ethers from 'ethers';\nimport { B } from './configured_bignumber';\nexport const signTypedDataUtils = {\n    generateTypedDataHash(typedData) {\n        return ethUtil.keccak256(Buffer.concat([\n            Buffer.from('1901', 'hex'),\n            signTypedDataUtils._structHash('EIP712Domain', typedData.domain, typedData.types),\n            signTypedDataUtils._structHash(typedData.primaryType, typedData.message, typedData.types),\n        ]));\n    },\n    generateTypedDataHashWithoutDomain(typedData) {\n        return signTypedDataUtils._structHash(typedData.primaryType, typedData.message, typedData.types);\n    },\n    generateDomainHash(domain) {\n        return signTypedDataUtils._structHash('EIP712Domain', domain, {\n            EIP712Domain: [\n                { name: 'name', type: 'string' },\n                { name: 'version', type: 'string' },\n                { name: 'chainId', type: 'uint256' },\n                { name: 'verifyingContract', type: 'address' },\n            ],\n        });\n    },\n    _findDependencies(primaryType, types, found = []) {\n        if (found.includes(primaryType) || types[primaryType] === undefined) {\n            return found;\n        }\n        found.push(primaryType);\n        for (const field of types[primaryType]) {\n            for (const dep of signTypedDataUtils._findDependencies(field.type, types, found)) {\n                if (!found.includes(dep)) {\n                    found.push(dep);\n                }\n            }\n        }\n        return found;\n    },\n    _encodeType(primaryType, types) {\n        let deps = signTypedDataUtils._findDependencies(primaryType, types);\n        deps = deps.filter(d => d !== primaryType);\n        deps = [primaryType].concat(deps.sort());\n        let result = '';\n        for (const dep of deps) {\n            result += `${dep}(${types[dep].map(({ name, type }) => `${type} ${name}`).join(',')})`;\n        }\n        return result;\n    },\n    _encodeData(primaryType, data, types) {\n        const encodedTypes = ['bytes32'];\n        const encodedValues = [signTypedDataUtils._typeHash(primaryType, types)];\n        for (const field of types[primaryType]) {\n            const value = data[field.name];\n            if (field.type === 'string') {\n                const hashValue = ethUtil.keccak256(Buffer.from(value));\n                encodedTypes.push('bytes32');\n                encodedValues.push(hashValue);\n            }\n            else if (field.type === 'bytes') {\n                const hashValue = ethUtil.keccak256(ethUtil.toBuffer(value));\n                encodedTypes.push('bytes32');\n                encodedValues.push(hashValue);\n            }\n            else if (types[field.type] !== undefined) {\n                encodedTypes.push('bytes32');\n                const hashValue = ethUtil.keccak256(ethUtil.toBuffer(signTypedDataUtils._encodeData(field.type, value, types)));\n                encodedValues.push(hashValue);\n            }\n            else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n                throw new Error('Arrays currently unimplemented in encodeData');\n            }\n            else {\n                encodedTypes.push(field.type);\n                const normalizedValue = signTypedDataUtils._normalizeValue(field.type, value);\n                encodedValues.push(normalizedValue);\n            }\n        }\n        return ethers.utils.defaultAbiCoder.encode(encodedTypes, encodedValues);\n    },\n    _normalizeValue(type, value) {\n        const STRING_BASE = 10;\n        if (type === 'uint256') {\n            if (B.BigNumber.isBigNumber(value)) {\n                return value.toString(STRING_BASE);\n            }\n            return new B.BigNumber(value).toString(STRING_BASE);\n        }\n        return value;\n    },\n    _typeHash(primaryType, types) {\n        return ethUtil.keccak256(Buffer.from(signTypedDataUtils._encodeType(primaryType, types)));\n    },\n    _structHash(primaryType, data, types) {\n        return ethUtil.keccak256(ethUtil.toBuffer(signTypedDataUtils._encodeData(primaryType, data, types)));\n    },\n};\n","import * as _ from 'lodash';\nfunction parseNode(node) {\n    const components = [];\n    _.each(node.children, (child) => {\n        const component = parseNode(child);\n        components.push(component);\n    });\n    const dataItem = {\n        name: node.name,\n        type: node.value,\n    };\n    if (!_.isEmpty(components)) {\n        dataItem.components = components;\n    }\n    return dataItem;\n}\nexport function generateDataItemFromSignature(signature) {\n    if (_.isEmpty(signature)) {\n        throw new Error(`Cannot parse data item from empty signature, ''`);\n    }\n    let node = {\n        name: '',\n        value: '',\n        children: [],\n    };\n    for (const char of signature) {\n        switch (char) {\n            case '(':\n                const child = {\n                    name: '',\n                    value: '',\n                    children: [],\n                    parent: node,\n                };\n                node.value = 'tuple';\n                node.children.push(child);\n                node = child;\n                break;\n            case ')':\n                node = node.parent;\n                break;\n            case ',':\n                const sibling = {\n                    name: '',\n                    value: '',\n                    children: [],\n                    parent: node.parent,\n                };\n                node.parent.children.push(sibling);\n                node = sibling;\n                break;\n            case ' ':\n                node.name = node.value;\n                node.value = '';\n                break;\n            default:\n                node.value += char;\n                break;\n        }\n    }\n    return parseNode(node);\n}\n","import { SolidityTypes } from '../../../types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nexport class AddressDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, AddressDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!AddressDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Address with bad input: ${dataItem}`);\n        }\n    }\n    static matchType(type) {\n        return type === SolidityTypes.Address;\n    }\n    encodeValue(value) {\n        if (!ethUtil.isValidAddress(value)) {\n            throw new Error(`Invalid address: '${value}'`);\n        }\n        const valueBuf = ethUtil.toBuffer(value);\n        const encodedValueBuf = ethUtil.setLengthLeft(valueBuf, constants.EVM_WORD_WIDTH_IN_BYTES);\n        return encodedValueBuf;\n    }\n    decodeValue(calldata) {\n        const valueBufPadded = calldata.popWord();\n        const valueBuf = valueBufPadded.slice(AddressDataType._DECODED_ADDRESS_OFFSET_IN_BYTES);\n        const value = ethUtil.bufferToHex(valueBuf);\n        const valueLowercase = _.toLower(value);\n        return valueLowercase;\n    }\n    getDefaultValue() {\n        return AddressDataType._DEFAULT_VALUE;\n    }\n    getSignatureType() {\n        return SolidityTypes.Address;\n    }\n}\nAddressDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nAddressDataType._ADDRESS_SIZE_IN_BYTES = 20;\nAddressDataType._DECODED_ADDRESS_OFFSET_IN_BYTES = constants.EVM_WORD_WIDTH_IN_BYTES - AddressDataType._ADDRESS_SIZE_IN_BYTES;\nAddressDataType._DEFAULT_VALUE = '0x0000000000000000000000000000000000000000';\n","import * as _ from 'lodash';\nimport { AbstractSetDataType } from '../abstract_data_types/types/set';\nimport { constants } from '../utils/constants';\nexport class ArrayDataType extends AbstractSetDataType {\n    constructor(dataItem, dataTypeFactory) {\n        const isArray = true;\n        const [arrayElementType, arrayLength] = ArrayDataType._decodeElementTypeAndLengthFromType(dataItem.type);\n        super(dataItem, dataTypeFactory, isArray, arrayLength, arrayElementType);\n        this._elementType = arrayElementType;\n    }\n    static matchType(type) {\n        return ArrayDataType._MATCHER.test(type);\n    }\n    static _decodeElementTypeAndLengthFromType(type) {\n        const matches = ArrayDataType._MATCHER.exec(type);\n        if (matches === null || matches.length !== 3) {\n            throw new Error(`Could not parse array: ${type}`);\n        }\n        else if (matches[1] === undefined) {\n            throw new Error(`Could not parse array type: ${type}`);\n        }\n        else if (matches[2] === undefined) {\n            throw new Error(`Could not parse array length: ${type}`);\n        }\n        const arrayElementType = matches[1];\n        const arrayLength = _.isEmpty(matches[2]) ? undefined : parseInt(matches[2], constants.DEC_BASE);\n        return [arrayElementType, arrayLength];\n    }\n    getSignatureType() {\n        return this._computeSignature(false);\n    }\n    getSignature(isDetailed) {\n        if (_.isEmpty(this.getDataItem().name) || !isDetailed) {\n            return this.getSignatureType();\n        }\n        const name = this.getDataItem().name;\n        const lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n        const isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n        const shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n        const detailedSignature = `${shortName} ${this._computeSignature(isDetailed)}`;\n        return detailedSignature;\n    }\n    _computeSignature(isDetailed) {\n        const elementDataItem = {\n            type: this._elementType,\n            name: '',\n        };\n        const elementComponents = this.getDataItem().components;\n        if (elementComponents !== undefined) {\n            elementDataItem.components = elementComponents;\n        }\n        const elementDataType = this.getFactory().create(elementDataItem);\n        const elementSignature = elementDataType.getSignature(isDetailed);\n        if (this._arrayLength === undefined) {\n            return `${elementSignature}[]`;\n        }\n        else {\n            return `${elementSignature}[${this._arrayLength}]`;\n        }\n    }\n}\nArrayDataType._MATCHER = RegExp('^(.+)\\\\[([0-9]*)\\\\]$');\n","import { SolidityTypes } from '../../../types';\nimport * as ethUtil from 'ethereumjs-util';\nimport { B } from '../../configured_bignumber';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nexport class BoolDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, BoolDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!BoolDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Bool with bad input: ${dataItem}`);\n        }\n    }\n    static matchType(type) {\n        return type === SolidityTypes.Bool;\n    }\n    encodeValue(value) {\n        const encodedValue = value ? '0x1' : '0x0';\n        const encodedValueBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(encodedValue), constants.EVM_WORD_WIDTH_IN_BYTES);\n        return encodedValueBuf;\n    }\n    decodeValue(calldata) {\n        const valueBuf = calldata.popWord();\n        const valueHex = ethUtil.bufferToHex(valueBuf);\n        const valueNumber = valueHex === '0x' ? new B.BigNumber(0) : new B.BigNumber(valueHex, constants.HEX_BASE);\n        if (!(valueNumber.isEqualTo(0) || valueNumber.isEqualTo(1))) {\n            throw new Error(`Failed to decode boolean. Expected 0x0 or 0x1, got ${valueHex}`);\n        }\n        const value = !valueNumber.isEqualTo(0);\n        return value;\n    }\n    getDefaultValue() {\n        return BoolDataType._DEFAULT_VALUE;\n    }\n    getSignatureType() {\n        return SolidityTypes.Bool;\n    }\n}\nBoolDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nBoolDataType._DEFAULT_VALUE = false;\n","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { B } from '../../configured_bignumber';\nimport { constants } from '../utils/constants';\nfunction sanityCheckBigNumberRange(value_, minValue, maxValue) {\n    const value = new B.BigNumber(value_, 10);\n    if (value.isGreaterThan(maxValue)) {\n        throw new Error(`Tried to assign value of ${value}, which exceeds max value of ${maxValue}`);\n    }\n    else if (value.isLessThan(minValue)) {\n        throw new Error(`Tried to assign value of ${value}, which exceeds min value of ${minValue}`);\n    }\n    else if (value.isNaN()) {\n        throw new Error(`Tried to assign NaN value`);\n    }\n}\nfunction bigNumberToPaddedBuffer(value) {\n    return ethUtil.setLengthLeft(ethUtil.toBuffer(new ethUtil.BN(value.toFixed(0))), constants.EVM_WORD_WIDTH_IN_BYTES);\n}\nexport function encodeNumericValue(value_) {\n    const value = new B.BigNumber(value_, 10);\n    if (value.isGreaterThanOrEqualTo(0)) {\n        const encodedPositiveValue = bigNumberToPaddedBuffer(value);\n        return encodedPositiveValue;\n    }\n    const valueBin = value.times(-1).toString(constants.BIN_BASE);\n    let invertedValueBin = '1'.repeat(constants.EVM_WORD_WIDTH_IN_BITS - valueBin.length);\n    _.each(valueBin, (bit) => {\n        invertedValueBin += bit === '1' ? '0' : '1';\n    });\n    const invertedValue = new B.BigNumber(invertedValueBin, constants.BIN_BASE);\n    const negativeValue = invertedValue.plus(1);\n    const encodedValue = bigNumberToPaddedBuffer(negativeValue);\n    return encodedValue;\n}\nexport function safeEncodeNumericValue(value, minValue, maxValue) {\n    sanityCheckBigNumberRange(value, minValue, maxValue);\n    const encodedValue = encodeNumericValue(value);\n    return encodedValue;\n}\nexport function decodeNumericValue(encodedValue, minValue) {\n    const valueHex = ethUtil.bufferToHex(encodedValue);\n    const value = new B.BigNumber(valueHex, constants.HEX_BASE);\n    if (!minValue.isLessThan(0)) {\n        return value;\n    }\n    const valueBin = value.toString(constants.BIN_BASE);\n    const isValueNegative = valueBin.length === constants.EVM_WORD_WIDTH_IN_BITS && _.startsWith(valueBin[0], '1');\n    if (!isValueNegative) {\n        return value;\n    }\n    let invertedValueBin = '';\n    _.each(valueBin, (bit) => {\n        invertedValueBin += bit === '1' ? '0' : '1';\n    });\n    const invertedValue = new B.BigNumber(invertedValueBin, constants.BIN_BASE);\n    const positiveValue = invertedValue.plus(1);\n    const negativeValue = positiveValue.times(-1);\n    return negativeValue;\n}\nexport function safeDecodeNumericValue(encodedValue, minValue, maxValue) {\n    const value = decodeNumericValue(encodedValue, minValue);\n    sanityCheckBigNumberRange(value, minValue, maxValue);\n    return value;\n}\n","import { SolidityTypes } from '../../../types';\nimport { B } from '../../configured_bignumber';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nimport * as EncoderMath from '../utils/math';\nexport class IntDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, IntDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!IntDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Int with bad input: ${dataItem}`);\n        }\n        this._width = IntDataType._decodeWidthFromType(dataItem.type);\n        this._minValue = IntDataType._WIDTH_TO_MIN_VALUE[this._width];\n        this._maxValue = IntDataType._WIDTH_TO_MAX_VALUE[this._width];\n    }\n    static matchType(type) {\n        return IntDataType._MATCHER.test(type);\n    }\n    static _decodeWidthFromType(type) {\n        const matches = IntDataType._MATCHER.exec(type);\n        const width = matches !== null && matches.length === 2 && matches[1] !== undefined\n            ? parseInt(matches[1], constants.DEC_BASE)\n            : IntDataType._DEFAULT_WIDTH;\n        return width;\n    }\n    encodeValue(value) {\n        const encodedValue = EncoderMath.safeEncodeNumericValue(value, this._minValue, this._maxValue);\n        return encodedValue;\n    }\n    decodeValue(calldata) {\n        const valueBuf = calldata.popWord();\n        const value = EncoderMath.safeDecodeNumericValue(valueBuf, this._minValue, this._maxValue);\n        if (this._width === constants.NUMBER_OF_BYTES_IN_INT8) {\n            return value.toNumber();\n        }\n        return value;\n    }\n    getDefaultValue() {\n        const defaultValue = IntDataType._DEFAULT_VALUE;\n        if (this._width === constants.NUMBER_OF_BYTES_IN_INT8) {\n            return defaultValue.toNumber();\n        }\n        return defaultValue;\n    }\n    getSignatureType() {\n        return `${SolidityTypes.Int}${this._width}`;\n    }\n}\nIntDataType._MATCHER = RegExp('^int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256){0,1}$');\nIntDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nIntDataType._MAX_WIDTH = 256;\nIntDataType._DEFAULT_WIDTH = IntDataType._MAX_WIDTH;\nIntDataType._DEFAULT_VALUE = new B.BigNumber(0);\nIntDataType._WIDTH_TO_MIN_VALUE = Object.assign({}, ...[...new Array(32)].map((_x, i) => {\n    const width = (i + 1) * 8;\n    return { [width]: new B.BigNumber(2).exponentiatedBy(width - 1).times(-1) };\n}));\nIntDataType._WIDTH_TO_MAX_VALUE = Object.assign({}, ...[...new Array(32)].map((_x, i) => {\n    const width = (i + 1) * 8;\n    return { [width]: new B.BigNumber(2).exponentiatedBy(width - 1).minus(1) };\n}));\n","import { AbstractPointerDataType } from '../abstract_data_types/types/pointer';\nexport class PointerDataType extends AbstractPointerDataType {\n    constructor(destDataType, parentDataType, dataTypeFactory) {\n        const destDataItem = destDataType.getDataItem();\n        const dataItem = { name: `ptr<${destDataItem.name}>`, type: `ptr<${destDataItem.type}>` };\n        super(dataItem, dataTypeFactory, destDataType, parentDataType);\n    }\n    getSignatureType() {\n        return this._destination.getSignature(false);\n    }\n    getSignature(isDetailed) {\n        return this._destination.getSignature(isDetailed);\n    }\n    getDefaultValue() {\n        const defaultValue = this._destination.getDefaultValue();\n        return defaultValue;\n    }\n}\n","import { SolidityTypes } from '../../../types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nexport class StaticBytesDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, StaticBytesDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!StaticBytesDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Static Bytes with bad input: ${dataItem}`);\n        }\n        this._width = StaticBytesDataType._decodeWidthFromType(dataItem.type);\n    }\n    static matchType(type) {\n        return StaticBytesDataType._MATCHER.test(type);\n    }\n    static _decodeWidthFromType(type) {\n        const matches = StaticBytesDataType._MATCHER.exec(type);\n        const width = matches !== null && matches.length === 3 && matches[2] !== undefined\n            ? parseInt(matches[2], constants.DEC_BASE)\n            : StaticBytesDataType._DEFAULT_WIDTH;\n        return width;\n    }\n    getSignatureType() {\n        return `${SolidityTypes.Bytes}${this._width}`;\n    }\n    encodeValue(value) {\n        this._sanityCheckValue(value);\n        const valueBuf = ethUtil.toBuffer(value);\n        const valuePadded = ethUtil.setLengthRight(valueBuf, constants.EVM_WORD_WIDTH_IN_BYTES);\n        return valuePadded;\n    }\n    decodeValue(calldata) {\n        const valueBufPadded = calldata.popWord();\n        const valueBuf = valueBufPadded.slice(0, this._width);\n        const value = ethUtil.bufferToHex(valueBuf);\n        this._sanityCheckValue(value);\n        return value;\n    }\n    getDefaultValue() {\n        const valueBufPadded = constants.EMPTY_EVM_WORD_BUFFER;\n        const valueBuf = valueBufPadded.slice(0, this._width);\n        const value = ethUtil.bufferToHex(valueBuf);\n        return value;\n    }\n    _sanityCheckValue(value) {\n        if (typeof value === 'string') {\n            if (!_.startsWith(value, '0x')) {\n                throw new Error(`Tried to encode non-hex value. Value must include '0x' prefix.`);\n            }\n            else if (value.length % 2 !== 0) {\n                throw new Error(`Tried to assign ${value}, which is contains a half-byte. Use full bytes only.`);\n            }\n        }\n        const valueBuf = ethUtil.toBuffer(value);\n        if (valueBuf.byteLength > this._width) {\n            throw new Error(`Tried to assign ${value} (${valueBuf.byteLength} bytes), which exceeds max bytes that can be stored in a ${this.getSignature()}`);\n        }\n    }\n}\nStaticBytesDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nStaticBytesDataType._MATCHER = RegExp('^(byte|bytes(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32))$');\nStaticBytesDataType._DEFAULT_WIDTH = 1;\n","import { SolidityTypes } from '../../../types';\nimport { B } from '../../configured_bignumber';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nimport * as EncoderMath from '../utils/math';\nexport class UIntDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, UIntDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!UIntDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate UInt with bad input: ${dataItem}`);\n        }\n        this._width = UIntDataType._decodeWidthFromType(dataItem.type);\n        this._maxValue = UIntDataType._WIDTH_TO_MAX_VALUE[this._width];\n    }\n    static matchType(type) {\n        return UIntDataType._MATCHER.test(type);\n    }\n    static _decodeWidthFromType(type) {\n        const matches = UIntDataType._MATCHER.exec(type);\n        const width = matches !== null && matches.length === 2 && matches[1] !== undefined\n            ? parseInt(matches[1], constants.DEC_BASE)\n            : UIntDataType._DEFAULT_WIDTH;\n        return width;\n    }\n    encodeValue(value) {\n        const encodedValue = EncoderMath.safeEncodeNumericValue(value, UIntDataType._MIN_VALUE, this._maxValue);\n        return encodedValue;\n    }\n    decodeValue(calldata) {\n        const valueBuf = calldata.popWord();\n        const value = EncoderMath.safeDecodeNumericValue(valueBuf, UIntDataType._MIN_VALUE, this._maxValue);\n        if (this._width === constants.NUMBER_OF_BYTES_IN_UINT8) {\n            return value.toNumber();\n        }\n        return value;\n    }\n    getDefaultValue() {\n        const defaultValue = UIntDataType._DEFAULT_VALUE;\n        if (this._width === constants.NUMBER_OF_BYTES_IN_UINT8) {\n            return defaultValue.toNumber();\n        }\n        return defaultValue;\n    }\n    getSignatureType() {\n        return `${SolidityTypes.Uint}${this._width}`;\n    }\n}\nUIntDataType._MATCHER = RegExp('^uint(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256){0,1}$');\nUIntDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nUIntDataType._MAX_WIDTH = 256;\nUIntDataType._DEFAULT_WIDTH = UIntDataType._MAX_WIDTH;\nUIntDataType._MIN_VALUE = new B.BigNumber(0);\nUIntDataType._DEFAULT_VALUE = new B.BigNumber(0);\nUIntDataType._WIDTH_TO_MAX_VALUE = Object.assign({}, ...[...new Array(32)].map((_x, i) => {\n    const width = (i + 1) * 8;\n    return { [width]: new B.BigNumber(2).exponentiatedBy(width).minus(1) };\n}));\n","import * as _ from 'lodash';\nimport { generateDataItemFromSignature } from './utils/signature_parser';\nimport { AddressDataType } from './evm_data_types/address';\nimport { ArrayDataType } from './evm_data_types/array';\nimport { BoolDataType } from './evm_data_types/bool';\nimport { DynamicBytesDataType } from './evm_data_types/dynamic_bytes';\nimport { IntDataType } from './evm_data_types/int';\nimport { MethodDataType } from './evm_data_types/method';\nimport { PointerDataType } from './evm_data_types/pointer';\nimport { StaticBytesDataType } from './evm_data_types/static_bytes';\nimport { StringDataType } from './evm_data_types/string';\nimport { TupleDataType } from './evm_data_types/tuple';\nimport { UIntDataType } from './evm_data_types/uint';\nexport class Address extends AddressDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Bool extends BoolDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Int extends IntDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class UInt extends UIntDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class StaticBytes extends StaticBytesDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class DynamicBytes extends DynamicBytesDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class String extends StringDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Pointer extends PointerDataType {\n    constructor(destDataType, parentDataType) {\n        super(destDataType, parentDataType, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Tuple extends TupleDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Array extends ArrayDataType {\n    constructor(dataItem) {\n        super(dataItem, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class Method extends MethodDataType {\n    constructor(abi) {\n        super(abi, EvmDataTypeFactory.getInstance());\n    }\n}\nexport class EvmDataTypeFactory {\n    constructor() {\n    }\n    static getInstance() {\n        if (!EvmDataTypeFactory._instance) {\n            EvmDataTypeFactory._instance = new EvmDataTypeFactory();\n        }\n        return EvmDataTypeFactory._instance;\n    }\n    create(dataItem, parentDataType) {\n        let dataType;\n        if (Array.matchType(dataItem.type)) {\n            dataType = new Array(dataItem);\n        }\n        else if (Address.matchType(dataItem.type)) {\n            dataType = new Address(dataItem);\n        }\n        else if (Bool.matchType(dataItem.type)) {\n            dataType = new Bool(dataItem);\n        }\n        else if (Int.matchType(dataItem.type)) {\n            dataType = new Int(dataItem);\n        }\n        else if (UInt.matchType(dataItem.type)) {\n            dataType = new UInt(dataItem);\n        }\n        else if (StaticBytes.matchType(dataItem.type)) {\n            dataType = new StaticBytes(dataItem);\n        }\n        else if (Tuple.matchType(dataItem.type)) {\n            dataType = new Tuple(dataItem);\n        }\n        else if (DynamicBytes.matchType(dataItem.type)) {\n            dataType = new DynamicBytes(dataItem);\n        }\n        else if (String.matchType(dataItem.type)) {\n            dataType = new String(dataItem);\n        }\n        if (dataType === undefined) {\n            throw new Error(`Unrecognized data type: '${dataItem.type}'`);\n        }\n        else if (parentDataType !== undefined && !dataType.isStatic()) {\n            const pointerToDataType = new Pointer(dataType, parentDataType);\n            return pointerToDataType;\n        }\n        return dataType;\n    }\n}\nexport function create(input) {\n    const dataItem = consolidateDataItemsIntoSingle(input);\n    const dataType = EvmDataTypeFactory.getInstance().create(dataItem);\n    return dataType;\n}\nfunction consolidateDataItemsIntoSingle(input) {\n    let dataItem;\n    if (_.isArray(input)) {\n        const dataItems = input;\n        dataItem = {\n            name: '',\n            type: 'tuple',\n            components: dataItems,\n        };\n    }\n    else {\n        dataItem = _.isString(input) ? generateDataItemFromSignature(input) : input;\n    }\n    return dataItem;\n}\nexport function createMethod(methodName, input, output) {\n    const methodInput = input === undefined ? [] : consolidateDataItemsIntoArray(input);\n    const methodOutput = output === undefined ? [] : consolidateDataItemsIntoArray(output);\n    const methodAbi = {\n        name: methodName,\n        inputs: methodInput,\n        outputs: methodOutput,\n        type: 'function',\n        constant: false,\n        payable: false,\n        stateMutability: 'nonpayable',\n    };\n    const dataType = new Method(methodAbi);\n    return dataType;\n}\nfunction consolidateDataItemsIntoArray(input) {\n    let dataItems;\n    if (_.isArray(input) && _.isEmpty(input)) {\n        dataItems = [];\n    }\n    else if (_.isArray(input) && _.isString(input[0])) {\n        dataItems = [];\n        _.each(input, (signature) => {\n            const dataItem = generateDataItemFromSignature(signature);\n            dataItems.push(dataItem);\n        });\n    }\n    else if (_.isArray(input)) {\n        dataItems = input;\n    }\n    else if (typeof input === 'string') {\n        const dataItem = generateDataItemFromSignature(input);\n        dataItems = [dataItem];\n    }\n    else {\n        dataItems = [input];\n    }\n    return dataItems;\n}\n","import chalk from 'chalk';\nimport * as _ from 'lodash';\nconst DEFAULT_TERMINAL_WIDTH = 80;\nconst TERMINAL_WIDTH = _.get(process, 'stdout.columns') || DEFAULT_TERMINAL_WIDTH;\nexport const logUtils = {\n    log(...args) {\n        console.log(...args);\n    },\n    header(text, padStr = '=') {\n        const padLength = TERMINAL_WIDTH - text.length;\n        const padLengthEnd = (padLength + 1) / 2;\n        const leftPadded = text.padStart(TERMINAL_WIDTH - padLengthEnd, padStr);\n        const padded = leftPadded.padEnd(TERMINAL_WIDTH, padStr);\n        console.log(padded);\n    },\n    warn(...args) {\n        console.warn(...args);\n    },\n    table(columnarData) {\n        const formattedColumnarData = _.mapValues(columnarData, (columnOrColumns, _rowName) => _.isNumber(columnOrColumns) ? columnOrColumns.toLocaleString() : columnOrColumns);\n        console.table(formattedColumnarData);\n    },\n    logWithTime(arg) {\n        logUtils.log(`[${chalk.gray(new Date().toLocaleTimeString())}] ${arg}`);\n    },\n};\n","import * as ethUtil from 'ethereumjs-util';\nexport const constants = {\n    EVM_WORD_WIDTH_IN_BYTES: 32,\n    EVM_WORD_WIDTH_IN_BITS: 256,\n    HEX_BASE: 16,\n    DEC_BASE: 10,\n    BIN_BASE: 2,\n    HEX_SELECTOR_LENGTH_IN_CHARS: 10,\n    HEX_SELECTOR_LENGTH_IN_BYTES: 4,\n    HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\n    DEFAULT_DECODING_RULES: { shouldConvertStructsToObjects: true, isStrictMode: false },\n    DEFAULT_ENCODING_RULES: { shouldOptimize: true, shouldAnnotate: false },\n    EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\n    NUMBER_OF_BYTES_IN_UINT8: 8,\n    NUMBER_OF_BYTES_IN_INT8: 8,\n};\n","import { SolidityTypes } from '../../../types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nexport class DynamicBytesDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, DynamicBytesDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!DynamicBytesDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Dynamic Bytes with bad input: ${dataItem}`);\n        }\n    }\n    static matchType(type) {\n        return type === SolidityTypes.Bytes;\n    }\n    static _sanityCheckValue(value) {\n        if (typeof value !== 'string') {\n            return;\n        }\n        if (!_.startsWith(value, '0x')) {\n            throw new Error(`Tried to encode non-hex value. Value must include '0x' prefix.`);\n        }\n        else if (value.length % 2 !== 0) {\n            throw new Error(`Tried to assign ${value}, which is contains a half-byte. Use full bytes only.`);\n        }\n    }\n    encodeValue(value) {\n        DynamicBytesDataType._sanityCheckValue(value);\n        const valueBuf = ethUtil.toBuffer(value);\n        const wordsToStoreValuePadded = Math.ceil(valueBuf.byteLength / constants.EVM_WORD_WIDTH_IN_BYTES);\n        const bytesToStoreValuePadded = wordsToStoreValuePadded * constants.EVM_WORD_WIDTH_IN_BYTES;\n        const lengthBuf = ethUtil.toBuffer(valueBuf.byteLength);\n        const lengthBufPadded = ethUtil.setLengthLeft(lengthBuf, constants.EVM_WORD_WIDTH_IN_BYTES);\n        const valueBufPadded = ethUtil.setLengthRight(valueBuf, bytesToStoreValuePadded);\n        const encodedValue = Buffer.concat([lengthBufPadded, valueBufPadded]);\n        return encodedValue;\n    }\n    decodeValue(calldata) {\n        const lengthBuf = calldata.popWord();\n        const lengthHex = ethUtil.bufferToHex(lengthBuf);\n        const length = parseInt(lengthHex, constants.HEX_BASE);\n        const wordsToStoreValuePadded = Math.ceil(length / constants.EVM_WORD_WIDTH_IN_BYTES);\n        const valueBufPadded = calldata.popWords(wordsToStoreValuePadded);\n        const valueBuf = valueBufPadded.slice(0, length);\n        const value = ethUtil.bufferToHex(valueBuf);\n        DynamicBytesDataType._sanityCheckValue(value);\n        return value;\n    }\n    getDefaultValue() {\n        return DynamicBytesDataType._DEFAULT_VALUE;\n    }\n    getSignatureType() {\n        return SolidityTypes.Bytes;\n    }\n}\nDynamicBytesDataType._SIZE_KNOWN_AT_COMPILE_TIME = false;\nDynamicBytesDataType._DEFAULT_VALUE = '0x';\n","import { Ori20Contract } from \"./ori20\";\nimport { WalletSupport } from \"../base/wallet\";\nimport CoinDetail from \"./CoinDetail\";\nimport ethUtil from \"ethereumjs-util\";\nimport sigUtil from \"eth-sig-util\";\nimport BN from 'bn.js';\nimport * as _ from \"lodash\";\nexport default class BlockWrap {\n    constructor(webThree, ethereumCore) {\n        this.debug = false;\n        this.accounts = [];\n        this.gas = 1000000;\n        this.gasPrice = 21000000000;\n        this.ethereumCore = ethereumCore;\n        this.w3 = webThree;\n        this.tokens = {};\n        this.contracts = {};\n    }\n    setDebug(x) {\n        this.debug = x;\n    }\n    setWallet(wallet_connect) {\n        this.wallet = wallet_connect;\n    }\n    isInstalled() {\n        return this.ethereumCore.isConnected();\n    }\n    isLoggedIn() {\n        return this.ethereumCore && this.ethereumCore.isConnected();\n    }\n    isAddress(test) {\n        return this.w3.utils.isAddress(test);\n    }\n    w3Utils() {\n        return this.w3.utils;\n    }\n    async isUnlocked() {\n        return await this.ethereumCore._metamask.isUnlocked();\n    }\n    getAccountAddress() {\n        return this.accounts[0];\n    }\n    setAccounts(data) {\n        if (this.debug) {\n            console.log(\"set account now\", data);\n        }\n        this.accounts = _.map(data, (e) => this.w3.utils.toChecksumAddress(e));\n    }\n    setResource(gas, gas_price) {\n        this.gas = gas;\n        this.gasPrice = gas_price;\n        if (this.debug) {\n        }\n        this._setOtherRrc(gas, gas_price);\n    }\n    _setOtherRrc(gas, gas_price) {\n        for (let b in this.contracts) {\n            this.contracts[b].setResource(gas, gas_price);\n        }\n    }\n    haveAccounts() {\n        return this.accounts.length > 0;\n    }\n    NewContractFallback(abi = [], address = \"\") {\n        const contract = this.w3.eth.Contract;\n        contract.setProvider(this.ethereumCore);\n        return new contract(abi, address, {\n            from: this.accounts[0],\n            gasPrice: String(this.gasPrice)\n        });\n    }\n    async sendCoin(amount, toaddress) {\n        const conf = {\n            value: amount,\n            to: toaddress,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            from: this.accounts[0]\n        };\n        await this.w3.eth.sendTransaction(conf).on(\"confirmation\", this.confirmHandler).catch(this.errorHandler);\n    }\n    async sendToken(amount, toaddress, erc20_address) {\n        const contract = await this.NewToken(erc20_address);\n        const send_amount = new BN(amount);\n        await contract.transfer(toaddress, send_amount);\n    }\n    async approveToken(erc20_address, spender_address, amount_sun) {\n        const contract = await this.NewToken(erc20_address);\n        const am = this.w3.utils.toBN(amount_sun);\n        await contract.approve(spender_address, am);\n    }\n    async approveTokenUnlimited(erc20_address, spender_address) {\n        const contract = await this.NewToken(erc20_address);\n        let amc = \"1000000000000000000000000\";\n        const am = this.w3.utils.toBN(amc);\n        console.log(am);\n        let val = am;\n        await contract.approve(spender_address, val);\n    }\n    async getMyTokenBalance(trc20_coin) {\n        return await this.getTokenBalanceWei(this.getAccountAddress(), trc20_coin);\n    }\n    keccak256(data) {\n        return this.w3.utils.keccak256(data);\n    }\n    sha(data) {\n        return this.w3.utils.soliditySha3(data);\n    }\n    async balance() {\n        return await this.w3.eth.getBalance(this.getAccountAddress());\n    }\n    async getCoinPlatform() {\n        return await this.w3.eth.getBalance(this.getAccountAddress());\n    }\n    async getMyCoinDetail(trc20_coin) {\n        return await this.getCoinDetail(trc20_coin, this.getAccountAddress());\n    }\n    async coinExample() {\n        return await this.getMyCoinDetail(\"TXHvwxYbqsDqTCQ9KxNFj4SkuXy7EF2AHR\");\n    }\n    async initCoinDetail(erc20, me) {\n        const contract = await this.NewToken(erc20);\n        const a = await contract.balanceOf(me);\n        const d = await contract.decimals();\n        const s = await contract.symbol();\n        const name = await contract.name();\n        const detail = new CoinDetail(erc20, d, s, name);\n        detail.setHolder(me, a);\n        this.tokens[erc20] = detail;\n        this.contracts[erc20] = contract;\n        return detail;\n    }\n    async getCoinDetail(erc20_address, address) {\n        if (!this.isLoggedIn()) {\n            throw \"wallet is not login\";\n        }\n        if (!this.tokens.hasOwnProperty(erc20_address)) {\n            await this.initCoinDetail(erc20_address, address);\n        }\n        else {\n            let contract = this.contracts[erc20_address];\n            if (!contract) {\n                contract = await this.NewToken(erc20_address);\n                this.contracts[erc20_address] = contract;\n            }\n            const b = await contract.balanceOf(address);\n            this.tokens[erc20_address].setHolder(address, b);\n        }\n        return this.tokens[erc20_address];\n    }\n    async getContractToken(erc20_address) {\n        let contract = this.contracts[erc20_address];\n        if (!contract) {\n            if (this.debug) {\n                console.log(\"new contract token ...\");\n            }\n            contract = await this.NewToken(erc20_address);\n            this.contracts[erc20_address] = contract;\n        }\n        return contract;\n    }\n    async getTokenBalanceWei(address, erc20_address) {\n        if (!this.tokens.hasOwnProperty(erc20_address)) {\n            const conver = await this.getCoinDetail(erc20_address, address);\n            return conver.amountCode(address);\n        }\n        else {\n            let contract = this.contracts[erc20_address];\n            const b = await contract.balanceOf(address);\n            this.tokens[erc20_address].setHolder(address, b);\n            return b.toNumber();\n        }\n    }\n    async NewToken(erc20_address) {\n        const contr = await Ori20Contract.init(erc20_address, this.ethereumCore, this.w3);\n        contr.setResource(this.gas, this.gasPrice);\n        contr.setBlockLink(this);\n        return contr;\n    }\n    getListedCoins() {\n        return this.tokens;\n    }\n    explainTrc20(payload) {\n        const me = this.getAccountAddress();\n        return payload.holder[me];\n    }\n    eventListener(message, vueInstance) {\n    }\n    setHandlers(confirm, broadcast, err) {\n        this.errorHandler = err;\n        this.boardcastHandler = broadcast;\n        this.confirmHandler = confirm;\n    }\n    metamask_decrypt(encryptedMessage, account_address, callback) {\n        if (!this.ethereumCore)\n            return;\n        this.ethereumCore\n            .request({\n            method: 'eth_decrypt',\n            params: [encryptedMessage, account_address],\n        })\n            .then((decryptedMessage) => {\n            if (this.debug) {\n                console.log('The decrypted message is:', decryptedMessage);\n            }\n            callback(decryptedMessage);\n        })\n            .catch(this.errorHandler);\n    }\n    async metamask_message_sign_v3(message, resultcb) {\n        await this.w3.eth.personal.sign(this.w3Utils().fromUtf8(message), this.getAccountAddress(), \"\").then((signature) => {\n            resultcb(signature);\n        }).catch(this.errorHandler);\n    }\n    metamask_message_personal_sign(message, resultcb) {\n        const msg = this.w3Utils().fromUtf8(message);\n        this.ethereumCore\n            .request({\n            method: 'personal_sign',\n            params: [this.getAccountAddress(), msg],\n            from: this.getAccountAddress()\n        }).then((rs) => {\n            resultcb(this.getAccountAddress(), rs);\n        }).catch(this.errorHandler);\n    }\n    metamask_encryption(encryptionPublicKey, message) {\n        return ethUtil.bufferToHex(Buffer.from(JSON.stringify(sigUtil.encrypt(encryptionPublicKey, { data: message }, 'x25519-xsalsa20-poly1305')), 'utf8'));\n    }\n    metamask_add_token(token_conf) {\n        this.ethereumCore\n            .request({\n            method: 'wallet_watchAsset',\n            params: token_conf,\n        })\n            .then((success) => {\n            if (success) {\n                if (this.debug) {\n                    console.log('FOO successfully added to wallet!');\n                }\n            }\n            else {\n                throw new Error('Something went wrong.');\n            }\n        })\n            .catch(this.errorHandler);\n    }\n    ensureChainParameterPatch(conf) {\n        const ishex = this.w3Utils().isHexStrict(conf.chainId);\n        let conf2 = conf;\n        if (!ishex) {\n            const chainID = this.w3Utils().toHex(conf.chainId);\n            conf2 = Object.assign({}, conf, {\n                chainId: chainID,\n                iconUrls: [\"https://i.pinimg.com/564x/3c/ee/90/3cee90ab71e45757b8f0250b79a76bd0.jpg\"]\n            });\n        }\n        return conf2;\n    }\n    metamask_add_chain(chain_conf) {\n        const conf = this.ensureChainParameterPatch(chain_conf);\n        this.ethereumCore\n            .request({\n            method: 'wallet_addEthereumChain',\n            params: [conf],\n        })\n            .then((success) => {\n            if (success) {\n                if (this.debug) {\n                    console.log('Chain is successfully added to wallet!');\n                }\n            }\n            else {\n                throw new Error('Something went wrong.');\n            }\n        })\n            .catch(this.errorHandler);\n    }\n    async metamask_detect_chain_process_flow(conf) {\n        const conf2 = this.ensureChainParameterPatch(conf);\n        if (this.wallet === WalletSupport.IMTOKEN) {\n            try {\n                await this.ethereumCore.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [conf2, this.getAccountAddress()],\n                });\n            }\n            catch (addError) {\n                this.errorHandler(addError);\n            }\n        }\n        else {\n            try {\n                await this.ethereumCore.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{ chainId: conf2.chainId }, this.getAccountAddress()],\n                });\n            }\n            catch (switchError) {\n                if (switchError.code === 4902) {\n                    try {\n                        await this.ethereumCore.request({\n                            method: \"wallet_addEthereumChain\",\n                            params: [conf2, this.getAccountAddress()],\n                        });\n                    }\n                    catch (addError) {\n                        this.errorHandler(addError);\n                    }\n                }\n                else {\n                    this.errorHandler(switchError);\n                }\n            }\n        }\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport class MigrateCallFailedError extends RevertError {\n    constructor(target, resultData) {\n        super('MigrateCallFailedError', 'MigrateCallFailedError(address target, bytes resultData)', {\n            target,\n            resultData,\n        });\n    }\n}\nexport class OnlyOwnerError extends RevertError {\n    constructor(sender, owner) {\n        super('OnlyOwnerError', 'OnlyOwnerError(address sender, bytes owner)', {\n            sender,\n            owner,\n        });\n    }\n}\nconst types = [MigrateCallFailedError, OnlyOwnerError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import { RevertError } from '../../revert_error';\nexport class NotImplementedError extends RevertError {\n    constructor(selector) {\n        super('NotImplementedError', 'NotImplementedError(bytes4 selector)', {\n            selector,\n        });\n    }\n}\nexport class InvalidBootstrapCallerError extends RevertError {\n    constructor(caller, expectedCaller) {\n        super('InvalidBootstrapCallerError', 'InvalidBootstrapCallerError(address caller, address expectedCaller)', {\n            caller,\n            expectedCaller,\n        });\n    }\n}\nexport class InvalidDieCallerError extends RevertError {\n    constructor(caller, expectedCaller) {\n        super('InvalidDieCallerError', 'InvalidDieCallerError(address caller, address expectedCaller)', {\n            caller,\n            expectedCaller,\n        });\n    }\n}\nexport class BootstrapCallFailedError extends RevertError {\n    constructor(target, resultData) {\n        super('BootstrapCallFailedError', 'BootstrapCallFailedError(address target, bytes resultData)', {\n            target,\n            resultData,\n        });\n    }\n}\nconst types = [BootstrapCallFailedError, InvalidBootstrapCallerError, InvalidDieCallerError, NotImplementedError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import * as _ from 'lodash';\nimport { Queue } from '../utils/queue';\nimport { BlobCalldataBlock } from './blocks/blob';\nimport { PointerCalldataBlock } from './blocks/pointer';\nimport { SetCalldataBlock } from './blocks/set';\nclass BaseIterator {\n    constructor(root) {\n        this._root = root;\n        this._queue = BaseIterator._createQueue(root);\n    }\n    static _createQueue(block) {\n        const queue = new Queue();\n        if (!(block instanceof SetCalldataBlock)) {\n            queue.pushBack(block);\n            return queue;\n        }\n        const set = block;\n        _.eachRight(set.getMembers(), (member) => {\n            queue.mergeFront(BaseIterator._createQueue(member));\n        });\n        _.each(set.getMembers(), (member) => {\n            if (member instanceof PointerCalldataBlock && member.getAlias() === undefined) {\n                const dependency = member.getDependency();\n                queue.mergeBack(BaseIterator._createQueue(dependency));\n            }\n        });\n        queue.pushFront(set);\n        return queue;\n    }\n    [Symbol.iterator]() {\n        return {\n            next: () => {\n                const nextBlock = this.nextBlock();\n                if (nextBlock !== undefined) {\n                    return {\n                        value: nextBlock,\n                        done: false,\n                    };\n                }\n                return {\n                    done: true,\n                    value: new BlobCalldataBlock('', '', '', Buffer.from('')),\n                };\n            },\n        };\n    }\n}\nexport class CalldataIterator extends BaseIterator {\n    constructor(root) {\n        super(root);\n    }\n    nextBlock() {\n        return this._queue.popFront();\n    }\n}\nexport class ReverseCalldataIterator extends BaseIterator {\n    constructor(root) {\n        super(root);\n    }\n    nextBlock() {\n        return this._queue.popBack();\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport var SignatureValidationErrorCodes;\n(function (SignatureValidationErrorCodes) {\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"AlwaysInvalid\"] = 0] = \"AlwaysInvalid\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"InvalidLength\"] = 1] = \"InvalidLength\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Unsupported\"] = 2] = \"Unsupported\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Illegal\"] = 3] = \"Illegal\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"WrongSigner\"] = 4] = \"WrongSigner\";\n})(SignatureValidationErrorCodes || (SignatureValidationErrorCodes = {}));\nexport class SignatureValidationError extends RevertError {\n    constructor(code, hash, signerAddress, signature) {\n        super('SignatureValidationError', 'SignatureValidationError(uint8 code, bytes32 hash, address signerAddress, bytes signature)', {\n            code,\n            hash,\n            signerAddress,\n            signature,\n        });\n    }\n}\nconst types = [SignatureValidationError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('button',{attrs:{\"disabled\":_vm.signedInConnection},on:{\"click\":_vm.connect_metamask}},[_vm._v(\"CONNECT\")]),_c('button',{attrs:{\"disabled\":!_vm.signedInConnection},on:{\"click\":_vm.add_network}},[_vm._v(\"ADD NET\")]),_c('p',[_vm._v(_vm._s(_vm.status_connection))]),_c('p',[_vm._v(\"BlockAcon Metamask is installed [\"+_vm._s(_vm.metamaskInstalled)+\"], Detection: [\"+_vm._s(_vm.detected_x)+\"]\")]),_c('p',[_vm._v(\"version 0.2.101\")]),_c('p',[_vm._v(_vm._s(_vm.error_message))]),_c('p',[_c('button',{on:{\"click\":function($event){return _vm.add_token(_vm.tokens.ysl)}}},[_vm._v(\"ADD TOKEN [\"+_vm._s(_vm.tokens.ysl.symbol)+\"]\")]),_c('button',{on:{\"click\":function($event){return _vm.add_token(_vm.tokens.ysl2)}}},[_vm._v(\"ADD TOKEN [\"+_vm._s(_vm.tokens.ysl2.symbol)+\"]\")]),_c('button',{on:{\"click\":function($event){return _vm.add_token(_vm.tokens.usdf)}}},[_vm._v(\"ADD TOKEN [\"+_vm._s(_vm.tokens.usdf.symbol)+\"]\")])]),_c('p',[_c('button',{on:{\"click\":_vm.event_x}},[_vm._v(\"GET ACCOUNTS\")])]),_c('p',[_vm._v(\"Network ID -> \"+_vm._s(_vm.netID))]),_c('p',[_vm._v(\"My address -> \"+_vm._s(_vm.my_address))]),_c('p',[_vm._v(\" ===================\")]),_c('p',[_vm._v(\" \"+_vm._s(_vm.tokens.ysl2.symbol)+\" Coin: \"+_vm._s(_vm.coin_bal_ysl)+\" \"+_vm._s(_vm.tokens.ysl2.symbol)+\", dec \"+_vm._s(_vm.coin_decimal))]),_c('button',{on:{\"click\":_vm.send_token_trig}},[_vm._v(\"SEND TOKEN\")]),_c('p',[_vm._v(\" \"+_vm._s(_vm.tokens.ysl2.address))]),_c('p',[_vm._v(_vm._s(_vm.tokens.ysl2.symbol)+\" Coin Approval: \"+_vm._s(_vm.coin_approv_bal1)+\" \"+_vm._s(_vm.tokens.ysl2.symbol)+\", dec \"+_vm._s(_vm.coin_decimal))]),_c('button',{on:{\"click\":_vm.approve_coin}},[_vm._v(\"Approve TOKEN\")]),_c('p',[_vm._v(\" \"+_vm._s(_vm.tokens.usdf.symbol)+\" Coin: \"+_vm._s(_vm.coin_bal_usd)+\" \"+_vm._s(_vm.tokens.usdf.symbol)+\", dec \"+_vm._s(_vm.coin_decimal))]),_c('p',[_vm._v(_vm._s(_vm.tokens.usdf.symbol)+\" Coin Unlimited Approval: \"+_vm._s(_vm.coin_approv_bal2)+\" \"+_vm._s(_vm.tokens.usdf.symbol)+\", dec \"+_vm._s(_vm.coin_decimal))]),_c('button',{on:{\"click\":_vm.approve_coin_2}},[_vm._v(\"Approve TOKEN Unlimited\")]),_c('p',[_vm._v(\" \"+_vm._s(_vm.tokens.usdf.address))]),_c('p',[_vm._v(\" ===================\")]),_c('p',[_vm._v(\"Native-Coin: \"+_vm._s(_vm.eth_bal))]),_c('button',{on:{\"click\":_vm.send_coin_trig}},[_vm._v(\"♞ SEND COIN\")]),_c('p',[_vm._v(\" ===================\")]),_c('p',[_vm._v(\"Signature:\")]),_c('p',[_vm._v(\"Message: \"+_vm._s(_vm.signing.message))]),_c('button',{on:{\"click\":_vm.sign_data}},[_vm._v(\"✍︎ Signature Sign\")]),_c('p',[_vm._v(\" ===================\")]),_c('p',[_vm._v(\"Refresh data\")]),_c('button',{on:{\"click\":_vm.initData}},[_vm._v(\"Refresh\")]),_c('p',[_vm._v(\" ===================\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const networks = [\n    {\n        \"name\": \"Ethereum Mainnet\",\n        \"chainId\": 1,\n        \"shortName\": \"eth\",\n        \"chain\": \"ETH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Ether\", \"symbol\": \"ETH\", \"decimals\": 18},\n        \"rpc\": [\"https://mainnet.infura.io/v3/${INFURA_API_KEY}\", \"wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}\", \"https://api.mycryptoapi.com/eth\", \"https://cloudflare-eth.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ethereum.org\"\n    },\n    {\n        \"name\": \"Optimistic Ethereum\",\n        \"chainId\": 10,\n        \"shortName\": \"oeth\",\n        \"chain\": \"ETH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 10,\n        \"nativeCurrency\": {\"name\": \"Ether\", \"symbol\": \"OETH\", \"decimals\": 18},\n        \"rpc\": [\"https://mainnet.optimism.io/\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://optimistic.etherscan.io/\"\n    },\n    {\n        \"name\": \"xDAI Chain\",\n        \"chainId\": 100,\n        \"shortName\": \"xdai\",\n        \"chain\": \"XDAI\",\n        \"network\": \"mainnet\",\n        \"networkId\": 100,\n        \"nativeCurrency\": {\"name\": \"xDAI\", \"symbol\": \"xDAI\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.xdaichain.com\", \"https://xdai.poanetwork.dev\", \"wss://rpc.xdaichain.com/wss\", \"wss://xdai.poanetwork.dev/wss\", \"http://xdai.poanetwork.dev\", \"https://dai.poa.network\", \"ws://xdai.poanetwork.dev:8546\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://forum.poa.network/c/xdai-chain\"\n    },\n    {\n        \"name\": \"Klaytn Testnet Baobab\",\n        \"chainId\": 1001,\n        \"shortName\": \"Baobab\",\n        \"chain\": \"KLAY\",\n        \"network\": \"baobab\",\n        \"networkId\": 1001,\n        \"nativeCurrency\": {\"name\": \"KLAY\", \"symbol\": \"KLAY\", \"decimals\": 18},\n        \"rpc\": [\"https://node-api.klaytnapi.com/v1/klaytn\"],\n        \"faucets\": [\"https://baobab.wallet.klaytn.com/access?next=faucet\"],\n        \"infoURL\": \"https://www.klaytn.com/\"\n    },\n    {\n        \"name\": \"Newton Testnet\",\n        \"chainId\": 1007,\n        \"shortName\": \"tnew\",\n        \"chain\": \"NEW\",\n        \"network\": \"testnet\",\n        \"networkId\": 1007,\n        \"nativeCurrency\": {\"name\": \"Newton\", \"symbol\": \"NEW\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc1.newchain.newtonproject.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.newtonproject.org/\"\n    },\n    {\n        \"name\": \"EtherInc\",\n        \"chainId\": 101,\n        \"shortName\": \"eti\",\n        \"chain\": \"ETI\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"EtherInc Ether\", \"symbol\": \"ETI\", \"decimals\": 18},\n        \"rpc\": [\"https://api.einc.io/jsonrpc/mainnet\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://einc.io\"\n    },\n    {\n        \"name\": \"Newton\",\n        \"chainId\": 1012,\n        \"shortName\": \"new\",\n        \"chain\": \"NEW\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1012,\n        \"nativeCurrency\": {\"name\": \"Newton\", \"symbol\": \"NEW\", \"decimals\": 18},\n        \"rpc\": [\"https://global.rpc.mainnet.newtonproject.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.newtonproject.org/\"\n    },\n    {\n        \"name\": \"ThunderCore Mainnet\",\n        \"chainId\": 108,\n        \"shortName\": \"TT\",\n        \"chain\": \"TT\",\n        \"network\": \"mainnet\",\n        \"networkId\": 108,\n        \"nativeCurrency\": {\"name\": \"ThunderCore Mainnet Ether\", \"symbol\": \"TT\", \"decimals\": 18},\n        \"rpc\": [\"https://mainnet-rpc.thundercore.com\"],\n        \"faucets\": [\"https://faucet.thundercore.com\"],\n        \"infoURL\": \"https://thundercore.com\"\n    },\n    {\n        \"name\": \"Metadium Mainnet\",\n        \"chainId\": 11,\n        \"shortName\": \"meta\",\n        \"chain\": \"META\",\n        \"network\": \"mainnet\",\n        \"networkId\": 11,\n        \"nativeCurrency\": {\"name\": \"Metadium Mainnet Ether\", \"symbol\": \"META\", \"decimals\": 18},\n        \"rpc\": [\"https://api.metadium.com/prod\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://metadium.com\"\n    },\n    {\n        \"name\": \"IPOS Network\",\n        \"chainId\": 1122334455,\n        \"shortName\": \"ipos\",\n        \"chain\": \"IPOS\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1122334455,\n        \"nativeCurrency\": {\"name\": \"IPOS Network Ether\", \"symbol\": \"IPOS\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.iposlab.com\", \"https://rpc2.iposlab.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://iposlab.com\"\n    },\n    {\n        \"name\": \"MathChain\",\n        \"chainId\": 1139,\n        \"shortName\": \"MATH\",\n        \"chain\": \"MATH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1139,\n        \"nativeCurrency\": {\"name\": \"MathChain\", \"symbol\": \"MATH\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://mathwallet.org\"\n    },\n    {\n        \"name\": \"MathChain Testnet\",\n        \"chainId\": 1140,\n        \"shortName\": \"tMATH\",\n        \"chain\": \"MATH\",\n        \"network\": \"testnet\",\n        \"networkId\": 1140,\n        \"nativeCurrency\": {\"name\": \"MathChain\", \"symbol\": \"MATH\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://mathwallet.org/\"\n    },\n    {\n        \"name\": \"Metadium Testnet\",\n        \"chainId\": 12,\n        \"shortName\": \"kal\",\n        \"chain\": \"META\",\n        \"network\": \"testnet\",\n        \"networkId\": 12,\n        \"nativeCurrency\": {\"name\": \"Metadium Testnet Ether\", \"symbol\": \"KAL\", \"decimals\": 18},\n        \"rpc\": [\"https://api.metadium.com/dev\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://metadium.com\"\n    },\n    {\n        \"name\": \"Fuse Mainnet\",\n        \"chainId\": 122,\n        \"shortName\": \"fuse\",\n        \"chain\": \"FUSE\",\n        \"network\": \"mainnet\",\n        \"networkId\": 122,\n        \"nativeCurrency\": {\"name\": \"Fuse\", \"symbol\": \"FUSE\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.fuse.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://fuse.io/\"\n    },\n    {\n        \"name\": \"Huobi ECO Chain Mainnet\",\n        \"chainId\": 128,\n        \"shortName\": \"heco\",\n        \"chain\": \"Heco\",\n        \"network\": \"mainnet\",\n        \"networkId\": 128,\n        \"nativeCurrency\": {\"name\": \"Huobi ECO Chain Native Token\", \"symbol\": \"HT\", \"decimals\": 18},\n        \"rpc\": [\"https://http-mainnet.hecochain.com\", \"wss://ws-mainnet.hecochain.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.hecochain.com\"\n    },\n    {\n        \"name\": \"Diode Testnet Staging\",\n        \"chainId\": 13,\n        \"shortName\": \"dstg\",\n        \"chain\": \"DIODE\",\n        \"network\": \"testnet\",\n        \"networkId\": 13,\n        \"nativeCurrency\": {\"name\": \"Staging Diodes\", \"symbol\": \"sDIODE\", \"decimals\": 18},\n        \"rpc\": [\"https://staging.diode.io:8443/\", \"wss://staging.diode.io:8443/ws\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://diode.io/staging\"\n    },\n    {\n        \"name\": \"Ether-1\",\n        \"chainId\": 1313114,\n        \"shortName\": \"etho\",\n        \"chain\": \"ETHO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1313114,\n        \"nativeCurrency\": {\"name\": \"Ether-1 Ether\", \"symbol\": \"ETHO\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.ether1.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ether1.org\"\n    },\n    {\n        \"name\": \"NEAR MainNet\",\n        \"chainId\": 1313161554,\n        \"shortName\": \"near\",\n        \"chain\": \"NEAR\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1313161554,\n        \"nativeCurrency\": {\"name\": \"NEAR\", \"symbol\": \"NEAR\", \"decimals\": 24},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://near.org/\"\n    },\n    {\n        \"name\": \"NEAR TestNet\",\n        \"chainId\": 1313161555,\n        \"shortName\": \"neart\",\n        \"chain\": \"NEAR\",\n        \"network\": \"testnet\",\n        \"networkId\": 1313161555,\n        \"nativeCurrency\": {\"name\": \"NEAR\", \"symbol\": \"tNEAR\", \"decimals\": 24},\n        \"rpc\": [],\n        \"faucets\": [\"https://wallet.testnet.near.org\"],\n        \"infoURL\": \"https://near.org/\"\n    },\n    {\n        \"name\": \"NEAR BetaNet\",\n        \"chainId\": 1313161556,\n        \"shortName\": \"nearb\",\n        \"chain\": \"NEAR\",\n        \"network\": \"betanet\",\n        \"networkId\": 1313161556,\n        \"nativeCurrency\": {\"name\": \"NEAR\", \"symbol\": \"bNEAR\", \"decimals\": 24},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://near.org/\"\n    },\n    {\n        \"name\": \"Xerom\",\n        \"chainId\": 1313500,\n        \"shortName\": \"xero\",\n        \"chain\": \"XERO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1313500,\n        \"nativeCurrency\": {\"name\": \"Xerom Ether\", \"symbol\": \"XERO\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.xerom.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://xerom.org\"\n    },\n    {\n        \"name\": \"PepChain Churchill\",\n        \"chainId\": 13371337,\n        \"shortName\": \"tpep\",\n        \"chain\": \"PEP\",\n        \"network\": \"testnet\",\n        \"networkId\": 13371337,\n        \"nativeCurrency\": {\"name\": \"PepChain Churchill Ether\", \"symbol\": \"TPEP\", \"decimals\": 18},\n        \"rpc\": [\"https://churchill-rpc.pepchain.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://pepchain.io\"\n    },\n    {\n        \"name\": \"Matic Mainnet\",\n        \"chainId\": 137,\n        \"shortName\": \"matic\",\n        \"chain\": \"Matic\",\n        \"network\": \"mainnet\",\n        \"networkId\": 137,\n        \"nativeCurrency\": {\"name\": \"Matic\", \"symbol\": \"MATIC\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc-mainnet.matic.network\", \"wss://ws-mainnet.matic.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://matic.network/\"\n    },\n    {\n        \"name\": \"Flare Mainnet\",\n        \"chainId\": 14,\n        \"shortName\": \"flr\",\n        \"chain\": \"FLR\",\n        \"network\": \"flare\",\n        \"networkId\": 14,\n        \"nativeCurrency\": {\"name\": \"Spark\", \"symbol\": \"FLR\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://flare.xyz\"\n    },\n    {\n        \"name\": \"Diode Prenet\",\n        \"chainId\": 15,\n        \"shortName\": \"diode\",\n        \"chain\": \"DIODE\",\n        \"network\": \"mainnet\",\n        \"networkId\": 15,\n        \"nativeCurrency\": {\"name\": \"Diodes\", \"symbol\": \"DIODE\", \"decimals\": 18},\n        \"rpc\": [\"https://prenet.diode.io:8443/\", \"wss://prenet.diode.io:8443/ws\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://diode.io/prenet\"\n    },\n    {\n        \"name\": \"Flare Testnet Coston\",\n        \"chainId\": 16,\n        \"shortName\": \"cflr\",\n        \"chain\": \"FLR\",\n        \"network\": \"coston\",\n        \"networkId\": 16,\n        \"nativeCurrency\": {\"name\": \"Coston Spark\", \"symbol\": \"CFLR\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://github.com/flare-eng/coston\"\n    },\n    {\n        \"name\": \"Lightstreams Testnet\",\n        \"chainId\": 162,\n        \"shortName\": \"tpht\",\n        \"chain\": \"PHT\",\n        \"network\": \"sirius\",\n        \"networkId\": 162,\n        \"nativeCurrency\": {\"name\": \"Lightstreams PHT\", \"symbol\": \"PHT\", \"decimals\": 18},\n        \"rpc\": [\"https://node.sirius.lightstreams.io\"],\n        \"faucets\": [\"https://discuss.lightstreams.network/t/request-test-tokens\"],\n        \"infoURL\": \"https://explorer.sirius.lightstreams.io\"\n    },\n    {\n        \"name\": \"Atheios\",\n        \"chainId\": 1620,\n        \"shortName\": \"ath\",\n        \"chain\": \"ATH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 11235813,\n        \"nativeCurrency\": {\"name\": \"Atheios Ether\", \"symbol\": \"ATH\", \"decimals\": 18},\n        \"rpc\": [\"https://wallet.atheios.com:8797\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://atheios.com\"\n    },\n    {\n        \"name\": \"Lightstreams Mainnet\",\n        \"chainId\": 163,\n        \"shortName\": \"pht\",\n        \"chain\": \"PHT\",\n        \"network\": \"mainnet\",\n        \"networkId\": 163,\n        \"nativeCurrency\": {\"name\": \"Lightstreams PHT\", \"symbol\": \"PHT\", \"decimals\": 18},\n        \"rpc\": [\"https://node.mainnet.lightstreams.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://explorer.lightstreams.io\"\n    },\n    {\n        \"name\": \"Harmony Mainnet Shard 0\",\n        \"chainId\": 1666600000,\n        \"shortName\": \"hmy-s0\",\n        \"chain\": \"Harmony\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1666600000,\n        \"nativeCurrency\": {\"name\": \"ONE\", \"symbol\": \"ONE\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.s0.t.hmny.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.harmony.one/\"\n    },\n    {\n        \"name\": \"Harmony Mainnet Shard 1\",\n        \"chainId\": 1666600001,\n        \"shortName\": \"hmy-s1\",\n        \"chain\": \"Harmony\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1666600001,\n        \"nativeCurrency\": {\"name\": \"ONE\", \"symbol\": \"ONE\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.s1.t.hmny.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.harmony.one/\"\n    },\n    {\n        \"name\": \"Harmony Mainnet Shard 2\",\n        \"chainId\": 1666600002,\n        \"shortName\": \"hmy-s2\",\n        \"chain\": \"Harmony\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1666600002,\n        \"nativeCurrency\": {\"name\": \"ONE\", \"symbol\": \"ONE\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.s2.t.hmny.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.harmony.one/\"\n    },\n    {\n        \"name\": \"Harmony Mainnet Shard 3\",\n        \"chainId\": 1666600003,\n        \"shortName\": \"hmy-s3\",\n        \"chain\": \"Harmony\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1666600003,\n        \"nativeCurrency\": {\"name\": \"ONE\", \"symbol\": \"ONE\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.s3.t.hmny.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.harmony.one/\"\n    },\n    {\n        \"name\": \"ThunderCore Testnet\",\n        \"chainId\": 18,\n        \"shortName\": \"TST\",\n        \"chain\": \"TST\",\n        \"network\": \"testnet\",\n        \"networkId\": 18,\n        \"nativeCurrency\": {\"name\": \"ThunderCore Testnet Ether\", \"symbol\": \"TST\", \"decimals\": 18},\n        \"rpc\": [\"https://testnet-rpc.thundercore.com\"],\n        \"faucets\": [\"https://faucet-testnet.thundercore.com\"],\n        \"infoURL\": \"https://thundercore.com\"\n    },\n    {\n        \"name\": \"IOLite\",\n        \"chainId\": 18289463,\n        \"shortName\": \"ilt\",\n        \"chain\": \"ILT\",\n        \"network\": \"mainnet\",\n        \"networkId\": 18289463,\n        \"nativeCurrency\": {\"name\": \"IOLite Ether\", \"symbol\": \"ILT\", \"decimals\": 18},\n        \"rpc\": [\"https://net.iolite.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://iolite.io\"\n    },\n    {\n        \"name\": \"Teslafunds\",\n        \"chainId\": 1856,\n        \"shortName\": \"tsf\",\n        \"chain\": \"TSF\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Teslafunds Ether\", \"symbol\": \"TSF\", \"decimals\": 18},\n        \"rpc\": [\"https://tsfapi.europool.me\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://teslafunds.io\"\n    },\n    {\n        \"name\": \"EtherGem\",\n        \"chainId\": 1987,\n        \"shortName\": \"egem\",\n        \"chain\": \"EGEM\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1987,\n        \"nativeCurrency\": {\"name\": \"EtherGem Ether\", \"symbol\": \"EGEM\", \"decimals\": 18},\n        \"rpc\": [\"https://jsonrpc.egem.io/custom\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://egem.io\"\n    },\n    {\n        \"name\": \"Expanse Network\",\n        \"chainId\": 2,\n        \"shortName\": \"exp\",\n        \"chain\": \"EXP\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Expanse Network Ether\", \"symbol\": \"EXP\", \"decimals\": 18},\n        \"rpc\": [\"https://node.expanse.tech\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://expanse.tech\"\n    },\n    {\n        \"name\": \"ELA-ETH-Sidechain Mainnet\",\n        \"chainId\": 20,\n        \"shortName\": \"elaeth\",\n        \"chain\": \"ETH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 20,\n        \"nativeCurrency\": {\"name\": \"Elastos\", \"symbol\": \"ELA\", \"decimals\": 18},\n        \"rpc\": [\"https://mainrpc.elaeth.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.elastos.org/\"\n    },\n    {\n        \"name\": \"Akroma\",\n        \"chainId\": 200625,\n        \"shortName\": \"aka\",\n        \"chain\": \"AKA\",\n        \"network\": \"mainnet\",\n        \"networkId\": 200625,\n        \"nativeCurrency\": {\"name\": \"Akroma Ether\", \"symbol\": \"AKA\", \"decimals\": 18},\n        \"rpc\": [\"https://remote.akroma.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://akroma.io\"\n    },\n    {\n        \"name\": \"420coin\",\n        \"chainId\": 2020,\n        \"shortName\": \"420\",\n        \"chain\": \"420\",\n        \"network\": \"mainnet\",\n        \"networkId\": 2020,\n        \"nativeCurrency\": {\"name\": \"Fourtwenty\", \"symbol\": \"420\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://420integrated.com\"\n    },\n    {\n        \"name\": \"ELA-ETH-Sidechain Testnet\",\n        \"chainId\": 21,\n        \"shortName\": \"elaetht\",\n        \"chain\": \"ETH\",\n        \"network\": \"testnet\",\n        \"networkId\": 21,\n        \"nativeCurrency\": {\"name\": \"Elastos\", \"symbol\": \"tELA\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.elaeth.io\"],\n        \"faucets\": [\"https://faucet.elaeth.io/\"],\n        \"infoURL\": \"https://elaeth.io/\"\n    },\n    {\n        \"name\": \"Freight Trust Network\",\n        \"chainId\": 211,\n        \"shortName\": \"EDI\",\n        \"chain\": \"EDI\",\n        \"network\": \"freight & trade network\",\n        \"networkId\": 0,\n        \"nativeCurrency\": {\"name\": \"Freight Trust Native\", \"symbol\": \"0xF\", \"decimals\": 18},\n        \"rpc\": [\"http://13.57.207.168:3435\", \"https://app.freighttrust.net/ftn/${API_KEY}\"],\n        \"faucets\": [\"http://faucet.freight.sh\"],\n        \"infoURL\": \"https://freighttrust.com\"\n    },\n    {\n        \"name\": \"Webchain\",\n        \"chainId\": 24484,\n        \"shortName\": \"web\",\n        \"chain\": \"WEB\",\n        \"network\": \"mainnet\",\n        \"networkId\": 37129,\n        \"nativeCurrency\": {\"name\": \"Webchain Ether\", \"symbol\": \"WEB\", \"decimals\": 18},\n        \"rpc\": [\"https://node1.webchain.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://webchain.network\"\n    },\n    {\n        \"name\": \"Energy Web Chain\",\n        \"chainId\": 246,\n        \"shortName\": \"ewt\",\n        \"chain\": \"Energy Web Chain\",\n        \"network\": \"mainnet\",\n        \"networkId\": 246,\n        \"nativeCurrency\": {\"name\": \"Energy Web Token\", \"symbol\": \"EWT\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.energyweb.org\", \"wss://rpc.energyweb.org/ws\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://energyweb.org\"\n    },\n    {\n        \"name\": \"ARTIS sigma1\",\n        \"chainId\": 246529,\n        \"shortName\": \"ats\",\n        \"chain\": \"ARTIS\",\n        \"network\": \"sigma1\",\n        \"networkId\": 246529,\n        \"nativeCurrency\": {\"name\": \"ARTIS sigma1 Ether\", \"symbol\": \"ATS\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.sigma1.artis.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://artis.eco\"\n    },\n    {\n        \"name\": \"ARTIS Testnet tau1\",\n        \"chainId\": 246785,\n        \"shortName\": \"atstau\",\n        \"chain\": \"ARTIS\",\n        \"network\": \"tau1\",\n        \"networkId\": 246785,\n        \"nativeCurrency\": {\"name\": \"ARTIS tau1 Ether\", \"symbol\": \"tATS\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.tau1.artis.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://artis.network\"\n    },\n    {\n        \"name\": \"Fantom Opera\",\n        \"chainId\": 250,\n        \"shortName\": \"ftm\",\n        \"chain\": \"FTM\",\n        \"network\": \"mainnet\",\n        \"networkId\": 250,\n        \"nativeCurrency\": {\"name\": \"Fantom\", \"symbol\": \"FTM\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.fantom.network\", \"https://fantomscan.io/rpc\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://fantom.foundation\"\n    },\n    {\n        \"name\": \"Huobi ECO Chain Testnet\",\n        \"chainId\": 256,\n        \"shortName\": \"hecot\",\n        \"chain\": \"Heco\",\n        \"network\": \"testnet\",\n        \"networkId\": 256,\n        \"nativeCurrency\": {\"name\": \"Huobi ECO Chain Test Native Token\", \"symbol\": \"htt\", \"decimals\": 18},\n        \"rpc\": [\"https://http-testnet.hecochain.com\", \"wss://ws-testnet.hecochain.com\"],\n        \"faucets\": [\"https://scan-testnet.hecochain.com/faucet\"],\n        \"infoURL\": \"https://www.hecochain.com\"\n    },\n    {\n        \"name\": \"xDai Mainnet\",\n        \"chainId\": 100,\n        \"shortName\": \"xDai\",\n        \"chain\": \"HPB\",\n        \"network\": \"mainnet\",\n        \"networkId\": 100,\n        \"nativeCurrency\": {\"name\": \"xdai coin\", \"symbol\": \"xdai\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.xdaichain.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://explorer.anyblock.tools/ethereum/poa/xdai\"\n    },\n    {\n        \"name\": \"Auxilium Network Mainnet\",\n        \"chainId\": 28945486,\n        \"shortName\": \"auxi\",\n        \"chain\": \"AUX\",\n        \"network\": \"mainnet\",\n        \"networkId\": 28945486,\n        \"nativeCurrency\": {\"name\": \"Auxilium coin\", \"symbol\": \"AUX\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.auxilium.global\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://auxilium.global\"\n    },\n    {\n        \"name\": \"Ethereum Testnet Ropsten\",\n        \"chainId\": 3,\n        \"shortName\": \"rop\",\n        \"chain\": \"ETH\",\n        \"network\": \"ropsten\",\n        \"networkId\": 3,\n        \"nativeCurrency\": {\"name\": \"Ropsten Ether\", \"symbol\": \"ROP\", \"decimals\": 18},\n        \"rpc\": [\"https://ropsten.infura.io/v3/${INFURA_API_KEY}\", \"wss://ropsten.infura.io/ws/v3/${INFURA_API_KEY}\"],\n        \"faucets\": [\"https://faucet.ropsten.be?${ADDRESS}\"],\n        \"infoURL\": \"https://github.com/ethereum/ropsten\"\n    },\n    {\n        \"name\": \"RSK Mainnet\",\n        \"chainId\": 30,\n        \"shortName\": \"rsk\",\n        \"chain\": \"RSK\",\n        \"network\": \"mainnet\",\n        \"networkId\": 30,\n        \"nativeCurrency\": {\"name\": \"RSK Mainnet Ether\", \"symbol\": \"RBTC\", \"decimals\": 18},\n        \"rpc\": [\"https://public-node.rsk.co\", \"https://mycrypto.rsk.co\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://rsk.co\"\n    },\n    {\n        \"name\": \"RSK Testnet\",\n        \"chainId\": 31,\n        \"shortName\": \"trsk\",\n        \"chain\": \"RSK\",\n        \"network\": \"testnet\",\n        \"networkId\": 31,\n        \"nativeCurrency\": {\"name\": \"RSK Testnet Ether\", \"symbol\": \"tRBTC\", \"decimals\": 18},\n        \"rpc\": [\"https://public-node.testnet.rsk.co\", \"https://mycrypto.testnet.rsk.co\"],\n        \"faucets\": [\"https://faucet.testnet.rsk.co\"],\n        \"infoURL\": \"https://rsk.co\"\n    },\n    {\n        \"name\": \"Ethersocial Network\",\n        \"chainId\": 31102,\n        \"shortName\": \"esn\",\n        \"chain\": \"ESN\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Ethersocial Network Ether\", \"symbol\": \"ESN\", \"decimals\": 18},\n        \"rpc\": [\"https://api.esn.gonspool.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ethersocial.org\"\n    },\n    {\n        \"name\": \"Pirl\",\n        \"chainId\": 3125659152,\n        \"shortName\": \"pirl\",\n        \"chain\": \"PIRL\",\n        \"network\": \"mainnet\",\n        \"networkId\": 3125659152,\n        \"nativeCurrency\": {\"name\": \"Pirl Ether\", \"symbol\": \"PIRL\", \"decimals\": 18},\n        \"rpc\": [\"https://wallrpc.pirl.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://pirl.io\"\n    },\n    {\n        \"name\": \"Joys Digital Mainnet\",\n        \"chainId\": 35855456,\n        \"shortName\": \"JOYS\",\n        \"chain\": \"JOYS\",\n        \"network\": \"mainnet\",\n        \"networkId\": 35855456,\n        \"nativeCurrency\": {\"name\": \"JOYS\", \"symbol\": \"JOYS\", \"decimals\": 18},\n        \"rpc\": [\"https://node.joys.digital\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://joys.digital\"\n    },\n    {\n        \"name\": \"Valorbit\",\n        \"chainId\": 38,\n        \"shortName\": \"val\",\n        \"chain\": \"VAL\",\n        \"network\": \"mainnet\",\n        \"networkId\": 38,\n        \"nativeCurrency\": {\"name\": \"Valorbit\", \"symbol\": \"VAL\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.valorbit.com/v2\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://valorbit.com\"\n    },\n    {\n        \"name\": \"Lisinski\",\n        \"chainId\": 385,\n        \"shortName\": \"lisinski\",\n        \"chain\": \"CRO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 385,\n        \"nativeCurrency\": {\"name\": \"Lisinski Ether\", \"symbol\": \"LISINSKI\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc-bitfalls1.lisinski.online\"],\n        \"faucets\": [\"https://pipa.lisinski.online\"],\n        \"infoURL\": \"https://lisinski.online\"\n    },\n    {\n        \"name\": \"Energi Mainnet\",\n        \"chainId\": 39797,\n        \"shortName\": \"nrg\",\n        \"chain\": \"NRG\",\n        \"network\": \"mainnet\",\n        \"networkId\": 39797,\n        \"nativeCurrency\": {\"name\": \"Energi\", \"symbol\": \"NRG\", \"decimals\": 18},\n        \"rpc\": [\"https://nodeapi.gen3.energi.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.energi.world/\"\n    },\n    {\n        \"name\": \"Ethereum Testnet Rinkeby\",\n        \"chainId\": 4,\n        \"shortName\": \"rin\",\n        \"chain\": \"ETH\",\n        \"network\": \"rinkeby\",\n        \"networkId\": 4,\n        \"nativeCurrency\": {\"name\": \"Rinkeby Ether\", \"symbol\": \"RIN\", \"decimals\": 18},\n        \"rpc\": [\"https://rinkeby.infura.io/v3/${INFURA_API_KEY}\", \"wss://rinkeby.infura.io/ws/v3/${INFURA_API_KEY}\"],\n        \"faucets\": [\"https://faucet.rinkeby.io\"],\n        \"infoURL\": \"https://www.rinkeby.io\"\n    },\n    {\n        \"name\": \"Ethereum Testnet Kovan\",\n        \"chainId\": 42,\n        \"shortName\": \"kov\",\n        \"chain\": \"ETH\",\n        \"network\": \"kovan\",\n        \"networkId\": 42,\n        \"nativeCurrency\": {\"name\": \"Kovan Ether\", \"symbol\": \"KOV\", \"decimals\": 18},\n        \"rpc\": [\"https://kovan.poa.network\", \"http://kovan.poa.network:8545\", \"https://kovan.infura.io/v3/${INFURA_API_KEY}\", \"wss://kovan.infura.io/ws/v3/${INFURA_API_KEY}\", \"ws://kovan.poa.network:8546\"],\n        \"faucets\": [\"https://faucet.kovan.network\", \"https://gitter.im/kovan-testnet/faucet\"],\n        \"infoURL\": \"https://kovan-testnet.github.io/website\"\n    },\n    {\n        \"name\": \"Optimistic Ethereum Testnet\",\n        \"chainId\": 69,\n        \"shortName\": \"kovan\",\n        \"chain\": \"ETH\",\n        \"network\": \"testnet\",\n        \"networkId\": 69,\n        \"nativeCurrency\": {\"name\": \"kovan Ether\", \"symbol\": \"ETH\", \"decimals\": 18},\n        \"rpc\": [\"https://kovan.optimism.io/\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://kovan-optimistic.etherscan.io/\"\n    },\n    {\n        \"name\": \"pegglecoin\",\n        \"chainId\": 42069,\n        \"shortName\": \"PC\",\n        \"chain\": \"42069\",\n        \"network\": \"mainnet\",\n        \"networkId\": 42069,\n        \"nativeCurrency\": {\"name\": \"pegglecoin\", \"symbol\": \"peggle\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://teampeggle.com\"\n    },\n    {\n        \"name\": \"Athereum\",\n        \"chainId\": 43110,\n        \"shortName\": \"avaeth\",\n        \"chain\": \"ATH\",\n        \"network\": \"athereum\",\n        \"networkId\": 43110,\n        \"nativeCurrency\": {\"name\": \"Athereum Ether\", \"symbol\": \"ATH\", \"decimals\": 18},\n        \"rpc\": [\"https://ava.network:21015/ext/evm/rpc\"],\n        \"faucets\": [\"http://athfaucet.ava.network//?address=${ADDRESS}\"],\n        \"infoURL\": \"https://athereum.ava.network\"\n    },\n    {\n        \"name\": \"Energi Testnet\",\n        \"chainId\": 49797,\n        \"shortName\": \"tnrg\",\n        \"chain\": \"NRG\",\n        \"network\": \"testnet\",\n        \"networkId\": 49797,\n        \"nativeCurrency\": {\"name\": \"Energi\", \"symbol\": \"tNRG\", \"decimals\": 18},\n        \"rpc\": [\"https://nodeapi.test3.energi.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.energi.world/\"\n    },\n    {\n        \"name\": \"Rupaya\",\n        \"chainId\": 499,\n        \"shortName\": \"rupx\",\n        \"chain\": \"RUPX\",\n        \"network\": \"mainnet\",\n        \"networkId\": 499,\n        \"nativeCurrency\": {\"name\": \"Rupaya\", \"symbol\": \"RUPX\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.rupx.io\"\n    },\n    {\n        \"name\": \"Ethereum Testnet Görli\",\n        \"chainId\": 5,\n        \"shortName\": \"gor\",\n        \"chain\": \"ETH\",\n        \"network\": \"goerli\",\n        \"networkId\": 5,\n        \"nativeCurrency\": {\"name\": \"Görli Ether\", \"symbol\": \"GOR\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.goerli.mudit.blog/\", \"https://rpc.slock.it/goerli \", \"https://goerli.prylabs.net/\"],\n        \"faucets\": [\"https://goerli-faucet.slock.it/?address=${ADDRESS}\", \"https://faucet.goerli.mudit.blog\"],\n        \"infoURL\": \"https://goerli.net/#about\"\n    },\n    {\n        \"name\": \"XinFin Network Mainnet\",\n        \"chainId\": 50,\n        \"shortName\": \"xdc\",\n        \"chain\": \"XDC\",\n        \"network\": \"mainnet\",\n        \"networkId\": 50,\n        \"nativeCurrency\": {\"name\": \"XinFin\", \"symbol\": \"XDC\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.xinfin.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://xinfin.org\"\n    },\n    {\n        \"name\": \"XinFin Apothem Testnet\",\n        \"chainId\": 51,\n        \"shortName\": \"TXDC\",\n        \"chain\": \"TXDC\",\n        \"network\": \"testnet\",\n        \"networkId\": 51,\n        \"nativeCurrency\": {\"name\": \"XinFinTest\", \"symbol\": \"TXDC\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.apothem.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://xinfin.org\"\n    },\n    {\n        \"name\": \"Tao Network\",\n        \"chainId\": 558,\n        \"shortName\": \"tao\",\n        \"chain\": \"TAO\",\n        \"network\": \"core\",\n        \"networkId\": 558,\n        \"nativeCurrency\": {\"name\": \"Tao\", \"symbol\": \"TAO\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.testnet.tao.network\", \"http://rpc.testnet.tao.network:8545\", \"https://rpc.tao.network\", \"wss://rpc.tao.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://tao.network\"\n    },\n    {\n        \"name\": \"Binance Smart Chain Mainnet\",\n        \"chainId\": 56,\n        \"shortName\": \"bnb\",\n        \"chain\": \"BSC\",\n        \"network\": \"mainnet\",\n        \"networkId\": 56,\n        \"nativeCurrency\": {\"name\": \"Binance Chain Native Token\", \"symbol\": \"BNB\", \"decimals\": 18},\n        \"rpc\": [\"https://bsc-dataseed1.binance.org\", \"https://bsc-dataseed2.binance.org\", \"https://bsc-dataseed3.binance.org\", \"https://bsc-dataseed4.binance.org\", \"https://bsc-dataseed1.defibit.io\", \"https://bsc-dataseed2.defibit.io\", \"https://bsc-dataseed3.defibit.io\", \"https://bsc-dataseed4.defibit.io\", \"https://bsc-dataseed1.ninicoin.io\", \"https://bsc-dataseed2.ninicoin.io\", \"https://bsc-dataseed3.ninicoin.io\", \"https://bsc-dataseed4.ninicoin.io\", \"wss://bsc-ws-node.nariox.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.binance.org\"\n    },\n    {\n        \"name\": \"Wegochain Rubidium Mainnet\",\n        \"chainId\": 5869,\n        \"shortName\": \"rbd\",\n        \"chain\": \"RBD\",\n        \"network\": \"mainnet\",\n        \"networkId\": 5869,\n        \"nativeCurrency\": {\"name\": \"Rubid\", \"symbol\": \"RBD\", \"decimals\": 18},\n        \"rpc\": [\"https://proxy.wegochain.io\", \"http://wallet.wegochain.io:7764\"],\n        \"faucets\": [],\n        \"infoURL\": \"http://wegochain.io\"\n    },\n    {\n        \"name\": \"Acala Mandala Testnet\",\n        \"chainId\": 595,\n        \"shortName\": \"maca\",\n        \"chain\": \"mACA\",\n        \"network\": \"testnet\",\n        \"networkId\": 595,\n        \"nativeCurrency\": {\"name\": \"Acala Mandala Token\", \"symbol\": \"mACA\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://acala.network\"\n    },\n    {\n        \"name\": \"Ethereum Classic Testnet Kotti\",\n        \"chainId\": 6,\n        \"shortName\": \"kot\",\n        \"chain\": \"ETC\",\n        \"network\": \"kotti\",\n        \"networkId\": 6,\n        \"nativeCurrency\": {\"name\": \"Kotti Ether\", \"symbol\": \"KOT\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://explorer.jade.builders/?network=kotti\"\n    },\n    {\n        \"name\": \"GoChain\",\n        \"chainId\": 60,\n        \"shortName\": \"go\",\n        \"chain\": \"GO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 60,\n        \"nativeCurrency\": {\"name\": \"GoChain Ether\", \"symbol\": \"GO\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.gochain.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://gochain.io\"\n    },\n    {\n        \"name\": \"Ethereum Classic Mainnet\",\n        \"chainId\": 61,\n        \"shortName\": \"etc\",\n        \"chain\": \"ETC\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Ethereum Classic Ether\", \"symbol\": \"ETC\", \"decimals\": 18},\n        \"rpc\": [\"https://ethereumclassic.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ethereumclassic.org\"\n    },\n    {\n        \"name\": \"Aquachain\",\n        \"chainId\": 61717561,\n        \"shortName\": \"aqua\",\n        \"chain\": \"AQUA\",\n        \"network\": \"mainnet\",\n        \"networkId\": 61717561,\n        \"nativeCurrency\": {\"name\": \"Aquachain Ether\", \"symbol\": \"AQUA\", \"decimals\": 18},\n        \"rpc\": [\"https://c.onical.org\", \"https://tx.aquacha.in/api\"],\n        \"faucets\": [\"https://aquacha.in/faucet\"],\n        \"infoURL\": \"https://aquachain.github.io\"\n    },\n    {\n        \"name\": \"Ethereum Classic Testnet Morden\",\n        \"chainId\": 62,\n        \"shortName\": \"tetc\",\n        \"chain\": \"ETC\",\n        \"network\": \"testnet\",\n        \"networkId\": 2,\n        \"nativeCurrency\": {\"name\": \"Ethereum Classic Testnet Ether\", \"symbol\": \"TETC\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://ethereumclassic.org\"\n    },\n    {\n        \"name\": \"Ethereum Classic Testnet Mordor\",\n        \"chainId\": 63,\n        \"shortName\": \"metc\",\n        \"chain\": \"ETC\",\n        \"network\": \"testnet\",\n        \"networkId\": 7,\n        \"nativeCurrency\": {\"name\": \"Mordor Classic Testnet Ether\", \"symbol\": \"METC\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://github.com/eth-classic/mordor/\"\n    },\n    {\n        \"name\": \"Ellaism\",\n        \"chainId\": 64,\n        \"shortName\": \"ella\",\n        \"chain\": \"ELLA\",\n        \"network\": \"mainnet\",\n        \"networkId\": 64,\n        \"nativeCurrency\": {\"name\": \"Ellaism Ether\", \"symbol\": \"ELLA\", \"decimals\": 18},\n        \"rpc\": [\"https://jsonrpc.ellaism.org\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ellaism.org\"\n    },\n    {\n        \"name\": \"OKExChain Testnet\",\n        \"chainId\": 65,\n        \"shortName\": \"okt\",\n        \"chain\": \"okexchain\",\n        \"network\": \"testnet\",\n        \"networkId\": 65,\n        \"nativeCurrency\": {\"name\": \"OKExChain Global Utility Token in testnet\", \"symbol\": \"TOKT\", \"decimals\": 18},\n        \"rpc\": [\"https://www.okex.com/okexchain-rpc-testnet\"],\n        \"faucets\": [\"https://www.okex.com/drawdex\"],\n        \"infoURL\": \"https://www.okex.com/okexchain\"\n    },\n    {\n        \"name\": \"OKExChain Mainnet\",\n        \"chainId\": 66,\n        \"shortName\": \"okt\",\n        \"chain\": \"okexchain\",\n        \"network\": \"mainnet\",\n        \"networkId\": 66,\n        \"nativeCurrency\": {\"name\": \"OKExChain Global Utility Token\", \"symbol\": \"OKT\", \"decimals\": 18},\n        \"rpc\": [\"https://www.okex.com/okexchain-rpc\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.okex.com/okexchain\"\n    },\n    {\n        \"name\": \"DBChain Testnet\",\n        \"chainId\": 67,\n        \"shortName\": \"dbm\",\n        \"chain\": \"DBM\",\n        \"network\": \"testnet\",\n        \"networkId\": 67,\n        \"nativeCurrency\": {\"name\": \"DBChain Testnet\", \"symbol\": \"DBM\", \"decimals\": 18},\n        \"rpc\": [\"http://test-rpc.dbmbp.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"http://test.dbmbp.com\"\n    },\n    {\n        \"name\": \"SoterOne Mainnet\",\n        \"chainId\": 68,\n        \"shortName\": \"SO1\",\n        \"chain\": \"SOTER\",\n        \"network\": \"mainnet\",\n        \"networkId\": 68,\n        \"nativeCurrency\": {\"name\": \"SoterOne Mainnet Ether\", \"symbol\": \"SOTER\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.soter.one\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.soterone.com\"\n    },\n    {\n        \"name\": \"Karura Network\",\n        \"chainId\": 686,\n        \"shortName\": \"kar\",\n        \"chain\": \"KAR\",\n        \"network\": \"mainnet\",\n        \"networkId\": 686,\n        \"nativeCurrency\": {\"name\": \"Karura Token\", \"symbol\": \"KAR\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://karura.network\"\n    },\n    {\n        \"name\": \"ThaiChain\",\n        \"chainId\": 7,\n        \"shortName\": \"tch\",\n        \"chain\": \"TCH\",\n        \"network\": \"mainnet\",\n        \"networkId\": 7,\n        \"nativeCurrency\": {\"name\": \"ThaiChain Ether\", \"symbol\": \"TCH\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.dome.cloud\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://thaichain.io\"\n    },\n    {\n        \"name\": \"Energy Web Volta Testnet\",\n        \"chainId\": 73799,\n        \"shortName\": \"vt\",\n        \"chain\": \"Volta\",\n        \"network\": \"testnet\",\n        \"networkId\": 73799,\n        \"nativeCurrency\": {\"name\": \"Volta Token\", \"symbol\": \"VT\", \"decimals\": 18},\n        \"rpc\": [\"https://volta-rpc.energyweb.org\", \"wss://volta-rpc.energyweb.org/ws\"],\n        \"faucets\": [\"https://voltafaucet.energyweb.org\"],\n        \"infoURL\": \"https://energyweb.org\"\n    },\n    {\n        \"name\": \"Mix\",\n        \"chainId\": 76,\n        \"shortName\": \"mix\",\n        \"chain\": \"MIX\",\n        \"network\": \"mainnet\",\n        \"networkId\": 76,\n        \"nativeCurrency\": {\"name\": \"Mix Ether\", \"symbol\": \"MIX\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc2.mix-blockchain.org:8647\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://mix-blockchain.org\"\n    },\n    {\n        \"name\": \"POA Network Sokol\",\n        \"chainId\": 77,\n        \"shortName\": \"poa\",\n        \"chain\": \"POA\",\n        \"network\": \"sokol\",\n        \"networkId\": 77,\n        \"nativeCurrency\": {\"name\": \"POA Sokol Ether\", \"symbol\": \"POA\", \"decimals\": 18},\n        \"rpc\": [\"https://sokol.poa.network\", \"wss://sokol.poa.network/wss\", \"ws://sokol.poa.network:8546\"],\n        \"faucets\": [\"https://faucet-sokol.herokuapp.com\"],\n        \"infoURL\": \"https://poa.network\"\n    },\n    {\n        \"name\": \"Moonbase Alphanet\",\n        \"chainId\": 1287,\n        \"shortName\": \"moonbase\",\n        \"chain\": \"Moonbase\",\n        \"network\": \"moonbase-alphanet\",\n        \"networkId\": 1287,\n        \"nativeCurrency\": {\"name\": \"Moonbase coin\", \"symbol\": \"DEV\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.testnet.moonbeam.network\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://moonbase.subscan.io/\"\n    },\n    {\n        \"name\": \"Musicoin\",\n        \"chainId\": 7762959,\n        \"shortName\": \"music\",\n        \"chain\": \"MUSIC\",\n        \"network\": \"mainnet\",\n        \"networkId\": 7762959,\n        \"nativeCurrency\": {\"name\": \"Musicoin\", \"symbol\": \"MUSIC\", \"decimals\": 18},\n        \"rpc\": [\"https://mewapi.musicoin.tw\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://musicoin.tw\"\n    },\n    {\n        \"name\": \"Firenze test network\",\n        \"chainId\": 78110,\n        \"shortName\": \"firenze\",\n        \"chain\": \"ETH\",\n        \"network\": \"testnet\",\n        \"networkId\": 78110,\n        \"nativeCurrency\": {\"name\": \"Firenze Ether\", \"symbol\": \"FIN\", \"decimals\": 18},\n        \"rpc\": [\"https://ethnode.primusmoney.com/firenze\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://primusmoney.com\"\n    },\n    {\n        \"name\": \"Acala Network\",\n        \"chainId\": 787,\n        \"shortName\": \"aca\",\n        \"chain\": \"ACA\",\n        \"network\": \"mainnet\",\n        \"networkId\": 787,\n        \"nativeCurrency\": {\"name\": \"Acala Token\", \"symbol\": \"ACA\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://acala.network\"\n    },\n    {\n        \"name\": \"Ubiq Network Mainnet\",\n        \"chainId\": 8,\n        \"shortName\": \"ubq\",\n        \"chain\": \"UBQ\",\n        \"network\": \"mainnet\",\n        \"networkId\": 88,\n        \"nativeCurrency\": {\"name\": \"Ubiq Ether\", \"symbol\": \"UBQ\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.octano.dev\", \"https://pyrus2.ubiqscan.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://ubiqsmart.com\"\n    },\n    {\n        \"name\": \"Matic Testnet Mumbai\",\n        \"chainId\": 80001,\n        \"shortName\": \"maticmum\",\n        \"chain\": \"Matic\",\n        \"network\": \"testnet\",\n        \"networkId\": 80001,\n        \"nativeCurrency\": {\"name\": \"Matic\", \"symbol\": \"tMATIC\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc-mumbai.matic.today\", \"wss://ws-mumbai.matic.today\"],\n        \"faucets\": [\"https://faucet.matic.network/\"],\n        \"infoURL\": \"https://matic.network/\"\n    },\n    {\n        \"name\": \"Meter Mainnet\",\n        \"chainId\": 82,\n        \"shortName\": \"Meter\",\n        \"chain\": \"METER\",\n        \"network\": \"mainnet\",\n        \"networkId\": 82,\n        \"nativeCurrency\": {\"name\": \"Meter\", \"symbol\": \"MTR\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc.meter.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.meter.io\"\n    },\n    {\n        \"name\": \"Callisto Mainnet\",\n        \"chainId\": 820,\n        \"shortName\": \"clo\",\n        \"chain\": \"CLO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1,\n        \"nativeCurrency\": {\"name\": \"Callisto Mainnet Ether\", \"symbol\": \"CLO\", \"decimals\": 18},\n        \"rpc\": [\"https://clo-geth.0xinfra.com\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://callisto.network\"\n    },\n    {\n        \"name\": \"Callisto Testnet\",\n        \"chainId\": 821,\n        \"shortName\": \"tclo\",\n        \"chain\": \"CLO\",\n        \"network\": \"testnet\",\n        \"networkId\": 2,\n        \"nativeCurrency\": {\"name\": \"Callisto Testnet Ether\", \"symbol\": \"TCLO\", \"decimals\": 18},\n        \"rpc\": [],\n        \"faucets\": [],\n        \"infoURL\": \"https://callisto.network\"\n    },\n    {\n        \"name\": \"Klaytn Mainnet Cypress\",\n        \"chainId\": 8217,\n        \"shortName\": \"Cypress\",\n        \"chain\": \"KLAY\",\n        \"network\": \"cypress\",\n        \"networkId\": 8217,\n        \"nativeCurrency\": {\"name\": \"KLAY\", \"symbol\": \"KLAY\", \"decimals\": 18},\n        \"rpc\": [\"https://node-api.klaytnapi.com/v1/klaytn\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.klaytn.com/\"\n    },\n    {\n        \"name\": \"TomoChain\",\n        \"chainId\": 88,\n        \"shortName\": \"tomo\",\n        \"chain\": \"TOMO\",\n        \"network\": \"mainnet\",\n        \"networkId\": 88,\n        \"nativeCurrency\": {\"name\": \"TomoChain Ether\", \"symbol\": \"TOMO\", \"decimals\": 18},\n        \"rpc\": [\"https://core.tomocoin.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://tomocoin.io\"\n    },\n    {\n        \"name\": \"bloxberg\",\n        \"chainId\": 8995,\n        \"shortName\": \"berg\",\n        \"chain\": \"bloxberg\",\n        \"network\": \"mainnet\",\n        \"networkId\": 8995,\n        \"nativeCurrency\": {\"name\": \"BERG\", \"symbol\": \"U+25B3\", \"decimals\": 18},\n        \"rpc\": [\"https://core.bloxberg.org\"],\n        \"faucets\": [\"https://faucet.bloxberg.org/\"],\n        \"infoURL\": \"https://bloxberg.org\"\n    },\n    {\n        \"name\": \"Avalanche Mainnet\",\n        \"chainId\": 43114,\n        \"shortName\": \"avalanche\",\n        \"chain\": \"avalanche\",\n        \"network\": \"mainnet\",\n        \"networkId\": 43114,\n        \"nativeCurrency\": {\"name\": \"AVAX Coin\", \"symbol\": \"AVAX\", \"decimals\": 18},\n        \"rpc\": [\"https://api.avax.network/ext/bc/C/rpc\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://snowtrace.io\"\n    },\n    {\n        \"name\": \"Avalanche Testnet\",\n        \"chainId\": 43113,\n        \"shortName\": \"fuji\",\n        \"chain\": \"fuji\",\n        \"network\": \"testnet\",\n        \"networkId\": 43113,\n        \"nativeCurrency\": {\"name\": \"AVAX Coin\", \"symbol\": \"AVAX\", \"decimals\": 18},\n        \"rpc\": [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n        \"faucets\": [\"https://faucet.avax-test.network/ \", \"https://faucets.chain.link/fuji\"],\n        \"infoURL\": \"https://testnet.snowtrace.io/\"\n    },\n    {\n        \"name\": \"Binance Smart Chain Testnet\",\n        \"chainId\": 97,\n        \"shortName\": \"bnbt\",\n        \"chain\": \"BSC\",\n        \"network\": \"Chapel\",\n        \"networkId\": 97,\n        \"nativeCurrency\": {\"name\": \"Binance Chain Native Token\", \"symbol\": \"tBNB\", \"decimals\": 18},\n        \"rpc\": [\"https://data-seed-prebsc-1-s1.binance.org:8545\", \"https://data-seed-prebsc-2-s1.binance.org:8545\", \"https://data-seed-prebsc-1-s2.binance.org:8545\", \"https://data-seed-prebsc-2-s2.binance.org:8545\", \"https://data-seed-prebsc-1-s3.binance.org:8545\", \"https://data-seed-prebsc-2-s3.binance.org:8545\"],\n        \"faucets\": [\"https://testnet.binance.org/faucet-smart\"],\n        \"infoURL\": \"https://testnet.binance.org/\"\n    },\n    {\n        \"name\": \"Nepal Blockchain Network\",\n        \"chainId\": 977,\n        \"shortName\": \"yeti\",\n        \"chain\": \"YETI\",\n        \"network\": \"mainnet\",\n        \"networkId\": 977,\n        \"nativeCurrency\": {\"name\": \"Nepal Blockchain Network Ether\", \"symbol\": \"YETI\", \"decimals\": 18},\n        \"rpc\": [\"https://api.nepalblockchain.dev\", \"https://api.nepalblockchain.network\"],\n        \"faucets\": [\"https://faucet.nepalblockchain.network\"],\n        \"infoURL\": \"https://nepalblockchain.network\"\n    },\n    {\n        \"name\": \"POA Network Core\",\n        \"chainId\": 99,\n        \"shortName\": \"skl\",\n        \"chain\": \"POA\",\n        \"network\": \"core\",\n        \"networkId\": 99,\n        \"nativeCurrency\": {\"name\": \"POA Network Core Ether\", \"symbol\": \"SKL\", \"decimals\": 18},\n        \"rpc\": [\"https://core.poanetwork.dev\", \"http://core.poanetwork.dev:8545\", \"https://core.poa.network\", \"ws://core.poanetwork.dev:8546\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://poa.network\"\n    },\n    {\n        \"name\": \"Joys Digital TestNet\",\n        \"chainId\": 99415706,\n        \"shortName\": \"TOYS\",\n        \"chain\": \"TOYS\",\n        \"network\": \"testnet\",\n        \"networkId\": 99415706,\n        \"nativeCurrency\": {\"name\": \"TOYS\", \"symbol\": \"TOYS\", \"decimals\": 18},\n        \"rpc\": [\"https://toys.joys.cash/\"],\n        \"faucets\": [\"https://faucet.joys.digital/\"],\n        \"infoURL\": \"https://joys.digital\"\n    },\n    {\n        \"name\": \"RSC Mainnet\",\n        \"chainId\": 1023,\n        \"shortName\": \"rsc\",\n        \"chain\": \"RSC\",\n        \"network\": \"mainnet\",\n        \"networkId\": 1023,\n        \"nativeCurrency\": {\"name\": \"Rai Stone Coin\", \"symbol\": \"RSC\", \"decimals\": 18},\n        \"rpc\": [\"https://rpc-mainnet.raisc.io\"],\n        \"faucets\": [],\n        \"infoURL\": \"https://www.raisc.io/\"\n    }\n]\n\nfunction ExplainNetworkById(netID) {\n    const id = parseInt(netID)\n    const k = networks.findIndex((x) => x.networkId === id)\n    if (k > -1) {\n        return networks[k]\n    }\n    return {}\n}\n\nfunction GetMetaNetConfig(netID) {\n    const f = ExplainNetworkById(netID)\n    return {\n        chainId: String(f.chainId),\n        chainName: f.name,\n        nativeCurrency: f.nativeCurrency,\n        blockExplorerUrls: [f.infoURL],\n        rpcUrls: f.rpc\n    }\n}\n\n/**\n * please keep update by the website: https://chainid.network/chains.json\n *\n */\n\nexport {\n    ExplainNetworkById,\n    GetMetaNetConfig\n}\n","import BlockWrap from \"../abi/BlockWrap\"\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\nimport Web3 from \"web3\";\nimport DetectionFunc from \"@metamask/detect-provider\"\nimport {ExplainNetworkById, GetMetaNetConfig} from \"../utils/ethereumnetworks\";\nimport {WebSocketProvider, Web3Provider} from '@ethersproject/providers';\nimport {WalletSupport} from \"../base/wallet\";\n\nexport default {\n    data() {\n        return {\n            ethereum: false,\n            wsProvider: false,\n            blockLink: false,\n            signedInConnection: false,\n            netID: 1,         // user metamask id\n            networkId: -1,\n            Web3Interval: 0,\n            AccountInterval: 0,\n            NetworkInterval: 0,\n            stateLog: null,\n            isMetamaskInterfaced: false,\n            onboarding: false,\n            w3: false,\n            MetamaskMsg: {\n                LOAD_METAMASK_WALLET_ERROR: \"Loading metamask error, please try later\",\n                EMPTY_METAMASK_ACCOUNT: \"Please log in to your metamask to continue with this app.\",\n                NETWORK_ERROR: \"The connection is abnormal, please try again\",\n                METAMASK_NOT_INSTALL_OR_DISCONNECTED: \"Please install metamask for this application\",\n                METAMASK_TEST_NET: \"Currently not in the main network.\",\n                METAMASK_MAIN_NET: \"Currently Main network\",\n                METAMASK_SWITCH_NET: \"Please switch this net to\",\n                USER_DENIED_ACCOUNT_AUTHORIZATION: \"User denied account authorization\",\n                REJECTED_BY_USER: \"The request is rejected by the user.\",\n                PARAMETERS_WERE_INVALID: \"the parameter were invalid\",\n                INTERNAL_ERROR: \"internal error\",\n                USER_DENIED: \"user denied\",\n                DISCONNECTED: \"disconnected\"\n            },\n            metamask_debug: false,\n            walletSupports: {\n                imtoken: false,\n                metamask: false\n            }\n        };\n    },\n    methods: {\n        notify_block_not_install() {\n            this.$emit(\"notify_block_not_install\")\n        },\n        notify_account_changed(accList) {\n            this.$emit(\"notify_account_changed\", accList)\n        },\n        notify_block_installed() {\n            this.$emit(\"notify_block_installed\")\n        },\n        checkError(key) {\n            console.log(key)\n        },\n        matchChainId(requiredId) {\n            return parseInt(this.netID) === parseInt(requiredId)\n        },\n        async checkFinalStep() {\n            if (!this.ethereum) {\n                this.checkError(\"METAMASK_NOT_INSTALL_OR_DISCONNECTED\")\n            } else {\n\n                if (this.ethereum.isConnected()) {\n                    //console.log(\"monitor.\")\n                    this.monitor()\n                    //console.log(\"init blockwrap now.\")\n                    this.init_blockwrap()\n                    //console.log(\"signing in now.\")\n                    this.sign_in()\n                    //console.log(\"check socket in now.\")\n                    await this.connect_ws();\n                } else {\n                    console.log(\"ethereum is not connected yet.\")\n                    window.addEventListener(\"ethereum#initialized\", this.checkWeb3MetaMask, {\n                        once: true,\n                    });\n                    setTimeout(this.checkWeb3MetaMask, 3000); // 3 seconds\n                }\n            }\n            clearInterval(this.Web3Interval)\n        },\n        async checkWeb3MetaMask() {\n            let chainId, installed = false;\n            if (window) {\n                try {\n                    if (!this.ethereum) {\n                        //detection for metamask\n                        const provider = await DetectionFunc()\n                        if (provider) {\n                            chainId = await provider.request({\n                                method: \"eth_chainId\"\n                            })\n                            this.ethereum = window.ethereum\n                            const w3tokenc = new Web3(window.ethereum);\n                            this.w3 = w3tokenc\n                            window.web3 = w3tokenc\n                            this.netID = chainId\n                            installed = true\n                        }\n                    }\n                } catch (e) {\n                }\n\n                try {\n                    if (!this.ethereum && window.hasOwnProperty(\"ethereum\")) {\n                        //detection for imtoken\n                        await window.ethereum.enable()\n                        this.ethereum = window.ethereum\n                        const w3imtoken = new Web3(this.ethereum)\n                        this.w3 = w3imtoken\n                        window.web3 = w3imtoken\n                        const provider = new Web3Provider(window.ethereum)\n                        chainId = await provider.request({\n                            method: \"eth_chainId\"\n                        })\n                        this.netID = chainId\n                        installed = true\n                    }\n                } catch (e) {\n                }\n\n                if (!installed) {\n                    this.checkError(\"METAMASK_NOT_INSTALL_OR_DISCONNECTED\")\n                    this.$emit(\"notify_metamask_not_install\")\n                } else {\n                    await this.checkFinalStep()\n                }\n\n            }\n        },\n        init_blockwrap() {\n            if (!this.blockLink) {\n                // console.log(this.w3, this.ethereum)\n                this.blockLink = new BlockWrap(this.w3, this.ethereum)\n                this.isMetamaskInterfaced = true\n                this.blockLink.setDebug(this.metamask_debug)\n                this.blockLink.setHandlers(\n                    this.handleConfirm,\n                    this.handleBroadcast,\n                    this.handleErrors\n                )\n                this.blockLink.setWallet(WalletSupport.UNKNOWN)\n                if (this.ethereum.hasOwnProperty(\"isImToken\")) {\n                    console.log(\"imtoken detected.\")\n                    this.walletSupports.imtoken = true\n                    this.blockLink.setWallet(WalletSupport.IMTOKEN)\n                }\n                if (this.ethereum.hasOwnProperty(\"isMetaMask\")) {\n                    console.log(\"metamask detected.\")\n                    this.walletSupports.metamask = true\n                    this.blockLink.setWallet(WalletSupport.METAMASK)\n                }\n            }\n        },\n        monitor() {\n            this.ethereum.on(\"accountsChanged\", (accounts) => {\n                // Handle the new accounts, or lack thereof.\n                // \"accounts\" will always be an array, but it can be empty.\n                if (accounts.length === 0) {\n                    this.signedInConnection = false\n                    this.checkError(\"METAMASK_NOT_INSTALL_OR_DISCONNECTED\")\n                } else {\n                    this.signedInConnection = true\n                    this.notify_account_changed(accounts)\n                }\n            });\n            this.ethereum.on(\"chainChanged\", (chainId) => {\n                // Handle the new chain.\n                // Correctly handling chain changes can be complicated.\n                // We recommend reloading the page unless you have good reason not to.\n                this.netID = chainId\n                this.$emit(\"notify_node_change\")\n                window.location.reload();\n            });\n            this.ethereum.on(\"connect\", (connectInfo) => {\n                console.log(connectInfo)\n                console.log(\"on connect\")\n                //this.notify_block_installed()\n            });\n            this.ethereum.on(\"disconnect\", (error) => {\n                if (error.code === 4001) {\n                    this.checkError(\"REJECTED_BY_USER\")\n                } else if (error.code === -32602) {\n                    this.checkError(\"PARAMETERS_WERE_INVALID\")\n                } else if (error.code === -32603) {\n                    this.checkError(\"INTERNAL_ERROR\")\n                } else {\n                    console.log(\"on disconnect\")\n                }\n            });\n            this.ethereum.on(\"message\", (message) => {\n                /*    interface ProviderMessage {\n                        type: string;\n                        data: unknown;\n                    }*/\n                if (this.metamask_debug) {\n                    console.log(\"on message now\")\n                    console.log(message)\n                }\n                if (this.blockLink) {\n                    this.blockLink.eventListener(message, this)\n                }\n            });\n        },\n        sign_in() {\n            //start the account registrations\n            this.ethereum\n                .request({method: \"eth_requestAccounts\"})\n                .then(this.handleAccountsChanged)\n                .catch(this.handleErrors);\n        },\n        handleAccountsChanged(acc) {\n            if (this.blockLink) {\n                if (acc.length > 0) {\n                    this.signedInConnection = true\n                    this.notify_block_installed()\n                    this.blockLink.setAccounts(acc)\n                } else {\n                    this.checkError(\"DISCONNECTED\")\n                }\n            }\n        },\n        handleErrors(error) {\n            if (error.code === 4001) {\n                // EIP-1193 userRejectedRequest error\n                // If this happens, the user rejected the connection request.\n                // console.log(\"Please connect to MetaMask.\");\n                this.checkError(\"USER_DENIED\")\n            } else if (error.code === -32002) {\n                console.log(\"Please connection to sign in confirmation.\");\n            } else {\n                console.error(error);\n            }\n        },\n        handleHash(hash) {\n            console.log(hash)\n        },\n        handleBroadcast(receipt) {\n            console.log(receipt)\n        },\n        handleConfirm(confirmation_num) {\n            if (confirmation_num === 3) {\n                console.log(\"success confirmed\")\n            }\n        },\n        async checkAccounts() {\n            if (!this.ethereum) return;\n            if (!this.w3) return;\n            try {\n                let acct = await this.w3.eth.getAccounts();\n                if (acct.length === 0) {\n                    this.checkError(\"EMPTY_METAMASK_ACCOUNT\")\n                    return;\n                }\n                this.handleAccountsChanged(acct)\n            } catch (e) {\n                console.log(\"error from check accounts\")\n                this.handleErrors(e)\n            }\n        },\n        async connect_ws() {\n            const network_id = await this.w3.eth.net.getId()\n            this.netID = network_id\n            const {name, network} = ExplainNetworkById(network_id)\n            if (this.blockLink) {\n                console.log(`Now it is connected to ${name} ${network}`)\n            }\n            if (this.walletSupports.imtoken) {\n                return\n            }\n            const {rpcUrls} = GetMetaNetConfig(network_id)\n            try {\n                rpcUrls.forEach((url, i) => {\n                    if (url.substring(0, 2) === \"ws\") {\n                        this.wsProvider = new WebSocketProvider(url)\n                        return false\n                    }\n                    if (url.substring(0, 3) === \"wss\") {\n                        this.wsProvider = new WebSocketProvider(url)\n                        return false\n                    }\n                })\n            } catch (e) {\n                console.log(\"failed in socket connection\")\n            }\n\n            if (this.wsProvider !== false) {\n                this.wsHandler(this.wsProvider)\n            }\n        },\n        wsHandler(ws_provider) {\n            ws_provider.on(\"block\", blocknumber => {\n                this.$emit(\"notify_block_generation\", blocknumber)\n            })\n        },\n        checkRequiredNetwork(network_Id) {\n            if (network_Id === parseInt(this.netID)) {\n                return true;\n            } else {\n                this.checkError(\"METAMASK_SWITCH_NET\")\n                return false;\n            }\n        },\n        registerOnBoard() {\n            if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n                this.onboarding.stopOnboarding();\n                console.log(\"stop on board\")\n                this.$emit(\"notify_metamask_stop_on_board\")\n            } else {\n                this.onboarding.startOnboarding();\n                console.log(\"start on board\")\n                this.$emit(\"notify_metamask_start_on_board\")\n            }\n        },\n    }\n    ,\n    mounted() {\n        this.$nextTick(async () => {\n            this.onboarding = new MetaMaskOnboarding();\n            await this.checkWeb3MetaMask()\n        })\n    }\n}\n;\n","<template>\n  <div id=\"app\">\n    <button @click=\"connect_metamask\" :disabled=\"signedInConnection\">CONNECT</button>\n    <button @click=\"add_network\" :disabled=\"!signedInConnection\">ADD NET</button>\n    <p>{{ status_connection }}</p>\n    <p>BlockAcon Metamask is installed [{{ metamaskInstalled }}], Detection: [{{ detected_x }}]</p>\n    <p>version 0.2.101</p>\n    <p>{{ error_message }}</p>\n    <p>\n      <button @click=\"add_token(tokens.ysl)\">ADD TOKEN [{{ tokens.ysl.symbol }}]</button>\n      <button @click=\"add_token(tokens.ysl2)\">ADD TOKEN [{{ tokens.ysl2.symbol }}]</button>\n      <button @click=\"add_token(tokens.usdf)\">ADD TOKEN [{{ tokens.usdf.symbol }}]</button>\n    </p>\n    <p>\n      <button @click=\"event_x\">GET ACCOUNTS</button>\n    </p>\n    <p>Network ID -> {{ netID }}</p>\n    <p>My address -> {{ my_address }}</p>\n    <p> ===================</p>\n    <p> {{ tokens.ysl2.symbol }} Coin: {{ coin_bal_ysl }} {{ tokens.ysl2.symbol }}, dec {{ coin_decimal }}</p>\n    <button @click=\"send_token_trig\">SEND TOKEN</button>\n    <p> {{ tokens.ysl2.address }}</p>\n\n    <p>{{ tokens.ysl2.symbol }} Coin Approval: {{ coin_approv_bal1 }} {{ tokens.ysl2.symbol }}, dec {{\n        coin_decimal\n      }}</p>\n    <button @click=\"approve_coin\">Approve TOKEN</button>\n\n    <p> {{ tokens.usdf.symbol }} Coin: {{ coin_bal_usd }} {{ tokens.usdf.symbol }}, dec {{ coin_decimal }}</p>\n    <p>{{ tokens.usdf.symbol }} Coin Unlimited Approval: {{ coin_approv_bal2 }} {{ tokens.usdf.symbol }}, dec\n      {{ coin_decimal }}</p>\n\n    <button @click=\"approve_coin_2\">Approve TOKEN Unlimited</button>\n    <p> {{ tokens.usdf.address }}</p>\n    <p> ===================</p>\n    <p>Native-Coin: {{ eth_bal }}</p>\n    <button @click=\"send_coin_trig\">♞ SEND COIN</button>\n\n    <p> ===================</p>\n    <p>Signature:</p>\n    <p>Message: {{ signing.message }}</p>\n    <button @click=\"sign_data\">✍︎ Signature Sign</button>\n    <p> ===================</p>\n    <p>Refresh data</p>\n    <button @click=\"initData\">Refresh</button>\n    <p> ===================</p>\n  </div>\n</template>\n<script>\nimport metamask from \"./mixins/vue-metamask\"\nimport {GetMetaNetConfig} from \"./utils/ethereumnetworks\"\n\nexport default {\n  name: \"app\",\n  comments: {},\n  mixins: [metamask],\n  data() {\n    return {\n      detected_x: 0,\n      my_address: \"\",\n      status_connection: \"\",\n      error_message: \"\",\n      coin_bal_ysl: 0,\n      coin_bal_usd: 0,\n      eth_bal: 0,\n      coin_decimal: 0,\n      coin_approv_bal1: 0,\n      coin_approv_bal2: 0,\n      metamask_debug: true,\n      metamaskInstalled: false,\n      tokens: {\n        ysl: {\n          address: '0x945bD413ee130Bbe5f30bB7dEFc11C82d2bB5d93', // The address that the token is at.\n          symbol: 'YSL', // A ticker symbol or shorthand, up to 5 chars.\n          decimals: 18, // The number of decimals in the token\n          image: 'https://iili.io/0wqS9I.png', // A string url of the token logo\n        },\n        ysl2: {\n          address: '0x1Ff8477Dd18d45d0BA1af6B25DC6470b50A6762D', // The address that the token is at.\n          symbol: 'YSL', // A ticker symbol or shorthand, up to 5 chars.\n          decimals: 18, // The number of decimals in the token\n          image: 'https://iili.io/0wqgwX.md.jpg', // A string url of the token logo\n        },\n        usdf: {\n          address: '0xAd08d31579dd599801e8839db70Bd9C84D2B98e9', // The address that the token is at.\n          symbol: 'USDF', // A ticker symbol or shorthand, up to 5 chars.\n          decimals: 18, // The number of decimals in the token\n          image: 'https://iili.io/0wqD9S.md.webp', // A string url of the token logo\n        }\n      },\n      agent_contract: \"0x6a18b9A2fb67B6D0301f71327d2055BaC3ec055E\",\n      networkConf: {\n        chainId: \"1023\",\n        chainName: \"RSC Mainnet\",\n        // iconUrls?: string[];\n        nativeCurrency: {\n          name: \"Rae Stone Coin\",\n          symbol: \"RSC\",\n          decimals: 18\n        },\n        blockExplorerUrls: [\"https://www.raisc.io\"],\n        rpcUrls: [\"https://rpc-mainnet.raisc.io\"]\n      },\n      signing: {\n        message: \"this is me and LET ME IN. ..3982829..3424.31.2.1.212221\"\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.status_connection = \"init...\"\n      this.$on(\"notify_block_not_install\", () => {\n        this.metamaskInstalled = false\n        this.status_connection = \"Detect done - NOT INSTALL 🔔️\"\n        console.log(this.status_connection)\n      })\n      this.$on(\"notify_block_installed\", async () => {\n        this.metamaskInstalled = true\n        this.status_connection = \"Detect done INSTALLED 🔔️\"\n        console.log(this.status_connection)\n        //check network\n        await this.connect_wallet()\n        this.status_connection = \"Connected to Chain ID: \" + this.netID\n        await this.initData()\n      })\n      this.$on(\"notify_account_changed\", () => {\n        console.log(\"detect done rns account changed 🔔️\")\n      })\n    })\n  },\n  methods: {\n    handleErrors(msg) {\n      this.error_message = msg\n    },\n    async connect_wallet() {\n      if (this.netID === parseInt(\"1023\")) {\n        setTimeout(async () => {\n          await this.initData()\n        }, 3000)\n      } else {\n        // only from hardcode\n        // await this.blockLink.metamask_detect_chain_process_flow(this.networkConf)\n        // await this.checkWeb3MetaMask()\n        // this.sign_in()\n        console.log(\"add new network or switching request\")\n        await this.blockLink.metamask_detect_chain_process_flow(\n            GetMetaNetConfig(\"1023\")\n        )\n      }\n    },\n    async initData() {\n      if (!this.blockLink) return\n      //gas limit / gas price\n      // this.blockLink.setDebug(true)\n      this.blockLink.setResource(1000000, 29000000000)\n      this.eth_bal = await this.blockLink.getCoinPlatform()\n      this.my_address = this.blockLink.getAccountAddress()\n      const usd = this.tokens.usdf.address\n      const ysl = this.tokens.ysl2.address\n\n      const c_ysl = await this.blockLink.getMyCoinDetail(ysl)\n      const cd_ysl = await this.blockLink.getContractToken(ysl)\n\n      const c_usd = await this.blockLink.getMyCoinDetail(usd)\n      const cd_usd = await this.blockLink.getContractToken(usd)\n\n      this.coin_bal_ysl = c_ysl.balance(this.my_address)\n      await c_ysl.runAllowanceAmount(cd_ysl, this.my_address, this.agent_contract)\n      const kf2 = c_ysl.approvalStatus(this.my_address, this.agent_contract)\n\n      this.coin_bal_usd = c_usd.balance(this.my_address)\n      await c_usd.runAllowanceAmount(cd_usd, this.my_address, this.agent_contract)\n      const kf1 = c_usd.approvalStatus(this.my_address, this.agent_contract)\n\n      // console.log(kf2, kf1)\n      // console.log(cd_usd, c_usd, c_ysl, cd_ysl)\n      this.coin_approv_bal1 = kf2.approvedAmount\n      this.coin_approv_bal2 = kf1.isUnlimited\n      this.coin_decimal = c_ysl.decimal\n    },\n    event_x() {\n\n    },\n    async approve_coin_2() {\n      if (!this.blockLink) return\n\n      const tuaddress = this.tokens.usdf.address\n      await this.blockLink.approveTokenUnlimited(tuaddress, this.agent_contract)\n    },\n    async approve_coin() {\n      if (!this.blockLink) return\n\n      const tuaddress = this.tokens.ysl2.address\n      // const user = this.blockLink.getAccountAddress()\n      // onst coinde = await this.blockLink.initCoinDetail(user, this.my_address)\n      // const cc = this.blockLink.getContractToken(user)\n      //  await coinde.runApproveToken(cc, ccfarm, 10000000)\n      const take = \"1000000000000000000000000000000000000\"\n      await this.blockLink.approveToken(tuaddress, this.agent_contract, take)\n\n    },\n    async send_coin_trig() {\n      if (!this.blockLink) return\n      // less 0000\n      const amount = 1000\n      const to = \"0x25bf0C8d7909a581549Dc2d075Ba12364D5ec0CA\"\n      await this.blockLink.sendCoin(amount, to)\n    },\n    async send_token_trig() {\n      const amount = 1000\n      const to = \"0x25bf0C8d7909a581549Dc2d075Ba12364D5ec0CA\"\n      const t_ysl_address = this.tokens.ysl2.address\n      await (this.blockLink && this.blockLink.sendToken(amount, to, t_ysl_address))\n    },\n    async add_network() {\n      if (!!this.blockLink) {\n        await this.blockLink.metamask_detect_chain_process_flow(\n            GetMetaNetConfig(\"1023\")\n        )\n      }\n    },\n    async sign_data() {\n      if (!!this.blockLink) {\n        await this.blockLink.metamask_message_personal_sign(\n            this.signing.message,\n            (address, res) => {\n              console.log(address, res)\n            }\n        )\n      }\n    },\n    connect_metamask() {\n      if (this.signedInConnection) {\n        console.log(\"You have already signed in\")\n      } else {\n        if (!this.isMetamaskInterfaced) {\n          this.registerOnBoard()\n          this.detected_x++;\n        } else {\n          if (this.matchChainId(1023)) {\n            this.checkWeb3MetaMask()\n            this.error_message = \"metamask is already installed, now request sign in...\"\n          } else {\n            this.error_message = \"Please change to chain ID 256\"\n          }\n        }\n      }\n    },\n    async add_token(token_data) {\n      /**\n       address: tokenAddress, // The address that the token is at.\n       symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n       decimals: tokenDecimals, // The number of decimals in the token\n       image: tokenImage, // A string url of the token logo\n       */\n      await this.blockLink.metamask_add_token({\n            type: 'ERC20',\n            options: token_data\n          }\n      )\n    }\n  }\n}\n</script>\n<style lang=\"css\">\n\n* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 40px;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  text-size-adjust: none;\n}\n\nbody {\n  background: #e0e0e0;\n}\n\n#app {\n  width: 100%;\n  height: 100%;\n}\n</style>\n","import mod from \"-!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./DemoDetectionSwitchImtoken.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./DemoDetectionSwitchImtoken.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DemoDetectionSwitchImtoken.vue?vue&type=template&id=69fb8235&\"\nimport script from \"./DemoDetectionSwitchImtoken.vue?vue&type=script&lang=js&\"\nexport * from \"./DemoDetectionSwitchImtoken.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DemoDetectionSwitchImtoken.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\n// import App from './DemoFunctions'\nimport App from './DemoDetectionSwitchImtoken'\n/*\n=========================================================================================\n  File Name: main.js\n  Description: main vue(js) file\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================\n*/\n\n/*\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept()\n}\n*/\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app')\n","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { AbstractSetDataType } from '../abstract_data_types/types/set';\nimport { constants } from '../utils/constants';\nimport { TupleDataType } from './tuple';\nexport class MethodDataType extends AbstractSetDataType {\n    constructor(abi, dataTypeFactory) {\n        const methodDataItem = { type: 'method', name: abi.name, components: abi.inputs };\n        super(methodDataItem, dataTypeFactory);\n        this._methodSignature = this._computeSignature();\n        this._methodSelector = this._computeSelector();\n        const returnDataItem = { type: 'tuple', name: abi.name, components: abi.outputs };\n        this._returnDataType = new TupleDataType(returnDataItem, this.getFactory());\n    }\n    encode(value, rules) {\n        const calldata = super.encode(value, rules, this._methodSelector);\n        return calldata;\n    }\n    decode(calldata, rules) {\n        const value = super.decode(calldata, rules, this._methodSelector);\n        return value;\n    }\n    strictDecode(calldata, rules) {\n        const value = super.decode(calldata, { ...rules, isStrictMode: true }, this._methodSelector);\n        const valueAsArray = _.isObject(value) ? _.values(value) : [value];\n        switch (valueAsArray.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return valueAsArray[0];\n            default:\n                return valueAsArray;\n        }\n    }\n    encodeReturnValues(value, rules) {\n        const returnData = this._returnDataType.encode(value, rules);\n        return returnData;\n    }\n    decodeReturnValues(returndata, rules) {\n        const returnValues = this._returnDataType.decode(returndata, rules);\n        return returnValues;\n    }\n    strictDecodeReturnValue(returndata, rules) {\n        const returnValues = this._returnDataType.decode(returndata, { ...rules, isStrictMode: true });\n        const returnValuesAsArray = _.isObject(returnValues) ? _.values(returnValues) : [returnValues];\n        switch (returnValuesAsArray.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return returnValuesAsArray[0];\n            default:\n                return returnValuesAsArray;\n        }\n    }\n    getSignatureType() {\n        return this._methodSignature;\n    }\n    getSelector() {\n        return this._methodSelector;\n    }\n    getReturnValueDataItem() {\n        const returnValueDataItem = this._returnDataType.getDataItem();\n        return returnValueDataItem;\n    }\n    _computeSignature() {\n        const memberSignature = this._computeSignatureOfMembers();\n        const methodSignature = `${this.getDataItem().name}${memberSignature}`;\n        return methodSignature;\n    }\n    _computeSelector() {\n        const signature = this._computeSignature();\n        const selector = ethUtil.bufferToHex(ethUtil.toBuffer(ethUtil\n            .keccak256(Buffer.from(signature))\n            .slice(constants.HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA, constants.HEX_SELECTOR_LENGTH_IN_BYTES)));\n        return selector;\n    }\n}\n","import { BlobCalldataBlock } from '../../calldata/blocks/blob';\nimport { DataType } from '../data_type';\nexport class AbstractBlobDataType extends DataType {\n    constructor(dataItem, factory, sizeKnownAtCompileTime) {\n        super(dataItem, factory);\n        this._sizeKnownAtCompileTime = sizeKnownAtCompileTime;\n    }\n    generateCalldataBlock(value, parentBlock) {\n        const encodedValue = this.encodeValue(value);\n        const name = this.getDataItem().name;\n        const signature = this.getSignature();\n        const parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        const block = new BlobCalldataBlock(name, signature, parentName, encodedValue);\n        return block;\n    }\n    generateValue(calldata, rules) {\n        const value = this.decodeValue(calldata);\n        return value;\n    }\n    isStatic() {\n        return this._sizeKnownAtCompileTime;\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport class InvalidMetaTransactionsArrayLengthsError extends RevertError {\n    constructor(mtxCount, signatureCount) {\n        super('InvalidMetaTransactionsArrayLengthsError', 'InvalidMetaTransactionsArrayLengthsError(uint256 mtxCount, uint256 signatureCount)', {\n            mtxCount,\n            signatureCount,\n        });\n    }\n}\nexport class MetaTransactionAlreadyExecutedError extends RevertError {\n    constructor(mtxHash, executedBlockNumber) {\n        super('MetaTransactionAlreadyExecutedError', 'MetaTransactionAlreadyExecutedError(bytes32 mtxHash, uint256 executedBlockNumber)', {\n            mtxHash,\n            executedBlockNumber,\n        });\n    }\n}\nexport class MetaTransactionUnsupportedFunctionError extends RevertError {\n    constructor(mtxHash, selector) {\n        super('MetaTransactionUnsupportedFunctionError', 'MetaTransactionUnsupportedFunctionError(bytes32 mtxHash, bytes4 selector)', {\n            mtxHash,\n            selector,\n        });\n    }\n}\nexport class MetaTransactionWrongSenderError extends RevertError {\n    constructor(mtxHash, sender, expectedSender) {\n        super('MetaTransactionWrongSenderError', 'MetaTransactionWrongSenderError(bytes32 mtxHash, address sender, address expectedSender)', {\n            mtxHash,\n            sender,\n            expectedSender,\n        });\n    }\n}\nexport class MetaTransactionExpiredError extends RevertError {\n    constructor(mtxHash, time, expirationTime) {\n        super('MetaTransactionExpiredError', 'MetaTransactionExpiredError(bytes32 mtxHash, uint256 time, uint256 expirationTime)', {\n            mtxHash,\n            time,\n            expirationTime,\n        });\n    }\n}\nexport class MetaTransactionGasPriceError extends RevertError {\n    constructor(mtxHash, gasPrice, minGasPrice, maxGasPrice) {\n        super('MetaTransactionGasPriceError', 'MetaTransactionGasPriceError(bytes32 mtxHash, uint256 gasPrice, uint256 minGasPrice, uint256 maxGasPrice)', {\n            mtxHash,\n            gasPrice,\n            minGasPrice,\n            maxGasPrice,\n        });\n    }\n}\nexport class MetaTransactionInsufficientEthError extends RevertError {\n    constructor(mtxHash, ethBalance, ethRequired) {\n        super('MetaTransactionInsufficientEthError', 'MetaTransactionInsufficientEthError(bytes32 mtxHash, uint256 ethBalance, uint256 ethRequired)', {\n            mtxHash,\n            ethBalance,\n            ethRequired,\n        });\n    }\n}\nexport class MetaTransactionInvalidSignatureError extends RevertError {\n    constructor(mtxHash, signature, errData) {\n        super('MetaTransactionInvalidSignatureError', 'MetaTransactionInvalidSignatureError(bytes32 mtxHash, bytes signature, bytes errData)', {\n            mtxHash,\n            signature,\n            errData,\n        });\n    }\n}\nexport class MetaTransactionCallFailedError extends RevertError {\n    constructor(mtxHash, callData, returnData) {\n        super('MetaTransactionCallFailedError', 'MetaTransactionCallFailedError(bytes32 mtxHash, bytes callData, bytes returnData)', {\n            mtxHash,\n            callData,\n            returnData,\n        });\n    }\n}\nconst types = [\n    InvalidMetaTransactionsArrayLengthsError,\n    MetaTransactionAlreadyExecutedError,\n    MetaTransactionUnsupportedFunctionError,\n    MetaTransactionWrongSenderError,\n    MetaTransactionExpiredError,\n    MetaTransactionGasPriceError,\n    MetaTransactionInsufficientEthError,\n    MetaTransactionInvalidSignatureError,\n    MetaTransactionCallFailedError,\n];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import * as addressSchema from './schemas/address_schema.json';\nimport * as assetPairsRequestOptsSchema from './schemas/asset_pairs_request_opts_schema.json';\nimport * as blockParamSchema from './schemas/block_param_schema.json';\nimport * as blockRangeSchema from './schemas/block_range_schema.json';\nimport * as callDataSchema from './schemas/call_data_schema.json';\nimport * as ecSignatureParameterSchema from './schemas/ec_signature_parameter_schema.json';\nimport * as ecSignatureSchema from './schemas/ec_signature_schema.json';\nimport * as eip712DomainSchema from './schemas/eip712_domain_schema.json';\nimport * as eip712TypedDataSchema from './schemas/eip712_typed_data_schema.json';\nimport * as exchangeProxyMetaTransactionSchema from './schemas/exchange_proxy_meta_transaction_schema.json';\nimport * as hexSchema from './schemas/hex_schema.json';\nimport * as indexFilterValuesSchema from './schemas/index_filter_values_schema.json';\nimport * as jsNumber from './schemas/js_number_schema.json';\nimport * as numberSchema from './schemas/number_schema.json';\nimport * as orderCancellationRequestsSchema from './schemas/order_cancel_schema.json';\nimport * as orderConfigRequestSchema from './schemas/order_config_request_schema.json';\nimport * as orderFillOrKillRequestsSchema from './schemas/order_fill_or_kill_requests_schema.json';\nimport * as orderFillRequestsSchema from './schemas/order_fill_requests_schema.json';\nimport * as orderHashSchema from './schemas/order_hash_schema.json';\nimport * as orderSchema from './schemas/order_schema.json';\nimport * as orderBookRequestSchema from './schemas/orderbook_request_schema.json';\nimport * as ordersRequestOptsSchema from './schemas/orders_request_opts_schema.json';\nimport * as ordersSchema from './schemas/orders_schema.json';\nimport * as pagedRequestOptsSchema from './schemas/paged_request_opts_schema.json';\nimport * as paginatedCollectionSchema from './schemas/paginated_collection_schema.json';\nimport * as relayerApiAssetDataPairsResponseSchema from './schemas/relayer_api_asset_data_pairs_response_schema.json';\nimport * as relayerApiAssetDataPairsSchema from './schemas/relayer_api_asset_data_pairs_schema.json';\nimport * as relayerApiAssetDataTradeInfoSchema from './schemas/relayer_api_asset_data_trade_info_schema.json';\nimport * as relayerApiErrorResponseSchema from './schemas/relayer_api_error_response_schema.json';\nimport * as relayerApiFeeRecipientsResponseSchema from './schemas/relayer_api_fee_recipients_response_schema.json';\nimport * as relayerApiOrderConfigPayloadSchema from './schemas/relayer_api_order_config_payload_schema.json';\nimport * as relayerApiOrderConfigResponseSchema from './schemas/relayer_api_order_config_response_schema.json';\nimport * as relayerApiOrderSchema from './schemas/relayer_api_order_schema.json';\nimport * as relayerApiOrderbookResponseSchema from './schemas/relayer_api_orderbook_response_schema.json';\nimport * as relayerApiOrdersChannelSubscribePayloadSchema from './schemas/relayer_api_orders_channel_subscribe_payload_schema.json';\nimport * as relayerApiOrdersChannelSubscribeSchema from './schemas/relayer_api_orders_channel_subscribe_schema.json';\nimport * as relayerApiOrdersChannelUpdateSchema from './schemas/relayer_api_orders_channel_update_response_schema.json';\nimport * as relayerApiOrdersResponseSchema from './schemas/relayer_api_orders_response_schema.json';\nimport * as relayerApiOrdersSchema from './schemas/relayer_api_orders_schema.json';\nimport * as signedOrderSchema from './schemas/signed_order_schema.json';\nimport * as signedOrdersSchema from './schemas/signed_orders_schema.json';\nimport * as tokenSchema from './schemas/token_schema.json';\nimport * as txDataSchema from './schemas/tx_data_schema.json';\nimport * as v4RfqOrderSchema from './schemas/v4_rfq_order_schema.json';\nimport * as v4RfqSignedOrderSchema from './schemas/v4_rfq_signed_order_schema.json';\nimport * as v4SignatureSchema from './schemas/v4_signature_schema.json';\nimport * as wholeNumberSchema from './schemas/whole_number_schema.json';\nimport * as zeroExTransactionSchema from './schemas/zero_ex_transaction_schema.json';\nexport const schemas = {\n    numberSchema,\n    addressSchema,\n    callDataSchema,\n    hexSchema,\n    ecSignatureParameterSchema,\n    ecSignatureSchema,\n    eip712DomainSchema,\n    eip712TypedDataSchema,\n    indexFilterValuesSchema,\n    orderCancellationRequestsSchema,\n    orderFillOrKillRequestsSchema,\n    orderFillRequestsSchema,\n    orderHashSchema,\n    orderSchema,\n    signedOrderSchema,\n    signedOrdersSchema,\n    ordersSchema,\n    blockParamSchema,\n    blockRangeSchema,\n    tokenSchema,\n    jsNumber,\n    pagedRequestOptsSchema,\n    ordersRequestOptsSchema,\n    orderBookRequestSchema,\n    orderConfigRequestSchema,\n    assetPairsRequestOptsSchema,\n    txDataSchema,\n    paginatedCollectionSchema,\n    relayerApiErrorResponseSchema,\n    relayerApiFeeRecipientsResponseSchema,\n    relayerApiOrderSchema,\n    relayerApiOrdersSchema,\n    relayerApiOrderConfigPayloadSchema,\n    relayerApiOrderConfigResponseSchema,\n    relayerApiOrderbookResponseSchema,\n    relayerApiAssetDataPairsResponseSchema,\n    relayerApiAssetDataTradeInfoSchema,\n    relayerApiOrdersChannelSubscribeSchema,\n    relayerApiOrdersChannelSubscribePayloadSchema,\n    relayerApiOrdersChannelUpdateSchema,\n    relayerApiOrdersResponseSchema,\n    relayerApiAssetDataPairsSchema,\n    zeroExTransactionSchema,\n    exchangeProxyMetaTransactionSchema,\n    wholeNumberSchema,\n    v4SignatureSchema,\n    v4RfqOrderSchema,\n    v4RfqSignedOrderSchema,\n};\n","import * as AJV from 'ajv';\nimport lodash from 'lodash';\nconst values = lodash.values;\nimport { schemas } from './validations';\nexport class SchemaValidator {\n    constructor(newSchemas = []) {\n        this._validator = new AJV({ schemaId: 'auto' });\n        this._validator.addSchema(values(schemas).filter(s => s !== undefined && s.id !== undefined));\n        this._validator.addSchema(newSchemas.filter(s => s !== undefined));\n    }\n    addSchema(schemaObjectOrArray) {\n        const _schemas = Array.isArray(schemaObjectOrArray) ? schemaObjectOrArray : [schemaObjectOrArray];\n        for (const s of _schemas) {\n            try {\n                this._validator.addSchema(s);\n            }\n            catch (err) {\n                if (!err.message.endsWith('already exists')) {\n                    throw err;\n                }\n            }\n        }\n    }\n    validate(instance, schema) {\n        this.isValid(instance, schema);\n        return this._validator;\n    }\n    isValid(instance, schema) {\n        return this._validator.validate(schema, JSON.parse(JSON.stringify(instance)));\n    }\n}\n","import { addHexPrefix, isValidChecksumAddress } from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { hexUtils, stripHexPrefix } from './hex_utils';\nconst BASIC_ADDRESS_REGEX = /^(0x)?[0-9a-f]{40}$/i;\nconst SAME_CASE_ADDRESS_REGEX = /^(0x)?([0-9a-f]{40}|[0-9A-F]{40})$/;\nconst ADDRESS_LENGTH = 40;\nexport const addressUtils = {\n    isChecksumAddress(address) {\n        return isValidChecksumAddress(address);\n    },\n    isAddress(address) {\n        if (!BASIC_ADDRESS_REGEX.test(address)) {\n            return false;\n        }\n        else if (SAME_CASE_ADDRESS_REGEX.test(address)) {\n            return true;\n        }\n        else {\n            const isValidChecksummedAddress = addressUtils.isChecksumAddress(address);\n            return isValidChecksummedAddress;\n        }\n    },\n    padZeros(address) {\n        return addHexPrefix(_.padStart(stripHexPrefix(address), ADDRESS_LENGTH, '0'));\n    },\n    generatePseudoRandomAddress() {\n        return hexUtils.random(20);\n    },\n};\n","export { promisify } from './promisify';\nexport { addressUtils } from './address_utils';\nexport { classUtils } from './class_utils';\nexport { deleteNestedProperty } from './delete_nested_property';\nexport { intervalUtils } from './interval_utils';\nexport { providerUtils } from './provider_utils';\nexport { B } from './configured_bignumber';\nexport { AbiDecoder } from './abi_decoder';\nexport { logUtils } from './log_utils';\nexport { abiUtils } from './abi_utils';\nexport { NULL_BYTES, NULL_ADDRESS } from './constants';\nexport { constants as AbiEncoderConstants } from './abi_encoder/utils/constants';\nexport { errorUtils } from './error_utils';\nexport { signTypedDataUtils } from './sign_typed_data_utils';\nexport { hexUtils } from './hex_utils';\nimport * as AbiEncoder_1 from './abi_encoder';\nexport { AbiEncoder_1 as AbiEncoder };\nexport * from './types';\nexport { generatePseudoRandom256BitNumber } from './random';\nexport { decodeBytesAsRevertError, decodeThrownErrorAsRevertError, coerceThrownErrorAsRevertError, RawRevertError, registerRevertErrorType, RevertError, StringRevertError, AnyRevertError, } from './revert_error';\nexport { fromTokenUnitAmount, toTokenUnitAmount } from './token_utils';\nexport const ZeroExRevertErrors = {\n    Common: require('./revert_errors/zero-ex/common_revert_errors'),\n    Proxy: require('./revert_errors/zero-ex/proxy_revert_errors'),\n    SimpleFunctionRegistry: require('./revert_errors/zero-ex/simple_function_registry_revert_errors'),\n    Ownable: require('./revert_errors/zero-ex/ownable_revert_errors'),\n    Spender: require('./revert_errors/zero-ex/spender_revert_errors'),\n    TransformERC20: require('./revert_errors/zero-ex/transform_erc20_revert_errors'),\n    Wallet: require('./revert_errors/zero-ex/wallet_revert_errors'),\n    MetaTransactions: require('./revert_errors/zero-ex/meta_transaction_revert_errors'),\n    SignatureValidator: require('./revert_errors/zero-ex/signature_validator_revert_errors'),\n    LiquidityProvider: require('./revert_errors/zero-ex/liquidity_provider_revert_errors'),\n};\n","import { SchemaValidator } from '../schemas';\nimport { addressUtils, B, logUtils } from '../utils';\nimport * as _ from 'lodash';\nimport * as validUrl from 'valid-url';\nimport BN from \"bn.js\";\nconst HEX_REGEX = /^0x[0-9A-F]*$/i;\nconst schemaValidator = new SchemaValidator();\nexport const assert = {\n    isBigNumber(variableName, value) {\n        const isBigNumber = B.BigNumber.isBigNumber(value);\n        assert.assert(isBigNumber, assert.typeAssertionMessage(variableName, 'BigNumber', value));\n    },\n    isNumberLike(variableName, value) {\n        const isBigNumber = B.BigNumber.isBigNumber(value);\n        const isNumber = typeof value === 'number';\n        assert.assert(isBigNumber || isNumber, assert.typeAssertionMessage(variableName, 'BigNumber | number', value));\n    },\n    isValidBaseUnitAmount(variableName, value) {\n        assert.isBigNumber(variableName, value);\n        const isNegative = value.isLessThan(0);\n        assert.assert(!isNegative, `${variableName} cannot be a negative number, found value: ${value.toNumber()}`);\n        const hasDecimals = value.decimalPlaces() !== 0;\n        assert.assert(!hasDecimals, `${variableName} should be in baseUnits (no decimals), found value: ${value.toNumber()}`);\n    },\n    isString(variableName, value) {\n        assert.assert(_.isString(value), assert.typeAssertionMessage(variableName, 'string', value));\n    },\n    isFunction(variableName, value) {\n        assert.assert(_.isFunction(value), assert.typeAssertionMessage(variableName, 'function', value));\n    },\n    isHexString(variableName, value) {\n        assert.assert(_.isString(value) && HEX_REGEX.test(value), assert.typeAssertionMessage(variableName, 'HexString', value));\n    },\n    isETHAddressHex(variableName, value) {\n        assert.assert(_.isString(value), assert.typeAssertionMessage(variableName, 'string', value));\n        assert.assert(addressUtils.isAddress(value), assert.typeAssertionMessage(variableName, 'ETHAddressHex', value));\n    },\n    doesBelongToStringEnum(variableName, value, stringEnum) {\n        const enumValues = _.values(stringEnum);\n        const doesBelongToStringEnum = _.includes(enumValues, value);\n        const enumValuesAsStrings = _.map(enumValues, enumValue => `'${enumValue}'`);\n        const enumValuesAsString = enumValuesAsStrings.join(', ');\n        assert.assert(doesBelongToStringEnum, `Expected ${variableName} to be one of: ${enumValuesAsString}, encountered: ${value}`);\n    },\n    hasAtMostOneUniqueValue(value, errMsg) {\n        assert.assert(_.uniq(value).length <= 1, errMsg);\n    },\n    isNumber(variableName, value) {\n        assert.assert(_.isFinite(value), assert.typeAssertionMessage(variableName, 'number', value));\n    },\n    isNumberOrBigNumber(variableName, value) {\n        if (_.isFinite(value)) {\n            return;\n        }\n        else {\n            let finalbignum = false;\n            if (typeof value === \"object\") {\n                if (B.BigNumber.isBigNumber(value)) {\n                    finalbignum = true;\n                }\n                if (Object(value).hasOwnProperty(\"_isBigNumber\")) {\n                    if (value._isBigNumber === true) {\n                        finalbignum = true;\n                    }\n                }\n                if (Object(value).hasOwnProperty(\"words\")) {\n                    finalbignum = true;\n                }\n                if (Object(value).hasOwnProperty(\"s\") && Object(value).hasOwnProperty(\"e\") && Object(value).hasOwnProperty(\"c\")) {\n                    finalbignum = true;\n                }\n                if (value instanceof B.BigNumber) {\n                    finalbignum = true;\n                }\n                if (value instanceof BN) {\n                    finalbignum = true;\n                }\n            }\n            assert.assert(finalbignum, assert.typeAssertionMessage(variableName, 'number or BigNumber or BN', value));\n        }\n    },\n    isBoolean(variableName, value) {\n        assert.assert(_.isBoolean(value), assert.typeAssertionMessage(variableName, 'boolean', value));\n    },\n    isWeb3Provider(variableName, value) {\n        logUtils.warn('DEPRECATED: Please use providerUtils.standardizeOrThrow() instead');\n        const isWeb3Provider = _.isFunction(value.send) || _.isFunction(value.sendAsync);\n        assert.assert(isWeb3Provider, assert.typeAssertionMessage(variableName, 'Provider', value));\n    },\n    doesConformToSchema(variableName, value, schema, subSchemas) {\n        if (value === undefined) {\n            throw new Error(`${variableName} can't be undefined`);\n        }\n        if (subSchemas !== undefined) {\n            schemaValidator.addSchema(subSchemas);\n        }\n        const validationResult = schemaValidator.validate(value, schema);\n        const hasValidationErrors = validationResult.errors && validationResult.errors.length > 0;\n        const msg = hasValidationErrors\n            ? `Expected ${variableName} to conform to schema ${schema.id}\nEncountered: ${JSON.stringify(value, null, '\\t')}\nValidation errors: ${validationResult.errors.join(', ')}`\n            : '';\n        assert.assert(!hasValidationErrors, msg);\n    },\n    doesMatchRegex(variableName, value, regex) {\n        assert.assert(regex.test(value), assert.typeAssertionMessage(variableName, String(regex), value));\n    },\n    isWebUri(variableName, value) {\n        const isValidUrl = validUrl.isWebUri(value) !== undefined;\n        assert.assert(isValidUrl, assert.typeAssertionMessage(variableName, 'web uri', value));\n    },\n    isUri(variableName, value) {\n        const isValidUri = validUrl.isUri(value) !== undefined;\n        assert.assert(isValidUri, assert.typeAssertionMessage(variableName, 'uri', value));\n    },\n    isBlockParam(variableName, value) {\n        if (Number.isInteger(value) && value >= 0) {\n            return;\n        }\n        if (value === 'earliest' || value === 'latest' || value === 'pending') {\n            return;\n        }\n        throw new Error(assert.typeAssertionMessage(variableName, 'BlockParam', value));\n    },\n    isArray(variableName, value) {\n        if (!Array.isArray(value)) {\n            throw new Error(assert.typeAssertionMessage(variableName, 'Array', value));\n        }\n    },\n    assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    },\n    typeAssertionMessage(variableName, type, value) {\n        return `Expected ${variableName} to be of type ${type}, encountered: ${value}`;\n    },\n};\n","import { assert } from \"../base/eth/0xassert\";\nimport { BaseContract } from \"../base/eth/base\";\nexport var Ori20Events;\n(function (Ori20Events) {\n    Ori20Events[\"Approval\"] = \"Approval\";\n    Ori20Events[\"MinterAdded\"] = \"MinterAdded\";\n    Ori20Events[\"MinterRemoved\"] = \"MinterRemoved\";\n    Ori20Events[\"Transfer\"] = \"Transfer\";\n})(Ori20Events || (Ori20Events = {}));\nexport class Ori20Contract extends BaseContract {\n    constructor(address, supportedProvider, ww3) {\n        super('Ori20', Ori20Contract.ABI(), address, supportedProvider, ww3);\n        this._methodABIIndex = {};\n    }\n    static Instance() {\n        if (window && window.hasOwnProperty(\"__eth_contract_Ori20\")) {\n            const obj = window.__eth_contract_Ori20;\n            if (obj instanceof Ori20Contract) {\n                return (obj);\n            }\n            else {\n                return (obj);\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    static async init(contract_address, supportedProvider, ww3) {\n        const contractInstance = await new Ori20Contract(contract_address, supportedProvider, ww3);\n        contractInstance.constructorArgs = [];\n        if (window && !window.hasOwnProperty(\"__eth_contract_Ori20\")) {\n            window.__eth_contract_Ori20 = contractInstance;\n        }\n        return contractInstance;\n    }\n    static ABI() {\n        const abi = [\n            {\n                inputs: [],\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'constructor',\n            },\n            {\n                anonymous: false,\n                inputs: [\n                    {\n                        name: 'owner',\n                        type: 'address',\n                        indexed: true,\n                    },\n                    {\n                        name: 'spender',\n                        type: 'address',\n                        indexed: true,\n                    },\n                    {\n                        name: 'value',\n                        type: 'uint256',\n                        indexed: false,\n                    },\n                ],\n                name: 'Approval',\n                outputs: [],\n                type: 'event',\n            },\n            {\n                anonymous: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                        indexed: true,\n                    },\n                ],\n                name: 'MinterAdded',\n                outputs: [],\n                type: 'event',\n            },\n            {\n                anonymous: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                        indexed: true,\n                    },\n                ],\n                name: 'MinterRemoved',\n                outputs: [],\n                type: 'event',\n            },\n            {\n                anonymous: false,\n                inputs: [\n                    {\n                        name: 'from',\n                        type: 'address',\n                        indexed: true,\n                    },\n                    {\n                        name: 'to',\n                        type: 'address',\n                        indexed: true,\n                    },\n                    {\n                        name: 'value',\n                        type: 'uint256',\n                        indexed: false,\n                    },\n                ],\n                name: 'Transfer',\n                outputs: [],\n                type: 'event',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                ],\n                name: 'addMinter',\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [\n                    {\n                        name: 'owner',\n                        type: 'address',\n                    },\n                    {\n                        name: 'spender',\n                        type: 'address',\n                    },\n                ],\n                name: 'allowance',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint256',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'spender',\n                        type: 'address',\n                    },\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'approve',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                ],\n                name: 'balanceOf',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint256',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'burn',\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'burnFrom',\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'cap',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint256',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'decimals',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint8',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'spender',\n                        type: 'address',\n                    },\n                    {\n                        name: 'subtractedValue',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'decreaseAllowance',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'getDecimals',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint8',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'gov',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'address',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'spender',\n                        type: 'address',\n                    },\n                    {\n                        name: 'addedValue',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'increaseAllowance',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                ],\n                name: 'isMinter',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'mint',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'name',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'string',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'account',\n                        type: 'address',\n                    },\n                ],\n                name: 'removeMinter',\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [],\n                name: 'renounceMinter',\n                outputs: [],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'symbol',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'string',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'tokenName',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'string',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'tokenSymbol',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'string',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: true,\n                inputs: [],\n                name: 'totalSupply',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'uint256',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'view',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'recipient',\n                        type: 'address',\n                    },\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'transfer',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                constant: false,\n                inputs: [\n                    {\n                        name: 'sender',\n                        type: 'address',\n                    },\n                    {\n                        name: 'recipient',\n                        type: 'address',\n                    },\n                    {\n                        name: 'amount',\n                        type: 'uint256',\n                    },\n                ],\n                name: 'transferFrom',\n                outputs: [\n                    {\n                        name: '',\n                        type: 'bool',\n                    },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n        ];\n        return abi;\n    }\n    async addMinter(account) {\n        const self = this;\n        assert.isString('account', account);\n        const promizz = self._contract.methods.addMinter(account);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async addMinterGas(account) {\n        const self = this;\n        const gasAmount = await self._contract.methods.addMinter(account).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async allowance(owner, spender) {\n        const self = this;\n        assert.isString('owner', owner);\n        assert.isString('spender', spender);\n        const promizz = self._contract.methods.allowance(owner, spender);\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async allowanceGas(owner, spender) {\n        const self = this;\n        const gasAmount = await self._contract.methods.allowance(owner, spender).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async approve(spender, amount) {\n        const self = this;\n        assert.isString('spender', spender);\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.approve(spender, amount);\n        await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n    }\n    ;\n    async approveGas(spender, amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.approve(spender, amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async balanceOf(account) {\n        const self = this;\n        assert.isString('account', account);\n        const promizz = self._contract.methods.balanceOf(account);\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async balanceOfGas(account) {\n        const self = this;\n        const gasAmount = await self._contract.methods.balanceOf(account).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async burn(amount) {\n        const self = this;\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.burn(amount);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async burnGas(amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.burn(amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async burnFrom(account, amount) {\n        const self = this;\n        assert.isString('account', account);\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.burnFrom(account, amount);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async burnFromGas(account, amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.burnFrom(account, amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async cap() {\n        const self = this;\n        const promizz = self._contract.methods.cap();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async capGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.cap().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async decimals() {\n        const self = this;\n        const promizz = self._contract.methods.decimals();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async decimalsGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.decimals().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async decreaseAllowance(spender, subtractedValue) {\n        const self = this;\n        assert.isString('spender', spender);\n        assert.isNumberOrBigNumber('subtractedValue', subtractedValue);\n        const promizz = self._contract.methods.decreaseAllowance(spender, subtractedValue);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async decreaseAllowanceGas(spender, subtractedValue) {\n        const self = this;\n        const gasAmount = await self._contract.methods.decreaseAllowance(spender, subtractedValue).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async getDecimals() {\n        const self = this;\n        const promizz = self._contract.methods.getDecimals();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async getDecimalsGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.getDecimals().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async gov() {\n        const self = this;\n        const promizz = self._contract.methods.gov();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async govGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.gov().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async increaseAllowance(spender, addedValue) {\n        const self = this;\n        assert.isString('spender', spender);\n        assert.isNumberOrBigNumber('addedValue', addedValue);\n        const promizz = self._contract.methods.increaseAllowance(spender, addedValue);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async increaseAllowanceGas(spender, addedValue) {\n        const self = this;\n        const gasAmount = await self._contract.methods.increaseAllowance(spender, addedValue).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async isMinter(account) {\n        const self = this;\n        assert.isString('account', account);\n        const promizz = self._contract.methods.isMinter(account);\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async isMinterGas(account) {\n        const self = this;\n        const gasAmount = await self._contract.methods.isMinter(account).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async mint(account, amount) {\n        const self = this;\n        assert.isString('account', account);\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.mint(account, amount);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async mintGas(account, amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.mint(account, amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async name() {\n        const self = this;\n        const promizz = self._contract.methods.name();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async nameGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.name().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async removeMinter(account) {\n        const self = this;\n        assert.isString('account', account);\n        const promizz = self._contract.methods.removeMinter(account);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async removeMinterGas(account) {\n        const self = this;\n        const gasAmount = await self._contract.methods.removeMinter(account).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async renounceMinter() {\n        const self = this;\n        const promizz = self._contract.methods.renounceMinter();\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async renounceMinterGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.renounceMinter().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async symbol() {\n        const self = this;\n        const promizz = self._contract.methods.symbol();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async symbolGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.symbol().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async tokenName() {\n        const self = this;\n        const promizz = self._contract.methods.tokenName();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async tokenNameGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.tokenName().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async tokenSymbol() {\n        const self = this;\n        const promizz = self._contract.methods.tokenSymbol();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async tokenSymbolGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.tokenSymbol().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async totalSupply() {\n        const self = this;\n        const promizz = self._contract.methods.totalSupply();\n        const result = await promizz.call();\n        return result;\n    }\n    ;\n    async totalSupplyGas() {\n        const self = this;\n        const gasAmount = await self._contract.methods.totalSupply().estimateGas();\n        return gasAmount;\n    }\n    ;\n    async transfer(recipient, amount) {\n        const self = this;\n        assert.isString('recipient', recipient);\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.transfer(recipient, amount);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async transferGas(recipient, amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.transfer(recipient, amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n    async transferFrom(sender, recipient, amount) {\n        const self = this;\n        assert.isString('sender', sender);\n        assert.isString('recipient', recipient);\n        assert.isNumberOrBigNumber('amount', amount);\n        const promizz = self._contract.methods.transferFrom(sender, recipient, amount);\n        const result = await promizz.send({\n            from: this._blockwrap.getAccountAddress(),\n            gas: this.gas,\n            gasPrice: this.gasPrice\n        }).on('transactionHash', (hash) => {\n            this.onBroadcast(hash);\n        }).on('confirmation', (confirmationNumber, receipt) => {\n            this.onConfirmation(receipt);\n        }).on('receipt', (r) => {\n            this.pushReceiptSuccess(r);\n        }).on('error', (error, receipt) => {\n            this.onError(receipt, error);\n        }).catch((e) => {\n            this.catchErro(e);\n        });\n        return result;\n    }\n    ;\n    async transferFromGas(sender, recipient, amount) {\n        const self = this;\n        const gasAmount = await self._contract.methods.transferFrom(sender, recipient, amount).estimateGas();\n        return gasAmount;\n    }\n    ;\n}\nOri20Contract.contractName = 'Ori20';\n","import { EventEmitter } from \"eventemitter3\";\nexport class BaseContract extends EventEmitter {\n    constructor(contractName, abi, address, supportedProvider, webww3) {\n        super();\n        this.__debug = false;\n        this.constructorArgs = [];\n        this._address = \"\";\n        this._errorHandler = false;\n        this._broadcastHandler = false;\n        this._confirmHandler = false;\n        this._receiptListSuccess = [];\n        this._receiptListFailure = [];\n        this.gas = 1000000;\n        this.gasPrice = 20000000000;\n        this._address = address;\n        this._provider = supportedProvider;\n        this._contract = new webww3.eth.Contract(abi, address);\n        this._ww3 = webww3;\n    }\n    setDebug(bool) {\n        this.__debug = bool;\n    }\n    setBlockLink(bw) {\n        if (!bw)\n            return;\n        this._blockwrap = bw;\n        this.setHandlers(this._blockwrap.confirmHandler, this._blockwrap.boardcastHandler, this._blockwrap.errorHandler);\n    }\n    setResource(gas, gas_price) {\n        this.gas = gas;\n        this.gasPrice = gas_price;\n    }\n    setHandlers(confirm, broadcast, err) {\n        if (err) {\n            this._errorHandler = err;\n        }\n        if (broadcast) {\n            this._broadcastHandler = broadcast;\n        }\n        if (confirm) {\n            this._confirmHandler = confirm;\n        }\n    }\n    onError(receipt, err) {\n        if (!this._errorHandler || !receipt)\n            return;\n        this._receiptListFailure.push(receipt);\n        this._errorHandler(err);\n    }\n    catchErro(err) {\n        if (!this._errorHandler)\n            return;\n        this._errorHandler(err);\n    }\n    onBroadcast(hash) {\n        if (!this._broadcastHandler)\n            return;\n        this._broadcastHandler(hash);\n    }\n    onConfirmation(receipt) {\n        if (!this._confirmHandler)\n            return;\n        this._confirmHandler(receipt);\n    }\n    pushReceiptSuccess(r) {\n        this._receiptListSuccess.push(r);\n    }\n    getReceiptsSuccess() {\n        return this._receiptListSuccess;\n    }\n    getReceiptsFailure() {\n        return this._receiptListFailure;\n    }\n}\n","import { CalldataBlock } from '../calldata_block';\nexport class BlobCalldataBlock extends CalldataBlock {\n    constructor(name, signature, parentName, blob) {\n        const headerSizeInBytes = 0;\n        const bodySizeInBytes = blob.byteLength;\n        super(name, signature, parentName, headerSizeInBytes, bodySizeInBytes);\n        this._blob = blob;\n    }\n    toBuffer() {\n        return this._blob;\n    }\n    getRawData() {\n        return this._blob;\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport class LiquidityProviderIncompleteSellError extends RevertError {\n    constructor(providerAddress, makerToken, takerToken, sellAmount, boughtAmount, minBuyAmount) {\n        super('LiquidityProviderIncompleteSellError', 'LiquidityProviderIncompleteSellError(address providerAddress, address makerToken, address takerToken, uint256 sellAmount, uint256 boughtAmount, uint256 minBuyAmount)', {\n            providerAddress,\n            makerToken,\n            takerToken,\n            sellAmount,\n            boughtAmount,\n            minBuyAmount,\n        });\n    }\n}\nexport class NoLiquidityProviderForMarketError extends RevertError {\n    constructor(xAsset, yAsset) {\n        super('NoLiquidityProviderForMarketError', 'NoLiquidityProviderForMarketError(address xAsset, address yAsset)', {\n            xAsset,\n            yAsset,\n        });\n    }\n}\nconst types = [LiquidityProviderIncompleteSellError, NoLiquidityProviderForMarketError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import * as ethUtil from 'ethereumjs-util';\nimport { constants } from '../../utils/constants';\nimport { CalldataBlock } from '../calldata_block';\nexport class PointerCalldataBlock extends CalldataBlock {\n    constructor(name, signature, parentName, dependency, parent) {\n        const headerSizeInBytes = PointerCalldataBlock._EMPTY_HEADER_SIZE;\n        const bodySizeInBytes = PointerCalldataBlock._DEPENDENT_PAYLOAD_SIZE_IN_BYTES;\n        super(name, signature, parentName, headerSizeInBytes, bodySizeInBytes);\n        this._parent = parent;\n        this._dependency = dependency;\n        this._aliasFor = undefined;\n    }\n    toBuffer() {\n        const destinationOffset = this._aliasFor !== undefined ? this._aliasFor.getOffsetInBytes() : this._dependency.getOffsetInBytes();\n        const parentOffset = this._parent.getOffsetInBytes();\n        const parentHeaderSize = this._parent.getHeaderSizeInBytes();\n        const pointer = destinationOffset - (parentOffset + parentHeaderSize);\n        const pointerHex = `0x${pointer.toString(constants.HEX_BASE)}`;\n        const pointerBuf = ethUtil.toBuffer(pointerHex);\n        const pointerBufPadded = ethUtil.setLengthLeft(pointerBuf, constants.EVM_WORD_WIDTH_IN_BYTES);\n        return pointerBufPadded;\n    }\n    getDependency() {\n        return this._dependency;\n    }\n    setAlias(block) {\n        this._aliasFor = block;\n        this._setName(`${this.getName()} (alias for ${block.getName()})`);\n    }\n    getAlias() {\n        return this._aliasFor;\n    }\n    getRawData() {\n        const dependencyRawData = this._dependency.getRawData();\n        const rawDataComponents = [];\n        rawDataComponents.push(PointerCalldataBlock.RAW_DATA_START);\n        rawDataComponents.push(dependencyRawData);\n        rawDataComponents.push(PointerCalldataBlock.RAW_DATA_END);\n        const rawData = Buffer.concat(rawDataComponents);\n        return rawData;\n    }\n}\nPointerCalldataBlock.RAW_DATA_START = Buffer.from('<');\nPointerCalldataBlock.RAW_DATA_END = Buffer.from('>');\nPointerCalldataBlock._DEPENDENT_PAYLOAD_SIZE_IN_BYTES = 32;\nPointerCalldataBlock._EMPTY_HEADER_SIZE = 0;\n","export class Queue {\n    constructor() {\n        this._store = [];\n    }\n    pushBack(val) {\n        this._store.push(val);\n    }\n    pushFront(val) {\n        this._store.unshift(val);\n    }\n    popFront() {\n        return this._store.shift();\n    }\n    popBack() {\n        if (this._store.length === 0) {\n            return undefined;\n        }\n        const backElement = this._store.splice(-1, 1)[0];\n        return backElement;\n    }\n    mergeBack(q) {\n        this._store = this._store.concat(q._store);\n    }\n    mergeFront(q) {\n        this._store = q._store.concat(this._store);\n    }\n    getStore() {\n        return this._store;\n    }\n    peekFront() {\n        return this._store.length >= 0 ? this._store[0] : undefined;\n    }\n}\n","export class PromiseWithTransactionHash {\n    constructor(txHashPromise, promise) {\n        this.txHashPromise = txHashPromise;\n        this._promise = promise;\n    }\n    then(onFulfilled, onRejected) {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this._promise.catch(onRejected);\n    }\n    finally(onFinally) {\n        return this._promise.finally(onFinally);\n    }\n    get [Symbol.toStringTag]() {\n        return this._promise[Symbol.toStringTag];\n    }\n}\nexport var SubscriptionErrors;\n(function (SubscriptionErrors) {\n    SubscriptionErrors[\"SubscriptionNotFound\"] = \"SUBSCRIPTION_NOT_FOUND\";\n    SubscriptionErrors[\"SubscriptionAlreadyPresent\"] = \"SUBSCRIPTION_ALREADY_PRESENT\";\n})(SubscriptionErrors || (SubscriptionErrors = {}));\nexport var OpCode;\n(function (OpCode) {\n    OpCode[\"Stop\"] = \"STOP\";\n    OpCode[\"Add\"] = \"ADD\";\n    OpCode[\"Mul\"] = \"MUL\";\n    OpCode[\"Sub\"] = \"SUB\";\n    OpCode[\"Div\"] = \"DIV\";\n    OpCode[\"SDiv\"] = \"SDIV\";\n    OpCode[\"Mod\"] = \"MOD\";\n    OpCode[\"SMod\"] = \"SMOD\";\n    OpCode[\"AddMod\"] = \"ADDMOD\";\n    OpCode[\"MulMod\"] = \"MULMOD\";\n    OpCode[\"Exp\"] = \"EXP\";\n    OpCode[\"SignExtend\"] = \"SIGNEXTEND\";\n    OpCode[\"Lt\"] = \"LT\";\n    OpCode[\"Gt\"] = \"GT\";\n    OpCode[\"SLt\"] = \"SLT\";\n    OpCode[\"SGt\"] = \"SGT\";\n    OpCode[\"Eq\"] = \"EQ\";\n    OpCode[\"IsZero\"] = \"ISZERO\";\n    OpCode[\"And\"] = \"AND\";\n    OpCode[\"Or\"] = \"OR\";\n    OpCode[\"Xor\"] = \"XOR\";\n    OpCode[\"Not\"] = \"NOT\";\n    OpCode[\"Byte\"] = \"BYTE\";\n    OpCode[\"Sha3\"] = \"SHA3\";\n    OpCode[\"Address\"] = \"ADDRESS\";\n    OpCode[\"Balance\"] = \"BALANCE\";\n    OpCode[\"Origin\"] = \"ORIGIN\";\n    OpCode[\"Caller\"] = \"CALLER\";\n    OpCode[\"CallValue\"] = \"CALLVALUE\";\n    OpCode[\"CallDataLoad\"] = \"CALLDATALOAD\";\n    OpCode[\"CallDataSize\"] = \"CALLDATASIZE\";\n    OpCode[\"CallDataCopy\"] = \"CALLDATACOPY\";\n    OpCode[\"CodeSize\"] = \"CODESIZE\";\n    OpCode[\"CodeCopy\"] = \"CODECOPY\";\n    OpCode[\"GasPrice\"] = \"GASPRICE\";\n    OpCode[\"ExtCodeSize\"] = \"EXTCODESIZE\";\n    OpCode[\"ExtCodeCopy\"] = \"EXTCODECOPY\";\n    OpCode[\"ReturnDataSize\"] = \"RETURNDATASIZE\";\n    OpCode[\"ReturnDataCopy\"] = \"RETURNDATACOPY\";\n    OpCode[\"BlockHash\"] = \"BLOCKHASH\";\n    OpCode[\"Coinbase\"] = \"COINBASE\";\n    OpCode[\"TimeStamp\"] = \"TimeStamp\";\n    OpCode[\"Number\"] = \"NUMBER\";\n    OpCode[\"Difficulty\"] = \"DIFFICULTY\";\n    OpCode[\"Gaslimit\"] = \"GASLIMIT\";\n    OpCode[\"Pop\"] = \"POP\";\n    OpCode[\"MLoad\"] = \"MLOAD\";\n    OpCode[\"MStore\"] = \"MSTORE\";\n    OpCode[\"MStore8\"] = \"MSTORE8\";\n    OpCode[\"SLoad\"] = \"SLOAD\";\n    OpCode[\"SStore\"] = \"SSTORE\";\n    OpCode[\"Jump\"] = \"JUMP\";\n    OpCode[\"Jumpi\"] = \"JUMPI\";\n    OpCode[\"Pc\"] = \"PC\";\n    OpCode[\"MSize\"] = \"MSIZE\";\n    OpCode[\"Gas\"] = \"GAS\";\n    OpCode[\"JumpDest\"] = \"JUMPDEST\";\n    OpCode[\"Push1\"] = \"PUSH1\";\n    OpCode[\"Push2\"] = \"PUSH2\";\n    OpCode[\"Push3\"] = \"PUSH3\";\n    OpCode[\"Push4\"] = \"PUSH4\";\n    OpCode[\"Push5\"] = \"PUSH5\";\n    OpCode[\"Push6\"] = \"PUSH6\";\n    OpCode[\"Push7\"] = \"PUSH7\";\n    OpCode[\"Push8\"] = \"PUSH8\";\n    OpCode[\"Push9\"] = \"PUSH9\";\n    OpCode[\"Push10\"] = \"PUSH10\";\n    OpCode[\"Push11\"] = \"PUSH11\";\n    OpCode[\"Push12\"] = \"PUSH12\";\n    OpCode[\"Push13\"] = \"PUSH13\";\n    OpCode[\"Push14\"] = \"PUSH14\";\n    OpCode[\"Push15\"] = \"PUSH15\";\n    OpCode[\"Push16\"] = \"PUSH16\";\n    OpCode[\"Push17\"] = \"PUSH17\";\n    OpCode[\"Push18\"] = \"PUSH18\";\n    OpCode[\"Push19\"] = \"PUSH19\";\n    OpCode[\"Push20\"] = \"PUSH20\";\n    OpCode[\"Push21\"] = \"PUSH21\";\n    OpCode[\"Push22\"] = \"PUSH22\";\n    OpCode[\"Push23\"] = \"PUSH23\";\n    OpCode[\"Push24\"] = \"PUSH24\";\n    OpCode[\"Push25\"] = \"PUSH25\";\n    OpCode[\"Push26\"] = \"PUSH26\";\n    OpCode[\"Push27\"] = \"PUSH27\";\n    OpCode[\"Push28\"] = \"PUSH28\";\n    OpCode[\"Push29\"] = \"PUSH29\";\n    OpCode[\"Push30\"] = \"PUSH30\";\n    OpCode[\"Push31\"] = \"PUSH31\";\n    OpCode[\"Push32\"] = \"PUSH32\";\n    OpCode[\"Dup1\"] = \"DUP1\";\n    OpCode[\"Dup2\"] = \"DUP2\";\n    OpCode[\"Dup3\"] = \"DUP3\";\n    OpCode[\"Dup4\"] = \"DUP4\";\n    OpCode[\"Dup5\"] = \"DUP5\";\n    OpCode[\"Dup6\"] = \"DUP6\";\n    OpCode[\"Dup7\"] = \"DUP7\";\n    OpCode[\"Dup8\"] = \"DUP8\";\n    OpCode[\"Dup9\"] = \"DUP9\";\n    OpCode[\"Dup10\"] = \"DUP10\";\n    OpCode[\"Dup11\"] = \"DUP11\";\n    OpCode[\"Dup12\"] = \"DUP12\";\n    OpCode[\"Dup13\"] = \"DUP13\";\n    OpCode[\"Dup14\"] = \"DUP14\";\n    OpCode[\"Dup15\"] = \"DUP15\";\n    OpCode[\"Dup16\"] = \"DUP16\";\n    OpCode[\"Swap1\"] = \"SWAP1\";\n    OpCode[\"Swap2\"] = \"SWAP2\";\n    OpCode[\"Swap3\"] = \"SWAP3\";\n    OpCode[\"Swap4\"] = \"SWAP4\";\n    OpCode[\"Swap5\"] = \"SWAP5\";\n    OpCode[\"Swap6\"] = \"SWAP6\";\n    OpCode[\"Swap7\"] = \"SWAP7\";\n    OpCode[\"Swap8\"] = \"SWAP8\";\n    OpCode[\"Swap9\"] = \"SWAP9\";\n    OpCode[\"Swap10\"] = \"SWAP10\";\n    OpCode[\"Swap11\"] = \"SWAP11\";\n    OpCode[\"Swap12\"] = \"SWAP12\";\n    OpCode[\"Swap13\"] = \"SWAP13\";\n    OpCode[\"Swap14\"] = \"SWAP14\";\n    OpCode[\"Swap15\"] = \"SWAP15\";\n    OpCode[\"Swap16\"] = \"SWAP16\";\n    OpCode[\"Log1\"] = \"LOG1\";\n    OpCode[\"Log2\"] = \"LOG2\";\n    OpCode[\"Log3\"] = \"LOG3\";\n    OpCode[\"Log4\"] = \"LOG4\";\n    OpCode[\"Create\"] = \"CREATE\";\n    OpCode[\"Call\"] = \"CALL\";\n    OpCode[\"CallCode\"] = \"CALLCODE\";\n    OpCode[\"Return\"] = \"RETURN\";\n    OpCode[\"DelegateCall\"] = \"DELEGATECALL\";\n    OpCode[\"StaticCall\"] = \"STATICCALL\";\n    OpCode[\"Revert\"] = \"REVERT\";\n    OpCode[\"Invalid\"] = \"INVALID\";\n    OpCode[\"SelfDestruct\"] = \"SELFDESTRUCT\";\n})(OpCode || (OpCode = {}));\nexport var AbiType;\n(function (AbiType) {\n    AbiType[\"Function\"] = \"function\";\n    AbiType[\"Constructor\"] = \"constructor\";\n    AbiType[\"Event\"] = \"event\";\n    AbiType[\"Fallback\"] = \"fallback\";\n})(AbiType || (AbiType = {}));\nexport var BlockParamLiteral;\n(function (BlockParamLiteral) {\n    BlockParamLiteral[\"Earliest\"] = \"earliest\";\n    BlockParamLiteral[\"Latest\"] = \"latest\";\n    BlockParamLiteral[\"Pending\"] = \"pending\";\n})(BlockParamLiteral || (BlockParamLiteral = {}));\nexport var SolidityTypes;\n(function (SolidityTypes) {\n    SolidityTypes[\"Address\"] = \"address\";\n    SolidityTypes[\"Bool\"] = \"bool\";\n    SolidityTypes[\"Bytes\"] = \"bytes\";\n    SolidityTypes[\"Int\"] = \"int\";\n    SolidityTypes[\"String\"] = \"string\";\n    SolidityTypes[\"Tuple\"] = \"tuple\";\n    SolidityTypes[\"Uint256\"] = \"uint256\";\n    SolidityTypes[\"Uint8\"] = \"uint8\";\n    SolidityTypes[\"Uint\"] = \"uint\";\n})(SolidityTypes || (SolidityTypes = {}));\n","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { constants } from '../utils/constants';\nimport { Queue } from '../utils/queue';\nexport class RawCalldata {\n    constructor(value, hasSelector = true) {\n        if (typeof value === 'string' && !_.startsWith(value, '0x')) {\n            throw new Error(`Expected raw calldata to start with '0x'`);\n        }\n        this._value = ethUtil.toBuffer(value);\n        this._selector = '0x';\n        this._scopes = new Queue();\n        this._scopes.pushBack(RawCalldata._INITIAL_OFFSET);\n        this._offset = RawCalldata._INITIAL_OFFSET;\n        if (hasSelector) {\n            const selectorBuf = this._value.slice(constants.HEX_SELECTOR_LENGTH_IN_BYTES);\n            this._value = this._value.slice(constants.HEX_SELECTOR_LENGTH_IN_BYTES);\n            this._selector = ethUtil.bufferToHex(selectorBuf);\n        }\n    }\n    popBytes(lengthInBytes) {\n        const popBegin = this._offset;\n        const popEnd = popBegin + lengthInBytes;\n        if (popEnd > this._value.byteLength) {\n            throw new Error(`Tried to decode beyond the end of calldata`);\n        }\n        const value = this._value.slice(popBegin, popEnd);\n        this.setOffset(popEnd);\n        return value;\n    }\n    popWord() {\n        const wordInBytes = 32;\n        return this.popBytes(wordInBytes);\n    }\n    popWords(length) {\n        const wordInBytes = 32;\n        return this.popBytes(length * wordInBytes);\n    }\n    readBytes(from, to) {\n        const value = this._value.slice(from, to);\n        return value;\n    }\n    setOffset(offsetInBytes) {\n        this._offset = offsetInBytes;\n    }\n    startScope() {\n        this._scopes.pushFront(this._offset);\n    }\n    endScope() {\n        this._scopes.popFront();\n    }\n    getOffset() {\n        return this._offset;\n    }\n    toAbsoluteOffset(relativeOffset) {\n        const scopeOffset = this._scopes.peekFront();\n        if (scopeOffset === undefined) {\n            throw new Error(`Tried to access undefined scope.`);\n        }\n        const absoluteOffset = relativeOffset + scopeOffset;\n        return absoluteOffset;\n    }\n    getSelector() {\n        return this._selector;\n    }\n    getSizeInBytes() {\n        const sizeInBytes = this._value.byteLength;\n        return sizeInBytes;\n    }\n}\nRawCalldata._INITIAL_OFFSET = 0;\n","import * as _ from 'lodash';\nimport { Calldata } from '../calldata/calldata';\nimport { RawCalldata } from '../calldata/raw_calldata';\nimport { constants } from '../utils/constants';\nexport class DataType {\n    constructor(dataItem, factory) {\n        this._dataItem = dataItem;\n        this._factory = factory;\n    }\n    getDataItem() {\n        return this._dataItem;\n    }\n    getFactory() {\n        return this._factory;\n    }\n    encode(value, rules, selector) {\n        const rules_ = { ...constants.DEFAULT_ENCODING_RULES, ...rules };\n        const calldata = new Calldata(rules_);\n        if (selector !== undefined) {\n            calldata.setSelector(selector);\n        }\n        const block = this.generateCalldataBlock(value);\n        calldata.setRoot(block);\n        const encodedCalldata = calldata.toString();\n        return encodedCalldata;\n    }\n    decode(calldata, rules, selector) {\n        if (selector !== undefined && !_.startsWith(calldata, selector)) {\n            throw new Error(`Tried to decode calldata, but it was missing the function selector. Expected prefix '${selector}'. Got '${calldata}'.`);\n        }\n        const hasSelector = selector !== undefined;\n        const rawCalldata = new RawCalldata(calldata, hasSelector);\n        const rules_ = { ...constants.DEFAULT_DECODING_RULES, ...rules };\n        const value = rules_.isStrictMode || rawCalldata.getSizeInBytes() > 0\n            ? this.generateValue(rawCalldata, rules_)\n            : this.getDefaultValue(rules_);\n        return value;\n    }\n    decodeAsArray(returndata, rules) {\n        const value = this.decode(returndata, rules);\n        const valuesAsArray = _.isObject(value) ? _.values(value) : [value];\n        return valuesAsArray;\n    }\n    getSignature(isDetailed) {\n        if (_.isEmpty(this._dataItem.name) || !isDetailed) {\n            return this.getSignatureType();\n        }\n        const name = this.getDataItem().name;\n        const lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n        const isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n        const shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n        const detailedSignature = `${shortName} ${this.getSignatureType()}`;\n        return detailedSignature;\n    }\n}\n","import * as _ from 'lodash';\nimport { CalldataBlock } from '../calldata_block';\nexport class SetCalldataBlock extends CalldataBlock {\n    constructor(name, signature, parentName) {\n        super(name, signature, parentName, 0, 0);\n        this._members = [];\n        this._header = undefined;\n    }\n    getRawData() {\n        const rawDataComponents = [];\n        if (this._header !== undefined) {\n            rawDataComponents.push(this._header);\n        }\n        _.each(this._members, (member) => {\n            const memberBuffer = member.getRawData();\n            rawDataComponents.push(memberBuffer);\n        });\n        const rawData = Buffer.concat(rawDataComponents);\n        return rawData;\n    }\n    setMembers(members) {\n        this._members = members;\n    }\n    setHeader(header) {\n        this._setHeaderSize(header.byteLength);\n        this._header = header;\n    }\n    toBuffer() {\n        if (this._header !== undefined) {\n            return this._header;\n        }\n        return Buffer.from('');\n    }\n    getMembers() {\n        return this._members;\n    }\n}\n","import * as ethUtil from 'ethereumjs-util';\nexport class CalldataBlock {\n    constructor(name, signature, parentName, headerSizeInBytes, bodySizeInBytes) {\n        this._name = name;\n        this._signature = signature;\n        this._parentName = parentName;\n        this._offsetInBytes = 0;\n        this._headerSizeInBytes = headerSizeInBytes;\n        this._bodySizeInBytes = bodySizeInBytes;\n    }\n    _setHeaderSize(headerSizeInBytes) {\n        this._headerSizeInBytes = headerSizeInBytes;\n    }\n    _setBodySize(bodySizeInBytes) {\n        this._bodySizeInBytes = bodySizeInBytes;\n    }\n    _setName(name) {\n        this._name = name;\n    }\n    getName() {\n        return this._name;\n    }\n    getParentName() {\n        return this._parentName;\n    }\n    getSignature() {\n        return this._signature;\n    }\n    getHeaderSizeInBytes() {\n        return this._headerSizeInBytes;\n    }\n    getBodySizeInBytes() {\n        return this._bodySizeInBytes;\n    }\n    getSizeInBytes() {\n        return this.getHeaderSizeInBytes() + this.getBodySizeInBytes();\n    }\n    getOffsetInBytes() {\n        return this._offsetInBytes;\n    }\n    setOffset(offsetInBytes) {\n        this._offsetInBytes = offsetInBytes;\n    }\n    computeHash() {\n        const rawData = this.getRawData();\n        const hash = ethUtil.keccak256(rawData);\n        return hash;\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport class InsufficientEthAttachedError extends RevertError {\n    constructor(ethAttached, ethNeeded) {\n        super('InsufficientEthAttachedError', 'InsufficientEthAttachedError(uint256 ethAttached, uint256 ethNeeded)', {\n            ethAttached,\n            ethNeeded,\n        });\n    }\n}\nexport class IncompleteTransformERC20Error extends RevertError {\n    constructor(outputToken, outputTokenAmount, minOutputTokenAmount) {\n        super('IncompleteTransformERC20Error', 'IncompleteTransformERC20Error(address outputToken, uint256 outputTokenAmount, uint256 minOutputTokenAmount)', {\n            outputToken,\n            outputTokenAmount,\n            minOutputTokenAmount,\n        });\n    }\n}\nexport class NegativeTransformERC20OutputError extends RevertError {\n    constructor(outputToken, outputTokenLostAmount) {\n        super('NegativeTransformERC20OutputError', 'NegativeTransformERC20OutputError(address outputToken, uint256 outputTokenLostAmount)', {\n            outputToken,\n            outputTokenLostAmount,\n        });\n    }\n}\nexport class TransformerFailedError extends RevertError {\n    constructor(transformer, transformerData, resultData) {\n        super('TransformerFailedError', 'TransformerFailedError(address transformer, bytes transformerData, bytes resultData)', {\n            transformer,\n            transformerData,\n            resultData,\n        });\n    }\n}\nexport class OnlyCallableByDeployerError extends RevertError {\n    constructor(caller, deployer) {\n        super('OnlyCallableByDeployerError', 'OnlyCallableByDeployerError(address caller, address deployer)', {\n            caller,\n            deployer,\n        });\n    }\n}\nexport class InvalidExecutionContextError extends RevertError {\n    constructor(actualContext, expectedContext) {\n        super('InvalidExecutionContextError', 'InvalidExecutionContextError(address actualContext, address expectedContext)', {\n            actualContext,\n            expectedContext,\n        });\n    }\n}\nexport var InvalidTransformDataErrorCode;\n(function (InvalidTransformDataErrorCode) {\n    InvalidTransformDataErrorCode[InvalidTransformDataErrorCode[\"InvalidTokens\"] = 0] = \"InvalidTokens\";\n    InvalidTransformDataErrorCode[InvalidTransformDataErrorCode[\"InvalidArrayLength\"] = 1] = \"InvalidArrayLength\";\n})(InvalidTransformDataErrorCode || (InvalidTransformDataErrorCode = {}));\nexport class InvalidTransformDataError extends RevertError {\n    constructor(errorCode, transformData) {\n        super('InvalidTransformDataError', 'InvalidTransformDataError(uint8 errorCode, bytes transformData)', {\n            errorCode,\n            transformData,\n        });\n    }\n}\nexport class IncompleteFillSellQuoteError extends RevertError {\n    constructor(sellToken, soldAmount, sellAmount) {\n        super('IncompleteFillSellQuoteError', 'IncompleteFillSellQuoteError(address sellToken, uint256 soldAmount, uint256 sellAmount)', {\n            sellToken,\n            soldAmount,\n            sellAmount,\n        });\n    }\n}\nexport class IncompleteFillBuyQuoteError extends RevertError {\n    constructor(buyToken, boughtAmount, buyAmount) {\n        super('IncompleteFillBuyQuoteError', 'IncompleteFillBuyQuoteError(address buyToken, uint256 boughtAmount, uint256 buyAmount)', {\n            buyToken,\n            boughtAmount,\n            buyAmount,\n        });\n    }\n}\nexport class InsufficientTakerTokenError extends RevertError {\n    constructor(tokenBalance, tokensNeeded) {\n        super('InsufficientTakerTokenError', 'InsufficientTakerTokenError(uint256 tokenBalance, uint256 tokensNeeded)', {\n            tokenBalance,\n            tokensNeeded,\n        });\n    }\n}\nexport class InsufficientProtocolFeeError extends RevertError {\n    constructor(ethBalance, ethNeeded) {\n        super('InsufficientProtocolFeeError', 'InsufficientProtocolFeeError(uint256 ethBalance, uint256 ethNeeded)', {\n            ethBalance,\n            ethNeeded,\n        });\n    }\n}\nexport class InvalidERC20AssetDataError extends RevertError {\n    constructor(assetData) {\n        super('InvalidERC20AssetDataError', 'InvalidERC20AssetDataError(bytes assetData)', {\n            assetData,\n        });\n    }\n}\nexport class WrongNumberOfTokensReceivedError extends RevertError {\n    constructor(actual, expected) {\n        super('WrongNumberOfTokensReceivedError', 'WrongNumberOfTokensReceivedError(uint256 actual, uint256 expected)', {\n            actual,\n            expected,\n        });\n    }\n}\nexport class InvalidTokenReceivedError extends RevertError {\n    constructor(token) {\n        super('InvalidTokenReceivedError', 'InvalidTokenReceivedError(address token)', {\n            token,\n        });\n    }\n}\nexport class InvalidTakerFeeTokenError extends RevertError {\n    constructor(token) {\n        super('InvalidTakerFeeTokenError', 'InvalidTakerFeeTokenError(address token)', {\n            token,\n        });\n    }\n}\nconst types = [\n    InsufficientEthAttachedError,\n    IncompleteTransformERC20Error,\n    NegativeTransformERC20OutputError,\n    TransformerFailedError,\n    IncompleteFillSellQuoteError,\n    IncompleteFillBuyQuoteError,\n    InsufficientTakerTokenError,\n    InsufficientProtocolFeeError,\n    InvalidERC20AssetDataError,\n    WrongNumberOfTokensReceivedError,\n    InvalidTokenReceivedError,\n    InvalidTransformDataError,\n    InvalidTakerFeeTokenError,\n    OnlyCallableByDeployerError,\n    InvalidExecutionContextError,\n];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { B } from '../../../configured_bignumber';\nimport { SetCalldataBlock } from '../../calldata/blocks/set';\nimport { constants } from '../../utils/constants';\nimport { DataType } from '../data_type';\nimport { AbstractPointerDataType } from './pointer';\nexport class AbstractSetDataType extends DataType {\n    constructor(dataItem, factory, isArray = false, arrayLength, arrayElementType) {\n        super(dataItem, factory);\n        this._memberIndexByName = {};\n        this._members = [];\n        this._isArray = isArray;\n        this._arrayLength = arrayLength;\n        this._arrayElementType = arrayElementType;\n        if (isArray && arrayLength !== undefined) {\n            [this._members, this._memberIndexByName] = this._createMembersWithLength(dataItem, arrayLength);\n        }\n        else if (!isArray) {\n            [this._members, this._memberIndexByName] = this._createMembersWithKeys(dataItem);\n        }\n    }\n    generateCalldataBlock(value, parentBlock) {\n        const block = Array.isArray(value)\n            ? this._generateCalldataBlockFromArray(value, parentBlock)\n            : this._generateCalldataBlockFromObject(value, parentBlock);\n        return block;\n    }\n    generateValue(calldata, rules) {\n        let members = this._members;\n        if (this._isArray && this._arrayLength === undefined) {\n            const arrayLengthBuf = calldata.popWord();\n            const arrayLengthHex = ethUtil.bufferToHex(arrayLengthBuf);\n            const arrayLength = new B.BigNumber(arrayLengthHex, constants.HEX_BASE);\n            [members] = this._createMembersWithLength(this.getDataItem(), arrayLength.toNumber());\n        }\n        calldata.startScope();\n        let value;\n        if (rules.shouldConvertStructsToObjects && !this._isArray) {\n            value = {};\n            _.each(this._memberIndexByName, (idx, key) => {\n                const member = this._members[idx];\n                const memberValue = member.generateValue(calldata, rules);\n                value[key] = memberValue;\n            });\n        }\n        else {\n            value = [];\n            _.each(members, (member, idx) => {\n                const memberValue = member.generateValue(calldata, rules);\n                value.push(memberValue);\n            });\n        }\n        calldata.endScope();\n        return value;\n    }\n    isStatic() {\n        if (this._isArray && this._arrayLength === undefined) {\n            return false;\n        }\n        const dependentMember = _.find(this._members, (member) => {\n            return member instanceof AbstractPointerDataType;\n        });\n        const isStatic = dependentMember === undefined;\n        return isStatic;\n    }\n    getDefaultValue(rules) {\n        let defaultValue;\n        if (this._isArray && this._arrayLength === undefined) {\n            defaultValue = [];\n        }\n        else if (rules !== undefined && rules.shouldConvertStructsToObjects && !this._isArray) {\n            defaultValue = {};\n            _.each(this._memberIndexByName, (idx, key) => {\n                const member = this._members[idx];\n                const memberValue = member.getDefaultValue();\n                defaultValue[key] = memberValue;\n            });\n        }\n        else {\n            defaultValue = [];\n            _.each(this._members, (member, idx) => {\n                const memberValue = member.getDefaultValue();\n                defaultValue.push(memberValue);\n            });\n        }\n        return defaultValue;\n    }\n    _generateCalldataBlockFromArray(value, parentBlock) {\n        if (this._arrayLength !== undefined && value.length !== this._arrayLength) {\n            throw new Error(`Expected array of ${JSON.stringify(this._arrayLength)} elements, but got array of length ${JSON.stringify(value.length)}`);\n        }\n        const parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        const block = new SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        let members = this._members;\n        if (this._isArray && this._arrayLength === undefined) {\n            [members] = this._createMembersWithLength(this.getDataItem(), value.length);\n            const lenBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(`0x${value.length.toString(constants.HEX_BASE)}`), constants.EVM_WORD_WIDTH_IN_BYTES);\n            block.setHeader(lenBuf);\n        }\n        const memberCalldataBlocks = [];\n        _.each(members, (member, idx) => {\n            const memberBlock = member.generateCalldataBlock(value[idx], block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    }\n    _generateCalldataBlockFromObject(obj, parentBlock) {\n        const parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        const block = new SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        const memberCalldataBlocks = [];\n        _.forEach(this._memberIndexByName, (memberIndex, memberName) => {\n            if (!(memberName in obj)) {\n                throw new Error(`Could not assign tuple to object: missing key '${memberName}' in object ${JSON.stringify(obj)}`);\n            }\n            const memberValue = obj[memberName];\n            const memberBlock = this._members[memberIndex].generateCalldataBlock(memberValue, block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    }\n    _computeSignatureOfMembers(isDetailed) {\n        let signature = `(`;\n        _.each(this._members, (member, i) => {\n            signature += member.getSignature(isDetailed);\n            if (i < this._members.length - 1) {\n                signature += ',';\n            }\n        });\n        signature += ')';\n        return signature;\n    }\n    _createMembersWithKeys(dataItem) {\n        if (dataItem.components === undefined) {\n            throw new Error(`Tried to create a set using key/value pairs, but no components were defined by the input DataItem '${dataItem.name}'.`);\n        }\n        const members = [];\n        const memberIndexByName = {};\n        const memberNames = [];\n        _.each(dataItem.components, (memberItem) => {\n            let memberName = memberItem.name;\n            let nameIdx = 0;\n            while (_.includes(memberNames, memberName) || _.isEmpty(memberName)) {\n                nameIdx++;\n                memberName = `${memberItem.name}_${nameIdx}`;\n            }\n            memberNames.push(memberName);\n            const childDataItem = {\n                type: memberItem.type,\n                name: `${dataItem.name}.${memberName}`,\n            };\n            const components = memberItem.components;\n            if (components !== undefined) {\n                childDataItem.components = components;\n            }\n            const child = this.getFactory().create(childDataItem, this);\n            memberIndexByName[memberName] = members.length;\n            members.push(child);\n        });\n        return [members, memberIndexByName];\n    }\n    _createMembersWithLength(dataItem, length) {\n        const members = [];\n        const memberIndexByName = {};\n        const range = _.range(length);\n        _.each(range, (idx) => {\n            const memberDataItem = {\n                type: this._arrayElementType === undefined ? '' : this._arrayElementType,\n                name: `${dataItem.name}[${idx.toString(constants.DEC_BASE)}]`,\n            };\n            const components = dataItem.components;\n            if (components !== undefined) {\n                memberDataItem.components = components;\n            }\n            const memberType = this.getFactory().create(memberDataItem, this);\n            memberIndexByName[idx.toString(constants.DEC_BASE)] = members.length;\n            members.push(memberType);\n        });\n        return [members, memberIndexByName];\n    }\n}\n","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { constants } from '../utils/constants';\nimport { stripHexPrefix } from '../../../utils/hex_utils';\nimport { PointerCalldataBlock } from './blocks/pointer';\nimport { SetCalldataBlock } from './blocks/set';\nimport { CalldataIterator, ReverseCalldataIterator } from './iterator';\nexport class Calldata {\n    constructor(rules) {\n        this._rules = rules;\n        this._selector = '';\n        this._root = undefined;\n    }\n    setRoot(block) {\n        this._root = block;\n    }\n    setSelector(selector) {\n        if (!_.startsWith(selector, '0x')) {\n            throw new Error(`Expected selector to be hex. Missing prefix '0x'`);\n        }\n        else if (selector.length !== constants.HEX_SELECTOR_LENGTH_IN_CHARS) {\n            throw new Error(`Invalid selector '${selector}'`);\n        }\n        this._selector = selector;\n    }\n    toString() {\n        if (this._root === undefined) {\n            throw new Error('expected root');\n        }\n        if (this._rules.shouldOptimize) {\n            this._optimize();\n        }\n        const iterator = new CalldataIterator(this._root);\n        let offset = 0;\n        for (const block of iterator) {\n            block.setOffset(offset);\n            offset += block.getSizeInBytes();\n        }\n        const hexString = this._rules.shouldAnnotate\n            ? this._toHumanReadableCallData()\n            : this._toEvmCompatibeCallDataHex();\n        return hexString;\n    }\n    _optimize() {\n        if (this._root === undefined) {\n            throw new Error('expected root');\n        }\n        const iterator = new ReverseCalldataIterator(this._root);\n        const blocksByHash = {};\n        for (const block of iterator) {\n            if (block instanceof PointerCalldataBlock) {\n                const dependencyBlockHashBuf = block.getDependency().computeHash();\n                const dependencyBlockHash = ethUtil.bufferToHex(dependencyBlockHashBuf);\n                if (dependencyBlockHash in blocksByHash) {\n                    const blockWithSameHash = blocksByHash[dependencyBlockHash];\n                    if (blockWithSameHash !== block.getDependency()) {\n                        block.setAlias(blockWithSameHash);\n                    }\n                }\n                continue;\n            }\n            const blockHashBuf = block.computeHash();\n            const blockHash = ethUtil.bufferToHex(blockHashBuf);\n            if (!(blockHash in blocksByHash)) {\n                blocksByHash[blockHash] = block;\n            }\n        }\n    }\n    _toEvmCompatibeCallDataHex() {\n        if (this._root === undefined) {\n            throw new Error('expected root');\n        }\n        const selectorBuffer = ethUtil.toBuffer(this._selector || '0x');\n        const valueBufs = [selectorBuffer];\n        const iterator = new CalldataIterator(this._root);\n        for (const block of iterator) {\n            valueBufs.push(block.toBuffer());\n        }\n        const combinedBuffers = Buffer.concat(valueBufs);\n        const hexValue = ethUtil.bufferToHex(combinedBuffers);\n        return hexValue;\n    }\n    _toHumanReadableCallData() {\n        if (this._root === undefined) {\n            throw new Error('expected root');\n        }\n        const offsetPadding = 10;\n        const valuePadding = 74;\n        const namePadding = 80;\n        const evmWordStartIndex = 0;\n        const emptySize = 0;\n        let hexValue = `${this._selector}`;\n        let offset = 0;\n        const functionName = this._root.getName();\n        const iterator = new CalldataIterator(this._root);\n        for (const block of iterator) {\n            const size = block.getSizeInBytes();\n            const name = block.getName();\n            const parentName = block.getParentName();\n            const prettyName = name.replace(`${parentName}.`, '').replace(`${functionName}.`, '');\n            let offsetStr = '';\n            let valueStr = '';\n            let nameStr = '';\n            let lineStr = '';\n            if (size === emptySize) {\n                offsetStr = ' '.repeat(offsetPadding);\n                valueStr = ' '.repeat(valuePadding);\n                nameStr = `### ${prettyName.padEnd(namePadding)}`;\n                lineStr = `\\n${offsetStr}${valueStr}${nameStr}`;\n            }\n            else {\n                offsetStr = `0x${offset.toString(constants.HEX_BASE)}`.padEnd(offsetPadding);\n                valueStr = stripHexPrefix(ethUtil.bufferToHex(block.toBuffer().slice(evmWordStartIndex, constants.EVM_WORD_WIDTH_IN_BYTES)))\n                    .padEnd(valuePadding);\n                if (block instanceof SetCalldataBlock) {\n                    nameStr = `### ${prettyName.padEnd(namePadding)}`;\n                    lineStr = `\\n${offsetStr}${valueStr}${nameStr}`;\n                }\n                else {\n                    nameStr = `    ${prettyName.padEnd(namePadding)}`;\n                    lineStr = `${offsetStr}${valueStr}${nameStr}`;\n                }\n            }\n            for (let j = constants.EVM_WORD_WIDTH_IN_BYTES; j < size; j += constants.EVM_WORD_WIDTH_IN_BYTES) {\n                offsetStr = `0x${(offset + j).toString(constants.HEX_BASE)}`.padEnd(offsetPadding);\n                valueStr = stripHexPrefix(ethUtil.bufferToHex(block.toBuffer().slice(j, j + constants.EVM_WORD_WIDTH_IN_BYTES)))\n                    .padEnd(valuePadding);\n                nameStr = ' '.repeat(namePadding);\n                lineStr = `${lineStr}\\n${offsetStr}${valueStr}${nameStr}`;\n            }\n            hexValue = `${hexValue}\\n${lineStr}`;\n            offset += size;\n        }\n        return hexValue;\n    }\n}\n","import { SolidityTypes } from '../../../types';\nimport * as _ from 'lodash';\nimport { AbstractSetDataType } from '../abstract_data_types/types/set';\nexport class TupleDataType extends AbstractSetDataType {\n    static matchType(type) {\n        return type === SolidityTypes.Tuple;\n    }\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory);\n        if (!TupleDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate Tuple with bad input: ${dataItem}`);\n        }\n    }\n    getSignatureType() {\n        return this._computeSignatureOfMembers(false);\n    }\n    getSignature(isDetailed) {\n        if (_.isEmpty(this.getDataItem().name) || !isDetailed) {\n            return this.getSignatureType();\n        }\n        const name = this.getDataItem().name;\n        const lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n        const isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n        const shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n        const detailedSignature = `${shortName} ${this._computeSignatureOfMembers(isDetailed)}`;\n        return detailedSignature;\n    }\n}\n","import { RevertError } from '../../revert_error';\nexport class NotInRollbackHistoryError extends RevertError {\n    constructor(selector, targetImpl) {\n        super('NotInRollbackHistoryError', 'NotInRollbackHistoryError(bytes4 selector, address targetImpl)', {\n            selector,\n            targetImpl,\n        });\n    }\n}\nconst types = [NotInRollbackHistoryError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import { RevertError } from '../../revert_error';\nexport class OnlyCallableBySelfError extends RevertError {\n    constructor(sender) {\n        super('OnlyCallableBySelfError', 'OnlyCallableBySelfError(address sender)', {\n            sender,\n        });\n    }\n}\nexport class IllegalReentrancyError extends RevertError {\n    constructor(selector, reentrancyFlags) {\n        super('IllegalReentrancyError', 'IllegalReentrancyError(bytes4 selector, uint256 reentrancyFlags)', {\n            selector,\n            reentrancyFlags,\n        });\n    }\n}\nconst types = [OnlyCallableBySelfError, IllegalReentrancyError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import { RevertError } from '../../revert_error';\nexport class WalletExecuteCallFailedError extends RevertError {\n    constructor(wallet, callTarget, callData, callValue, errorData) {\n        super('WalletExecuteCallFailedError', 'WalletExecuteCallFailedError(address wallet, address callTarget, bytes callData, uint256 callValue, bytes errorData)', {\n            wallet,\n            callTarget,\n            callData,\n            callValue,\n            errorData,\n        });\n    }\n}\nexport class WalletExecuteDelegateCallFailedError extends RevertError {\n    constructor(wallet, callTarget, callData, errorData) {\n        super('WalletExecuteDelegateCallFailedError', 'WalletExecuteDelegateCallFailedError(address wallet, address callTarget, bytes callData, bytes errorData)', {\n            wallet,\n            callTarget,\n            callData,\n            errorData,\n        });\n    }\n}\nconst types = [WalletExecuteCallFailedError, WalletExecuteDelegateCallFailedError];\nfor (const type of types) {\n    RevertError.registerType(type);\n}\n","import { BigNumber } from \"bignumber.js\";\nimport BN from 'bn.js';\nexport default class CoinDetail {\n    constructor(address, dec, sym, name) {\n        this.address = address;\n        if (dec instanceof BigNumber) {\n            this.decimal = dec.toNumber();\n        }\n        else {\n            this.decimal = dec;\n        }\n        this.tokenName = name;\n        this.tokenSymbol = sym;\n        this.unlimited = {};\n        this.holder = {};\n        this.spender = {};\n    }\n    setHolder(address, bal) {\n        let abal = 0;\n        if (bal instanceof BigNumber) {\n            abal = bal.toNumber();\n        }\n        else {\n            abal = bal;\n        }\n        if (this.holder.hasOwnProperty(address)) {\n            this.holder[address] = abal;\n        }\n        else {\n            this.holder[address] = abal;\n        }\n    }\n    async runAllowanceAmount(contract, owner_address, spender) {\n        let g = await contract.allowance(owner_address, spender);\n        let allowance = 0;\n        if (g instanceof BigNumber) {\n            allowance = g.toNumber();\n        }\n        else if (g instanceof BN) {\n            allowance = g.toNumber();\n        }\n        else {\n            allowance = g;\n        }\n        if (allowance >= 1000000000000000000000000000000000000) {\n            this.setSpenderExtreme(owner_address, spender, true);\n        }\n        else {\n            this.setSpenderNormal(owner_address, spender, allowance);\n        }\n    }\n    setSpenderExtreme(coin_owner, spender, isAll) {\n        return this._setDeep(this.unlimited, [coin_owner, spender], isAll);\n    }\n    setSpenderNormal(coin_owner, spender, allowance) {\n        return this._setDeep(this.spender, [coin_owner, spender], allowance);\n    }\n    name() {\n        return this.tokenName;\n    }\n    symbol() {\n        return this.tokenSymbol;\n    }\n    amountCode(address) {\n        return this.holder[address];\n    }\n    balance(address) {\n        return this.amountCode(address);\n    }\n    byFloat(address) {\n        return this.holder[address] / this.decimal;\n    }\n    showAllowance(coin_owner, spender) {\n        if (this.spender.hasOwnProperty(coin_owner)) {\n            if (this.spender[coin_owner].hasOwnProperty(spender)) {\n                return this.spender[coin_owner][spender];\n            }\n        }\n        return 0;\n    }\n    showAllowed(coin_owner, spender) {\n        if (this.unlimited.hasOwnProperty(coin_owner)) {\n            if (this.unlimited[coin_owner].hasOwnProperty(spender)) {\n                return this.unlimited[coin_owner][spender];\n            }\n        }\n        return false;\n    }\n    approvalStatus(coin_owner, spender) {\n        const approvedAmount = this.showAllowance(coin_owner, spender);\n        const isUnlimited = this.showAllowed(coin_owner, spender);\n        return { approvedAmount, isUnlimited };\n    }\n    _setDeep(obj, path, value, setrecursively = false) {\n        let properties = Array.isArray(path) ? path : path.split(\".\");\n        if (properties.length > 1) {\n            if (!obj.hasOwnProperty(properties[0]) || typeof obj[properties[0]] !== \"object\")\n                obj[properties[0]] = {};\n            return this._setDeep(obj[properties[0]], properties.slice(1), value);\n        }\n        else {\n            obj[properties[0]] = value;\n            return true;\n        }\n    }\n}\n","import { SolidityTypes } from '../../../types';\nimport * as ethUtil from 'ethereumjs-util';\nimport { AbstractBlobDataType } from '../abstract_data_types/types/blob';\nimport { constants } from '../utils/constants';\nexport class StringDataType extends AbstractBlobDataType {\n    constructor(dataItem, dataTypeFactory) {\n        super(dataItem, dataTypeFactory, StringDataType._SIZE_KNOWN_AT_COMPILE_TIME);\n        if (!StringDataType.matchType(dataItem.type)) {\n            throw new Error(`Tried to instantiate String with bad input: ${dataItem}`);\n        }\n    }\n    static matchType(type) {\n        return type === SolidityTypes.String;\n    }\n    encodeValue(value) {\n        const valueBuf = Buffer.from(value);\n        const valueLengthInBytes = valueBuf.byteLength;\n        const wordsToStoreValuePadded = Math.ceil(valueLengthInBytes / constants.EVM_WORD_WIDTH_IN_BYTES);\n        const bytesToStoreValuePadded = wordsToStoreValuePadded * constants.EVM_WORD_WIDTH_IN_BYTES;\n        const valueBufPadded = ethUtil.setLengthRight(valueBuf, bytesToStoreValuePadded);\n        const lengthBuf = ethUtil.toBuffer(valueLengthInBytes);\n        const lengthBufPadded = ethUtil.setLengthLeft(lengthBuf, constants.EVM_WORD_WIDTH_IN_BYTES);\n        const encodedValue = Buffer.concat([lengthBufPadded, valueBufPadded]);\n        return encodedValue;\n    }\n    decodeValue(calldata) {\n        const lengthBufPadded = calldata.popWord();\n        const lengthHexPadded = ethUtil.bufferToHex(lengthBufPadded);\n        const length = parseInt(lengthHexPadded, constants.HEX_BASE);\n        const wordsToStoreValuePadded = Math.ceil(length / constants.EVM_WORD_WIDTH_IN_BYTES);\n        const valueBufPadded = calldata.popWords(wordsToStoreValuePadded);\n        const valueBuf = valueBufPadded.slice(0, length);\n        const value = valueBuf.toString('UTF-8');\n        return value;\n    }\n    getDefaultValue() {\n        return StringDataType._DEFAULT_VALUE;\n    }\n    getSignatureType() {\n        return SolidityTypes.String;\n    }\n}\nStringDataType._SIZE_KNOWN_AT_COMPILE_TIME = false;\nStringDataType._DEFAULT_VALUE = '';\n","export * from \"-!../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js!../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./DemoDetectionSwitchImtoken.vue?vue&type=style&index=0&lang=css&\"","import * as ethUtil from 'ethereumjs-util';\nimport * as _ from 'lodash';\nimport { inspect } from 'util';\nimport * as AbiEncoder from './abi_encoder';\nimport { B } from './configured_bignumber';\nexport function registerRevertErrorType(revertClass, force = false) {\n    RevertError.registerType(revertClass, force);\n}\nexport function decodeBytesAsRevertError(bytes, coerce = false) {\n    return RevertError.decode(bytes, coerce);\n}\nexport function decodeThrownErrorAsRevertError(error, coerce = false) {\n    if (error instanceof RevertError) {\n        return error;\n    }\n    return RevertError.decode(getThrownErrorRevertErrorBytes(error), coerce);\n}\nexport function coerceThrownErrorAsRevertError(error) {\n    if (error instanceof RevertError) {\n        return error;\n    }\n    try {\n        return decodeThrownErrorAsRevertError(error, true);\n    }\n    catch (err) {\n        if (isGanacheTransactionRevertError(error)) {\n            throw err;\n        }\n        if (isGethTransactionRevertError(error)) {\n            return new AnyRevertError();\n        }\n        return new StringRevertError(error.message);\n    }\n}\nexport class RevertError extends Error {\n    constructor(name, declaration, values, raw) {\n        super(createErrorMessage(name, values));\n        this.values = {};\n        if (declaration !== undefined) {\n            this.abi = declarationToAbi(declaration);\n            if (values !== undefined) {\n                _.assign(this.values, _.cloneDeep(values));\n            }\n        }\n        this._raw = raw;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n    static decode(bytes, coerce = false) {\n        if (bytes instanceof RevertError) {\n            return bytes;\n        }\n        const _bytes = bytes instanceof Buffer ? ethUtil.bufferToHex(bytes) : ethUtil.addHexPrefix(bytes);\n        const selector = _bytes.slice(2, 10);\n        if (!(selector in RevertError._typeRegistry)) {\n            if (coerce) {\n                return new RawRevertError(bytes);\n            }\n            throw new Error(`Unknown selector: ${selector}`);\n        }\n        const { type, decoder } = RevertError._typeRegistry[selector];\n        const instance = new type();\n        try {\n            Object.assign(instance, { values: decoder(_bytes) });\n            instance.message = instance.toString();\n            return instance;\n        }\n        catch (err) {\n            throw new Error(`Bytes ${_bytes} cannot be decoded as a revert error of type ${instance.signature}: ${err.message}`);\n        }\n    }\n    static registerType(revertClass, force = false) {\n        const instance = new revertClass();\n        if (!force && instance.selector in RevertError._typeRegistry) {\n            throw new Error(`RevertError type with signature \"${instance.signature}\" is already registered`);\n        }\n        if (_.isNil(instance.abi)) {\n            throw new Error(`Attempting to register a RevertError class with no ABI`);\n        }\n        RevertError._typeRegistry[instance.selector] = {\n            type: revertClass,\n            decoder: createDecoder(instance.abi),\n        };\n    }\n    get name() {\n        if (!_.isNil(this.abi)) {\n            return this.abi.name;\n        }\n        return `<${this.typeName}>`;\n    }\n    get typeName() {\n        return this.constructor.name;\n    }\n    get selector() {\n        if (!_.isNil(this.abi)) {\n            return toSelector(this.abi);\n        }\n        if (this._isRawType) {\n            return this._raw.slice(2, 10);\n        }\n        return '';\n    }\n    get signature() {\n        if (!_.isNil(this.abi)) {\n            return toSignature(this.abi);\n        }\n        return '';\n    }\n    get arguments() {\n        if (!_.isNil(this.abi)) {\n            return this.abi.arguments || [];\n        }\n        return [];\n    }\n    get [Symbol.toStringTag]() {\n        return this.toString();\n    }\n    equals(other) {\n        let _other = other;\n        if (_other instanceof Buffer) {\n            _other = ethUtil.bufferToHex(_other);\n        }\n        if (typeof _other === 'string') {\n            _other = RevertError.decode(_other);\n        }\n        if (!(_other instanceof RevertError)) {\n            return false;\n        }\n        if (this._isAnyType || _other._isAnyType) {\n            return true;\n        }\n        if (this._isRawType || _other._isRawType) {\n            return this._raw === _other._raw;\n        }\n        if (this.constructor !== _other.constructor) {\n            return false;\n        }\n        for (const name of Object.keys(this.values)) {\n            const a = this.values[name];\n            const b = _other.values[name];\n            if (a === b) {\n                continue;\n            }\n            if (!_.isNil(a) && !_.isNil(b)) {\n                const { type } = this._getArgumentByName(name);\n                if (!checkArgEquality(type, a, b)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    encode() {\n        if (this._raw !== undefined) {\n            return this._raw;\n        }\n        if (!this._hasAllArgumentValues) {\n            throw new Error(`Instance of ${this.typeName} does not have all its parameter values set.`);\n        }\n        const encoder = createEncoder(this.abi);\n        return encoder(this.values);\n    }\n    toString() {\n        if (this._isRawType) {\n            return `${this.constructor.name}(${this._raw})`;\n        }\n        const values = _.omitBy(this.values, (v) => _.isNil(v));\n        for (const k in values) {\n            const { type: argType } = this._getArgumentByName(k);\n            if (argType === 'bytes') {\n                try {\n                    values[k] = RevertError.decode(values[k]);\n                }\n                catch (err) {\n                }\n            }\n        }\n        const inner = _.isEmpty(values) ? '' : inspect(values);\n        return `${this.constructor.name}(${inner})`;\n    }\n    _getArgumentByName(name) {\n        const arg = _.find(this.arguments, (a) => a.name === name);\n        if (_.isNil(arg)) {\n            throw new Error(`RevertError ${this.signature} has no argument named ${name}`);\n        }\n        return arg;\n    }\n    get _isAnyType() {\n        return _.isNil(this.abi) && _.isNil(this._raw);\n    }\n    get _isRawType() {\n        return !_.isNil(this._raw);\n    }\n    get _hasAllArgumentValues() {\n        if (_.isNil(this.abi) || _.isNil(this.abi.arguments)) {\n            return false;\n        }\n        for (const arg of this.abi.arguments) {\n            if (_.isNil(this.values[arg.name])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nRevertError._typeRegistry = {};\nconst PARITY_TRANSACTION_REVERT_ERROR_MESSAGE = /^VM execution error/;\nconst GANACHE_TRANSACTION_REVERT_ERROR_MESSAGE = /^VM Exception while processing transaction: revert/;\nconst GETH_TRANSACTION_REVERT_ERROR_MESSAGE = /always failing transaction$/;\nexport function getThrownErrorRevertErrorBytes(error) {\n    if (isGanacheTransactionRevertError(error)) {\n        const result = error.results[error.hashes[0]];\n        if (result.reason !== undefined) {\n            return new StringRevertError(result.reason).encode();\n        }\n        if (result.return !== undefined && result.return !== '0x') {\n            return result.return;\n        }\n    }\n    else if (isParityTransactionRevertError(error)) {\n        const { data } = error;\n        const hexDataIndex = data.indexOf('0x');\n        if (hexDataIndex !== -1) {\n            return data.slice(hexDataIndex);\n        }\n    }\n    else {\n        if (isGethTransactionRevertError(error)) {\n        }\n    }\n    throw new Error(`Cannot decode thrown Error \"${error.message}\" as a RevertError`);\n}\nfunction isParityTransactionRevertError(error) {\n    if (PARITY_TRANSACTION_REVERT_ERROR_MESSAGE.test(error.message) && 'code' in error && 'data' in error) {\n        return true;\n    }\n    return false;\n}\nfunction isGanacheTransactionRevertError(error) {\n    if (GANACHE_TRANSACTION_REVERT_ERROR_MESSAGE.test(error.message) && 'hashes' in error && 'results' in error) {\n        return true;\n    }\n    return false;\n}\nfunction isGethTransactionRevertError(error) {\n    return GETH_TRANSACTION_REVERT_ERROR_MESSAGE.test(error.message);\n}\nexport class StringRevertError extends RevertError {\n    constructor(message) {\n        super('StringRevertError', 'Error(string message)', { message });\n    }\n}\nexport class AnyRevertError extends RevertError {\n    constructor() {\n        super('AnyRevertError');\n    }\n}\nexport class RawRevertError extends RevertError {\n    constructor(encoded) {\n        super('RawRevertError', undefined, undefined, typeof encoded === 'string' ? encoded : ethUtil.bufferToHex(encoded));\n    }\n}\nfunction createErrorMessage(name, values) {\n    if (values === undefined) {\n        return `${name}()`;\n    }\n    const _values = _.omitBy(values, (v) => _.isNil(v));\n    const inner = _.isEmpty(_values) ? '' : inspect(_values);\n    return `${name}(${inner})`;\n}\nfunction declarationToAbi(declaration) {\n    let m = /^\\s*([_a-z][a-z0-9_]*)\\((.*)\\)\\s*$/i.exec(declaration);\n    if (!m) {\n        throw new Error(`Invalid Revert Error signature: \"${declaration}\"`);\n    }\n    const [name, args] = m.slice(1);\n    const argList = _.filter(args.split(','));\n    const argData = _.map(argList, (a) => {\n        m = /^\\s*(([_a-z][a-z0-9_]*)(\\[\\d*\\])*)\\s+([_a-z][a-z0-9_]*)\\s*$/i.exec(a);\n        if (!m) {\n            throw new Error(`Invalid Revert Error signature: \"${declaration}\"`);\n        }\n        return {\n            name: m[4],\n            type: m[1],\n        };\n    });\n    const r = {\n        type: 'error',\n        name,\n        arguments: _.isEmpty(argData) ? [] : argData,\n    };\n    return r;\n}\nfunction checkArgEquality(type, lhs, rhs) {\n    try {\n        return RevertError.decode(lhs).equals(RevertError.decode(rhs));\n    }\n    catch (err) {\n    }\n    if (type === 'address') {\n        return normalizeAddress(lhs) === normalizeAddress(rhs);\n    }\n    else if (type === 'bytes' || /^bytes(\\d+)$/.test(type)) {\n        return normalizeBytes(lhs) === normalizeBytes(rhs);\n    }\n    else if (type === 'string') {\n        return lhs === rhs;\n    }\n    else if (/\\[\\d*\\]$/.test(type)) {\n        if (lhs.length !== rhs.length) {\n            return false;\n        }\n        const m = /^(.+)\\[(\\d*)\\]$/.exec(type);\n        const baseType = m[1];\n        const isFixedLength = m[2].length !== 0;\n        if (isFixedLength) {\n            const length = parseInt(m[2], 10);\n            if (lhs.length !== length) {\n                return false;\n            }\n        }\n        for (const [slhs, srhs] of _.zip(lhs, rhs)) {\n            if (!checkArgEquality(baseType, slhs, srhs)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return new B.BigNumber(lhs || 0).eq(rhs);\n}\nfunction normalizeAddress(addr) {\n    const ADDRESS_SIZE = 20;\n    return ethUtil.bufferToHex(ethUtil.setLengthLeft(ethUtil.toBuffer(ethUtil.addHexPrefix(addr)), ADDRESS_SIZE));\n}\nfunction normalizeBytes(bytes) {\n    return ethUtil.addHexPrefix(bytes).toLowerCase();\n}\nfunction createEncoder(abi) {\n    const encoder = AbiEncoder.createMethod(abi.name, abi.arguments || []);\n    return (values) => {\n        const valuesArray = _.map(abi.arguments, (arg) => values[arg.name]);\n        return encoder.encode(valuesArray);\n    };\n}\nfunction createDecoder(abi) {\n    const encoder = AbiEncoder.createMethod(abi.name, abi.arguments || []);\n    return (hex) => {\n        return encoder.decode(hex);\n    };\n}\nfunction toSignature(abi) {\n    const argTypes = _.map(abi.arguments, (a) => a.type);\n    const args = argTypes.join(',');\n    return `${abi.name}(${args})`;\n}\nfunction toSelector(abi) {\n    return (ethUtil\n        .keccak256(Buffer.from(toSignature(abi)))\n        .slice(0, 4)\n        .toString('hex'));\n}\nRevertError.registerType(StringRevertError);\n","export var WalletSupport;\n(function (WalletSupport) {\n    WalletSupport[WalletSupport[\"METAMASK\"] = 0] = \"METAMASK\";\n    WalletSupport[WalletSupport[\"IMTOKEN\"] = 1] = \"IMTOKEN\";\n    WalletSupport[WalletSupport[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n})(WalletSupport || (WalletSupport = {}));\n"],"sourceRoot":""}